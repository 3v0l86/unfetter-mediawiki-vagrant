# RESTBase config
templates:

  wmf-content-1.0.0: &wp/content/1.0.0
    swagger: '2.0'
    # swagger options, overriding the shared ones from the merged specs (?)
    info:
      version: 1.0.0-beta
      title: Wikimedia REST API
      description: >
          This API aims to provide straightforward and low-latency access to
          Wikimedia content and services. It is currently in beta testing, so
          things aren't completely locked down yet. Each entry point has
          explicit stability markers to inform you about development status
          and change policy, according to [our API version
          policy](https://www.mediawiki.org/wiki/API_versioning).

          ### High-volume access
            - As a general rule, don't perform more than 200 requests/s to
              this API.
            - Set a unique `User-Agent` header that allows us to contact you
              quickly. Email addresses or URLs of contact pages work well.
            - Consider using our [HTML
              dumps](https://phabricator.wikimedia.org/T17017) once they
              become available.

      termsOfService: https://wikimediafoundation.org/wiki/Terms_of_Use
      contact:
        name: the Wikimedia Services team
        url: http://mediawiki.org/wiki/RESTBase
      license:
        name: Apache2
        url: http://www.apache.org/licenses/LICENSE-2.0
    x-subspecs:
      - mediawiki/v1/content
      - mediawiki/v1/graphoid
      - mediawiki/v1/mobileapps
    # - mediawiki/v1/revision-scoring
    securityDefinitions:
      mediawiki_auth:
        description: Checks permissions using MW api
        type: apiKey
        in: header
        name: cookie
        x-internal-request-whitelist:
          # allow everything, as it is not possible to list
          # statically all of the domains that could be used
          # for this in MediaWiki-Vagrant
          - /.+/
      header_match:
        description: Checks client ip against one of the predefined whitelists
        x-error-message: This client is not allowed to use the endpoint
        x-whitelists:
          internal:
            - /^(?:::ffff:)?(?:10|127)\./

  wmf-sys-1.0.0: &wp/sys/1.0.0
    info:
      title: Default MediaWiki sys API module
      version: 1.0.0
    paths:
      /{module:table}:
        x-modules:
          # There can be multiple modules too per stanza, as long as the
          # exported symbols don't conflict. The operationIds from the spec
          # will be resolved against all of the modules.
          - name: restbase-mod-table-sqlite
            version: 1.0.0
            type: npm
            options: # Passed to the module constructor
              conf:
                dbname: <%= @dbdir %>/mw-vagrant.sqlite3

      /{module:page_revisions}: &wp/sys/page_revisions
        x-modules:
            - name: page_revisions
              version: 1.0.0
              type: file

      /{module:key_rev_value}: &wp/sys/key_rev_value
        x-modules:
          - name: key_rev_value
            version: 1.0.0
            type: file

      /{module:key_value}: &wp/sys/key_value
        x-modules:
          - name: key_value
            version: 1.0.0
            type: file

      /{module:post_data}: &wp/sys/post_data
        x-modules:
          - name: post_data
            version: 1.0.0
            type: file

      /{module:action}: &wp/sys/action
        x-modules:
          - name: action
            type: file
            options:
              apiRequest:
                method: post
                uri: '<%= scope['::mediawiki::server_url'] %>/w/api.php'
                headers:
                  host: '{$.request.params.domain}'
                body: '{$.request.body}'

      /{module:page_save}: &wp/sys/page_save
        x-modules:
          - name: page_save
            type: file

      /{module:parsoid}: &wp/sys/parsoid
        x-modules:
          - name: parsoid
            version: 1.0.0
            type: file
            options:
              parsoidHost: http://localhost:<%= scope['::mediawiki::parsoid::port'] %>

      /{module:graphoid}/v1/png/{title}/{revision}/{graph_id}:
        get:
          x-request-handler:
            - get_from_graphoid:
                request:
                  uri: http://localhost:<%= @graphoid_port %>/{domain}/v1/png/{title}/{revision}/{graph_id}

      /{module:mobileapps}:
        x-subspec:
          info:
            title: Mobileapps sys API module
          paths:
            /html/{title}:
              get:
                x-request-handler:
                  - get_from_backend:
                      request:
                        uri: http://appservice.wmflabs.org/{domain}/v1/page/mobile-html/{title}
            /sections/{title}:
              get:
                x-request-handler:
                  - get_from_backend:
                      request:
                        uri: http://appservice.wmflabs.org/{domain}/v1/page/mobile-html-sections/{title}
            /sections-lead/{title}:
              get:
                x-request-handler:
                  - get_from_backend:
                      request:
                        uri: http://appservice.wmflabs.org/{domain}/v1/page/mobile-html-sections-lead/{title}
            /sections-remaining/{title}:
              get:
                x-request-handler:
                  - get_from_backend:
                      request:
                        uri: http://appservice.wmflabs.org/{domain}/v1/page/mobile-html-sections-remaining/{title}
            /text/{title}:
              get:
                x-request-handler:
                  - get_from_backend:
                      request:
                        uri: http://appservice.wmflabs.org/{domain}/v1/page/mobile-text/{title}

#      /{module:revscore}:
#        title: Simple revscore service wrapper
#        x-modules:
#          # Generic revision service interface; Expects requests of the form
#          # /{title}/{revision}.
#          # Specific interface documentation (content types etc) at public
#          # entry point, although we might also want to enforce them
#          # internally.
#          - name: restbase-mod-service
#            version: 1.0.0 # simple service module, to be shared
#            options:
#              storage:
#                uri: /{domain}/sys/key_rev_value/revscore.scores/{title}/{revision}
#              service:
#                uri: http://revscore.wikimedia.org/{domain}/{title}/{revision}

  wp-default-1.0.0: &wp/default/1.0.0
    x-subspecs:
      - paths:
          /{api:v1}:
            x-subspec: *wp/content/1.0.0
      - paths:
          /{api:sys}:
            x-subspec: *wp/sys/1.0.0


spec: &spec
  title: "The RESTBase root"
  # Some more general RESTBase info
  paths:
    /{domain:<%= @domain %>}: *wp/default/1.0.0

salt: secret
default_page_size: 100
user_agent: RESTBase/MW-Vagrant
