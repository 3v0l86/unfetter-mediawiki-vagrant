<mediawiki xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" version="0.10">
    <siteinfo xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <sitename>Cyber Analytics Repository</sitename>
        <dbname>wikidb</dbname>
        <base>https://car-internal.mitre.org/wiki/Main_Page</base>
        <generator>MediaWiki 1.25.1</generator>
        <case>first-letter</case>
        <namespaces xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="-2" case="first-letter">Media</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="-1" case="first-letter">Special</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="0" case="first-letter"/>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="1" case="first-letter">Talk</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="2" case="first-letter">User</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="3" case="first-letter">User talk</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="4" case="first-letter">Cyber Analytics Repository</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="5" case="first-letter">Cyber Analytics Repository talk</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="6" case="first-letter">File</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="7" case="first-letter">File talk</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="8" case="first-letter">MediaWiki</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="9" case="first-letter">MediaWiki talk</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="10" case="first-letter">Template</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="11" case="first-letter">Template talk</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="12" case="first-letter">Help</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="13" case="first-letter">Help talk</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="14" case="first-letter">Category</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="15" case="first-letter">Category talk</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="102" case="first-letter">Property</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="103" case="first-letter">Property talk</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="104" case="first-letter">Type</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="105" case="first-letter">Type talk</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="106" case="first-letter">Form</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="107" case="first-letter">Form talk</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="108" case="first-letter">Concept</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="109" case="first-letter">Concept talk</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="170" case="first-letter">Filter</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="171" case="first-letter">Filter talk</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="828" case="first-letter">Module</namespace>
            <namespace xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" key="829" case="first-letter">Module talk</namespace>
        </namespaces>
    </siteinfo>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Main Page</title>
        <ns>0</ns>
        <id>1</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10301</id>
            <parentid>10163</parentid>
            <timestamp>2016-03-29T19:24:28Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1479">{{DISPLAYTITLE: Welcome to the Cyber Analytics Repository}}
Welcome to the downloadable version of the Cyber Analytics Repository (CAR), a knowledge base of analytics developed by [https://www.mitre.org MITRE] based on the [[attack:Main Page|Adversary Tactics, Techniques, and Common Knowledge (ATT&amp;CK™)]] threat model.

If you want to start exploring try viewing a [[Full Analytic List|list of all analytics]] or [[Special:BrowseData|browse analytics]] by their metadata.

Analytics stored in CAR contain the following information
* a ''hypothesis'' which explains the idea behind the analytic
* the ''information domain'' or the primary domain the analytic is designed to operate within (e.g. host, network, process, external)
* references to [[attack:Main_Page|ATT&amp;CK]] Techniques and Tactics that the analytic detexts
* the [[Help:Glossary#Analytic_Type|type of analytic]]
* a pseudocode description of how the analytic might be implemented
* a unit test which can be run to trigger the analytic

CAR is intended to be shared with cyber-defenders throughout the community. Check out the '''[[Help:Contents|help]]''' page for an introduction to using CAR. See the [[Methodology]] page for more information on how CAR analytics are created. For questions regarding the use of the wiki software, consult the [[metawikimedia:Help:Contents|MediaWiki User's Guide]]. Various pages can be added by selecting the Add links in the navigation bar.

Have a question? {{FeedbackEmail}}</text>
            <sha1>pm85inq6qn0n6c2hllibnjnc46ejgwh</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Hypothesis</title>
        <ns>102</ns>
        <id>6</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>11</id>
            <timestamp>2012-12-06T16:44:43Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="46">This is a property of type [[Has type::Text]].</text>
            <sha1>e9l4lxsaidmyd6062gydncspht400ia</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Analytic</title>
        <ns>10</ns>
        <id>8</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10722</id>
            <parentid>10622</parentid>
            <timestamp>2016-04-19T15:01:15Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2074">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;[[Category:Analytics]]{{#ifeq: {{PAGENAME}}|RunQuery||{{DISPLAYTITLE:{{PAGENAME}}: {{{ShortSummary|}}}|}}|}} {{#set:
|Has Analytic Summary={{{ShortSummary|}}}
|Has Short Summary={{{ShortSummary|}}}
|Has Status={{{Status|}}}
|Has Meliora Status={{{MelioraStatus|}}}
|Has Full Analytic Name={{PAGENAME}}: {{{ShortSummary|}}}
|Has Hypothesis={{{Hypothesis|}}}
|Has Analytic Notes={{{AnalyticNotes|}}}
|Has Lessons Learned={{{LessonsLearned|}}}
|Has Analytic Notes={{{AnalyticNotes|}}}
|Has Output Data Description={{{OutputDataDescription|}}}
|Has Status={{{Status|}}}
|Has Meliora Status={{{MelioraStatus|}}}
}}__NOEDITSECTION__
{{Analytic Infobox
|SubmissionDate={{{SubmissionDate|}}}
|Owner={{{Owner|}}}
|Domains={{{InformationDomain|}}}
|HostSubtypes={{{HostSubtypes|}}}
|NetworkSubtypes={{{NetworkSubtypes|}}}
|NetworkProtocols={{{NetworkProtocols|}}}
|ExternalSubtypes={{{ExternalSubtypes|}}}
|AnalyticTypes={{{AnalyticType|}}}
|AnalyticSubtypes={{{AnalyticSubtypes|}}}
|Status={{{Status|}}}
|MelioraStatus={{{MelioraStatus|}}}
}}
{{{Hypothesis|}}}
{{#if: {{{LessonsLearned|}}}
|== Lessons Learned == 
{{{LessonsLearned|}}}
|&amp;#32;}}
{{#if: {{{Files|}}}
|== File Attachments ==
{{#arraymap: {{{Files|}}}|;|$File|[[:File:$File|$File]]|&lt;br/&gt;}}
|&amp;#32;}}
{{#if:{{{OutputDataDescription|}}}
|== Output Description == 
{{{OutputDataDescription|}}}
|&amp;#32;}}
{{#ifeq:{{{IntellectualProperty|None}}}|None||&lt;p&gt;{{AnalyticDisclaimer|{{{IntellectualProperty}}}|}}&lt;/p&gt;}}

{{#if: {{{ATTACK References|}}}
|== ATT&amp;CK Detection ==
&lt;table class="attack_refs wikitable sortable"&gt;
&lt;tr&gt;&lt;th&gt;Technique&lt;/th&gt;&lt;th&gt;Tactics&lt;/th&gt;&lt;th&gt;Level of Coverage&lt;/th&gt;&lt;/tr&gt;
{{{ATTACK References|}}}
&lt;/table&gt;
}}
{{#if: {{{Pseudocode|}}}
|== Pseudocode ==
{{{Pseudocode|}}}
|{{#set: Has Pseudocode=False}}&amp;#32;}}
{{#if: {{{AnalyticNotes|}}}
|== Notes == 
{{{AnalyticNotes|}}}
|&amp;#32;}}
{{#if: {{{UnitTests|}}}
|== Unit Tests ==
{{{UnitTests|}}}
|&amp;#32;}}
{{#if: {{{AnalyticInstantiations|}}}
|== Instantiations ==
{{{AnalyticInstantiations|}}}
|&amp;#32;}}&lt;/includeonly&gt;</text>
            <sha1>jl8xxqpusp5kvdlxr4emz0j9b3ip93f</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Form:Analytic</title>
        <ns>106</ns>
        <id>9</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>11001</id>
            <parentid>10863</parentid>
            <timestamp>2016-07-11T15:52:45Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="9110">&lt;noinclude&gt;
This is the "Analytic" form.
To create a page with this form, enter the page name below;
if a page with that name already exists, you will be sent to a form to edit that page.

{{#forminput:form=Analytic}}

&lt;/noinclude&gt;
Don't see an input option you need? {{FeedbackEmail}}
&lt;includeonly&gt;
&lt;span class="requiredField"&gt;&lt;/span&gt; denotes a mandatory field
{{{info|page name=CAR-{{CURRENTYEAR}}-{{CURRENTMONTH}}-&lt;unique number;start=001&gt;}}}
&lt;div id="wikiPreview" style="display: none; padding-bottom: 25px; margin-bottom: 25px; border-bottom: 1px solid #AAAAAA;"&gt;&lt;/div&gt;
{{{for template|Analytic}}}
{{{field|MaximumInstantiationId|hidden}}}
{| class="analyticform stackedform"
|- class="requiredField"
! Title
| {{{field|ShortSummary|input type=text|maxlength=255|mandatory|placeholder=A title for this Analytic}}} {{#info: ''Enter Title For the Analytic. The title should describe generally what the analytic is. Once an analytic is saved, "CAR + the date" are prepended to the title given''}}
|- class="requiredField"
! Hypothesis
| {{{field|Hypothesis|input type=textarea|mandatory|placeholder=A descriptive hypothesis as to what you hope to determine}}} {{#info:{{Definition|Hypothesis}}}}
|- class="requiredField"
! Submission Date
| {{{field|SubmissionDate|mandatory|input type=datepicker|disable input field|date format=mm/dd/yy|default={{CURRENTYEAR}}/{{CURRENTMONTH}}/{{CURRENTDAY2}} }}} {{#info:''The date of first submission of this analytic. Defaults to the date of first creation but can be changed (if, for example, the analytic as a whole changes substantially but you want to maintain the original name)''}}
|-
! Owner
| {{{field|Owner|input type=text with autocomplete|maxlength=255|default={{UserRealName}}|values from property=Has Owner}}} {{#info:''The "owner" of the analytic. Defaults to the user who first creates it.''}}
|-
! Analytic Type
| {{{field|AnalyticType|input type=tokens|values from property=Has Analytic Type}}} {{#info: ''{{Definition|Analytic Type}}|}}
|-
! Information Domain
| {{{field|InformationDomain|input type=checkboxes|values from property=Has Information Domain|show on select=Analytic=&gt;Analytic_Subtypes;External=&gt;External_Subtypes;Host=&gt;Host_Subtypes;Network=&gt;Network_Subtypes;Network=&gt;Network_Protocols;Other=&gt;Other_Subtype}}} {{#info:{{Definition|Information Domain}}}}

|- id="Other_Subtype"
!
| {{{field|OtherInformationDomains|input type=tokens|placeholder=Additional Information Domains}}}
|- id="Analytic_Subtypes" 
! Analytic Subtypes
| {{{field|AnalyticSubtypes|input type=tokens|values from property=Has Analytic Subtype}}} {{#info: ''{{Definition|Analytic Subtype}}|}}  

|- id="External_Subtypes" 
! External Subtypes
| {{{field|ExternalSubtypes|input type=tokens|values from property=Has External Subtype}}} {{#info: ''{{Definition|External Subtype}}|}} 

|- id="Host_Subtypes" 
! Host Subtypes
| {{{field|HostSubtypes|input type=tokens|values from property=Has Host Subtype}}} {{#info: ''{{Definition|Host Subtype}}|}} 

|- id="Network_Subtypes" 
! Network Subtypes
| {{{field|NetworkSubtypes|input type=tokens|values from property=Has Network Subtype}}} {{#info: ''{{Definition|Network Subtype}}|}}

|- id="Network_Protocols"
! Network Protocols
| {{{field|NetworkProtocols|input type=tokens|values from property=Has Network Protocol}}} {{#info: ''A list of Network Protocols to categorize by.''}}
|-
! Output Data Description
| {{{field|OutputDataDescription|input type=textarea|placeholder=A generic description of the output (logical). Field specifics should be entered in the Instantiations.}}} {{#info:''A generic description of what the output of this analytic will be. For example, "A list of hosts and their IP Addresses". Specifics regards the actual fields returned should be addressed in the individual instantiations.''}}
|-
! Notes
| {{{field|AnalyticNotes|input type=textarea|placeholder=Enter any general information notes here.}}} {{#info:''Any general information notes regarding the overall analytic should be mentioned here. For example you may want to mention that this analytic idea is based on using a specific program.''}}
|-
! Lessons Learned
| {{{field|LessonsLearned|input type=textarea|placeholder=Enter any lessons learned information here.}}} {{#info:''Any lessons learned in the course of working on this analytic that are pertinent to the analytic as a whole (as opposed to specific instantiations). This field is particularly helpful when describing why an analytic idea didn't work as hypothesised. Any instantiation related lessons learned should be described in the instantiation.''}}
|-
! Attach Files
| {{{field|Files|input type=tokens|uploadable|values from property=Has Upload File|values from namespace=File|delimiter=;}}}
|-
! Intellectual Property
| {{{field|IntellectualProperty|input type=radiobutton|default=MITRE|values=None,MITRE,NSA,MITRE/NSA}}}
|-
! Status
| {{{field|Status|input type=radiobutton|values=Idea,Unverified,Active,Refuted,Deprecated}}}
|-
! Meliora Approved
| {{{field|MelioraStatus|input type=checkbox|default=No}}}
|}
{{{field|ATTACK References|hidden|holds template}}}{{{field|Pseudocode|hidden|holds template}}}{{{field|UnitTests|hidden|holds template}}}{{{field|AnalyticInstantiations|hidden|holds template}}}
{{{end template}}}

{{{for template|Analytic Pseudocode|label=Pseudocode for Analytic|embed in field=Analytic[Pseudocode]}}}
{| class="formtable stackedform"
! Description
| {{{field|Description|input type=textarea}}}
|-
! Pseudo Code
| {{{field|Example Query|input type=textarea}}}
|-
! Required Data Model Fields
| {{{field|Required Fields|input type=tokens|multiple|size=100|values from property=Has Object Requirement}}}

|}
{{{end template}}}

{{{for template|ATTACK Reference|multiple|label=ATT&amp;CK Techniques|embed in field=Analytic[ATTACK References]}}}
{| class="formtable stackedform"
|- class="requiredField"
! Technique
| {{{field|Technique|mandatory|input type=dropdown|values from property=Has Technique ID|size=100}}} &lt;!-- |mapping template=ATTACK Form Mapping}}} --&gt;
|- class="requiredField"
! Tactics
| {{{field|Tactics|mandatory|input type=tokens|values from property=Has Tactic Name}}}
|- class="requiredField"
! Coverage
| {{{field|Coverage|mandatory|input type=radiobutton|size=100|values=Low,Moderate,High|default=Moderate}}}
|}
{{{end template}}}

{{{for template|Analytic Instantiation|multiple|label=Instantiations for this Analytic|embed in field=Analytic[AnalyticInstantiations]}}}
{{{field|Instantiation Id|hidden}}}
{| class="formtable stackedform"
|- class="requiredField"
! Lead Developer 
| {{{field|Lead Developer|input type=text|maxlength=255|mandatory|default={{UserRealName}} }}}
|-
! Platform
| {{{field|Platform|input type=combobox|values from property=Has Platform}}}
|-
! Maturity Level
| {{{field|Maturity Level|input type=radiobutton|values from property=Has Maturity Level}}} {{#info: {{Definition|Maturity Level}} }}
|-
! Certainty Probability
| {{{field|Certainty Probability|input type=dropdown|values from property= Has a Certainty Probability}}} {{#info: {{Definition|Certainty Probability}}&lt;br/&gt;[[Help:Contents#Certainty Probability Scale|Scale]] }}
|-
! Programming Language
| {{{field|Programming Language|input type=combobox|values from property=Has Programming Language}}}
|-
! Other Developers
| {{{field|Other Developers|input type=tokens|values from property=Has Developer|maxlength=255}}}
|-
! Instantiation Notes
| {{{field|Instantiation Notes|input type=textarea|placeholder=Enter your instantiation notes here}}}
|-
! Query Name
| {{{field|Query Link|input type=text|size=80}}}
|-
! Example Query
| &lt;!-- build the string {{pipe}} --&gt;  {{#vardefine:lb|{|}}{{#vardefine:rb|}|}} {{{field|Example Query|input type=textarea|placeholder=Enter your query. YOU MUST escape pipes with {{#var:lb}}{{#var:lb}}pipe{{#var:rb}}{{#var:rb}}|}}}
|-
! Performance Notes
| {{{field|Performance Notes|input type=textarea|placeholder=x time with y data using z machines}}}
|-
! Files
| {{{field|Files|uploadable|remote autocomplete|input type=tokens|values from property=Has Upload File|default=|namespace=File|delimiter=;}}}
|-
! Output Format
| {{{field|Output Command|input type=combobox|values from property=Has Output Command}}}
&lt;!--
|-
! Output Format
| {{{field|Output Format|input type=tokens|values from property=Has Output Format}}}
--&gt;
|}
{{{end template}}}

{{{for template|Analytic Unit Test|multiple|label=Test Cases|embed in field=Analytic[UnitTests]}}}
{| class="formtable stackedform"
! Verified Configurations
| {{{field|Configurations|input type=tokens|values from property=Has Test Configuration}}}
|-
! Requirements
| {{{field|Requirements|input type=tokens|values from property=Has Test Requirement}}}
|-
! Description
| {{{field|Description|input type=textarea}}}
|-
! Command(s)
| &lt;!-- build the string {{pipe}} --&gt;  {{#vardefine:lb|{|}}{{#vardefine:rb|}|}}  {{{field|Command|input type=textarea|placeholder=Enter your command(s). YOU MUST escape pipes with {{#var:lb}}{{#var:lb}}pipe{{#var:rb}}{{#var:rb}}|}}}
|}
{{{end template}}}
{{{standard input|save}}} {{{standard input|cancel}}}
&lt;/includeonly&gt;</text>
            <sha1>fxqqb34lt3arsowody0niyn9nzrq5ee</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Category:Analytics</title>
        <ns>14</ns>
        <id>10</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10871</id>
            <parentid>10870</parentid>
            <timestamp>2016-06-23T16:48:35Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="870">__SHOWINDRILLDOWN__
This category uses the form {{#default_form: Analytic}}. The detailed [[Full Analytic List|analytic list]] provides a table view of the summarizing properties.
{{#drilldowninfo:
|single
|filters=
Information Domain (property=Has Information Domain),
Analytic Status (property=Has Status),
Pseudocode (property=Has Pseudocode),
Unit Tests (property=Has Test Case),
Analytic Type (property=Has Analytic Type),
Analytic Subtypes (property=Has Analytic Subtype),
Host Subtypes (property=Has Host Subtype,requires=Information Domain),
Network Subtypes (property=Has Network Subtype,requires=Information Domain),
Protocol (property=Has Network Protocol,requires=Information Domain),
Date (property=Has Submission Date),
ATT&amp;CK Tactic (property=Has ATTACK Tactic),
ATT&amp;CK Technique (property=Has ATTACK Technique)
|display parameters=?Has Short Summary=
}}
</text>
            <sha1>4zleuqh0kmtk0etthio8w249901fuln</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>MediaWiki:Sidebar</title>
        <ns>8</ns>
        <id>12</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10294</id>
            <parentid>10291</parentid>
            <timestamp>2016-03-28T22:02:18Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="508">* navigation
** mainpage|mainpage-description
** Full Analytic List|Analytic List
** Special:BrowseData|Data Drilldown
** Contribute|Contribute
** Help:Contents#|Help
* Coverage
** Data Model|Data Model
** Special:BrowseData/Sensors|Sensors
* Add
** Special:FormEdit/Analytic|Add Analytic
** Special:FormEdit/Data Model Object|Add Data Model
** Special:FormEdit/Sensor|Add Sensor
** Special:FormEdit/Sensor Suite|Add Sensor Suite
* SEARCH
* TOOLBOX
* LANGUAGES
* Contact
** mailto:car@mitre.org | Contact Us
</text>
            <sha1>2veit05x8u9jbur20dzfnf8x79genos</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Full Analytic List</title>
        <ns>0</ns>
        <id>20</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10597</id>
            <parentid>10058</parentid>
            <timestamp>2016-04-14T05:45:51Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="448">&lt;noinclude&gt;Below is a list of all of the analytics in {{SITENAME}}.


&lt;/noinclude&gt;
{{#ask: &lt;noinclude&gt;[[Concept:AllAnalytics]]&lt;/noinclude&gt;&lt;includeonly&gt;[[{{#arraymap: {{{Analytics|}}}|,|$|${{!!}}|}}NULL]]&lt;/includeonly&gt;
|default=None
|limit=10000
|class=sortable wikitable smwtable allanalyticstable
|mainlabel=Analytic
|?Has Short Summary=Summary
|?Has Hypothesis=Hypothesis
|?Has Analytic Type=Type
|?Has ATTACK Technique Link=ATT&amp;CK Techniques
}}
</text>
            <sha1>0hpjq8dsj9h7jf8xd3p6dimjawptmbs</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Information Domain</title>
        <ns>102</ns>
        <id>22</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10948</id>
            <parentid>5807</parentid>
            <timestamp>2016-06-30T15:33:34Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="220">This is a property of type [[Has type::String]].

The following values are allowed:
* [[Allows value::Analytic]]
* [[Allows value::Host]]
* [[Allows value::External]]
* [[Allows value::Network]]
* [[Allows value::Other]]</text>
            <sha1>8e3enhz45wvldm4yecpueyrsl3trwqn</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Short Summary</title>
        <ns>102</ns>
        <id>23</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>66</id>
            <timestamp>2012-12-06T20:21:09Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Lessons Learned</title>
        <ns>102</ns>
        <id>31</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>112</id>
            <timestamp>2012-12-06T21:20:16Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="46">This is a property of type [[Has type::Text]].</text>
            <sha1>e9l4lxsaidmyd6062gydncspht400ia</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Lead Developer</title>
        <ns>102</ns>
        <id>36</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>8215</id>
            <parentid>136</parentid>
            <timestamp>2015-05-05T18:55:31Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="105">This is a property of type [[Has type::String]], and is a SubProperty of [[subpropertyof::Has Developer]]</text>
            <sha1>jchtye9b4lt1dzdtpq0msxgk448prfk</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Platform</title>
        <ns>102</ns>
        <id>37</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6770</id>
            <parentid>1859</parentid>
            <timestamp>2015-03-13T19:53:14Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Programming Language</title>
        <ns>102</ns>
        <id>38</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10957</id>
            <parentid>6766</parentid>
            <timestamp>2016-06-30T15:44:28Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="246">This is a property of type [[Has type::String]].
The following values are allowed:
* [[Allows value::Python]]
* [[Allows value::Java]]
* [[Allows value::Pig]]
* [[Allows value::PySpark]]
* [[Allows value::Scala]]
* [[Allows value::ElasticSearch]]</text>
            <sha1>375348gwqf471ymvvqetv8d5654v64f</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Other Developer</title>
        <ns>102</ns>
        <id>39</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>8213</id>
            <parentid>8211</parentid>
            <timestamp>2015-05-05T18:55:02Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="105">This is a property of type [[Has type::String]], and is a SubProperty of [[subpropertyof::Has Developer]]</text>
            <sha1>jchtye9b4lt1dzdtpq0msxgk448prfk</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Performance Notes</title>
        <ns>102</ns>
        <id>40</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>276</id>
            <parentid>140</parentid>
            <timestamp>2012-12-10T17:55:53Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="46">This is a property of type [[Has type::Text]].</text>
            <sha1>e9l4lxsaidmyd6062gydncspht400ia</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Analytic Instantiation</title>
        <ns>10</ns>
        <id>41</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10813</id>
            <parentid>10292</parentid>
            <timestamp>2016-05-17T14:53:20Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2355">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;{{#set_internal:Is Analytic Instantiation Of
|Has Instantiation Id={{{Instantiation Id|}}}
|Has Instantiation Name={{PAGENAME}}.{{{Instantiation Id|}}}
|Has Lead Developer={{{Lead Developer|}}}
|Has Developer={{{Lead Developer|}}}
|Has Platform={{{Platform|}}}
|Has Platform Other={{{Platform Other|}}}
|Has Maturity Level={{{Maturity Level|}}}
|Has a Certainty Probability={{{Certainty Probability|}}}
|Has Programming Language={{{Programming Language|}}}
|Has Programming Language Other={{{Programming Language Other|}}}
|Has Input Data Format={{{Input Data Format|}}}
|Has Output Data Format={{{Output Data Format|}}}
|Has Other Developer#list={{{Other Developers|}}}
|Has Developer#list={{{Other Developers|}}}
|Has Instantiation Notes={{{Instantiation Notes|}}}
|Has Example Query={{{Example Query|}}}
|Has Query Link={{{Query Link|}}}
|Has Performance Notes={{{Performance Notes|}}}
|Has Inst Upload File1={{{InstUploadFile1|}}}
|Has Inst Upload File2={{{InstUploadFile2|}}}
|Has Inst Upload File3={{{InstUploadFile3|}}}
|Has Output Command={{{Output Command|}}}
|Has Output Format#list={{{Output Format|}}}
}}{{AnalyticInstantiationDetail
|?Has Instantiation Id={{{Instantiation Id|}}}
|?Has Instantiation Name={{#ifeq: {{PAGENAME}}|RunQuery|Instantiation |{{PAGENAME}}.}}{{{Instantiation Id|}}}
|?Has Lead Developer={{{Lead Developer|}}}
|?Has Developer={{{Lead Developer|}}}
|?Has Platform={{{Platform|}}}
|?Has Platform Other={{{Platform Other|}}}
|?Has Maturity Level={{{Maturity Level|}}}
|?Has a Certainty Probability={{{Certainty Probability|}}}
|?Has Programming Language={{{Programming Language|}}}
|?Has Programming Language Other={{{Programming Language Other|}}}
|?Has Input Data Format={{{Input Data Format|}}}
|?Has Output Data Format={{{Output Data Format|}}}
|?Has Other Developer#list={{{Other Developers|}}}
|?Has Developer#list={{{Other Developers|}}}
|?Has Instantiation Notes={{{Instantiation Notes|}}}
|?Has Example Query={{{Example Query|}}}
|?Has Query Link={{{Query Link|}}}
|?Has Performance Notes={{{Performance Notes|}}}
|?Has Inst Upload File1={{{InstUploadFile1|}}}
|?Has Inst Upload File2={{{InstUploadFile2|}}}
|?Has Inst Upload File3={{{InstUploadFile3|}}}
|?Has Output Command={{{Output Command|}}}
|?Has Output Format#list={{{Output Format|}}}
}}&lt;/includeonly&gt;</text>
            <sha1>fpp1jf5gyhb2uyrqfpmqklenpj9ht6h</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Instantiation Notes</title>
        <ns>102</ns>
        <id>44</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>318</id>
            <parentid>148</parentid>
            <timestamp>2012-12-12T15:34:56Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="46">This is a property of type [[Has type::Text]].</text>
            <sha1>e9l4lxsaidmyd6062gydncspht400ia</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Analytic Notes</title>
        <ns>102</ns>
        <id>55</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>266</id>
            <timestamp>2012-12-10T16:42:24Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="46">This is a property of type [[Has type::Text]].</text>
            <sha1>e9l4lxsaidmyd6062gydncspht400ia</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:AnalyticQuery</title>
        <ns>10</ns>
        <id>60</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7138</id>
            <parentid>7137</parentid>
            <timestamp>2015-03-17T07:57:12Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1910">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;{{#ifeq:{{{SearchDataFormat}}}
|table
|=== Results: ===
|'''Click the link below to download the search results in {{{SearchDataFormat}}}:'''
}}

{{#ask:
[[Category:Analytics]]
{{#if: {{{Owners|}}} 
| [[Has Owner::{{#arraymap:{{{Owners|}}}|,|x|x|{{!!}}}}]]
}}
{{#if: {{{ShortSummary|}}} 
| [[Has Short Summary::~*{{{ShortSummary|}}}*]]
}}
{{#if: {{{Hypothesis|}}} 
| [[Has Hypothesis::~*{{{Hypothesis|}}}*]]
}}
{{#if: {{{InformationDomain|}}} 
| [[Has Information Domain::{{#arraymap:{{{InformationDomain|}}}|,|x|x|{{!!}}}}]]
}}
{{#if: {{{HostSubtypes|}}} 
| [[Has Host Subtype::{{#arraymap:{{{HostSubtypes|}}}|,|x|x|{{!!}}}}]]
}}
{{#if: {{{NetworkSubtypes|}}} 
| [[Has Network Subtype::{{#arraymap:{{{NetworkSubtypes|}}}|,|x|x|{{!!}}}}]]
}}
{{#if: {{{NetworkProtocols|}}} 
| [[Has Network Protocol::{{#arraymap:{{{NetworkProtocols|}}}|,|x|x|{{!!}}}}]]
}}
{{#if: {{{ExternalSubtypes|}}} 
| [[Has External Subtype::{{#arraymap:{{{ExternalSubtypes|}}}|,|x|x|{{!!}}}}]]
}}
{{#if: {{{AnalyticType|}}} 
| [[Has Analytic Type::{{#arraymap:{{{AnalyticType|}}}|,|x|x|{{!!}}}}]]
}}
{{#if: {{{AnalyticSubtypes|}}} 
| [[Has Analytic Subtype::{{#arraymap:{{{AnalyticSubtypes|}}}|,|x|x|{{!!}}}}]]
}}
{{#if: {{{OutputDataDescription|}}}
| [[Has Output Data Description::~*{{{OutputDataDescription|}}}*]]
}} 
|default=No Records Found Matching Search Criteria
|format={{{SearchDataFormat}}}
|limit=500
|mainlabel=Analytic
|?Has Short Summary=Summary 
|?Has Hypothesis=Hypothesis
|?Has Submission Date=Submission Date
|?Has Information Domain=Information Domain
|?Has Host Subtype=Host Subtypes
|?Has Network Subtype=Network Subtypes
|?Has Network Protocol=Network Protocols
|?Has External Subtype=External Subtypes
|?Has Analytic Type=Analytic Type
|?Has Analytic Subtype=Analytic Subtypes
|?Has Analytic Notes=Notes
|?Has Lessons Learned=Lessons Learned
}}
&lt;/includeonly&gt;</text>
            <sha1>rb7gzda9ro1ais5nrw66yhohxq1irw5</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Concept:AllAnalytics</title>
        <ns>108</ns>
        <id>63</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>310</id>
            <timestamp>2012-12-11T19:28:48Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="142">{{#concept: [[Category:Analytics]]
| All Analytics in the CAR. 
  To add more analytics, click the "Add a new Analytic" link in the sidebar
}}</text>
            <sha1>ss5q4041mynqxt868ctprnzhfhuswtr</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Submission Date</title>
        <ns>102</ns>
        <id>78</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>357</id>
            <timestamp>2012-12-12T20:12:57Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="46">This is a property of type [[Has type::Date]].</text>
            <sha1>9mgrgetkvo2j5ek3mccsi459e034o4e</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:FeedbackEmail</title>
        <ns>10</ns>
        <id>96</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>8410</id>
            <parentid>7457</parentid>
            <timestamp>2015-07-22T20:21:05Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="100">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;[mailto:car@mitre.org Contact us]&lt;/includeonly&gt;</text>
            <sha1>gy6wq0brzzst3fmf9y663hwdpxqnjr2</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>MediaWiki:Login</title>
        <ns>8</ns>
        <id>121</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>589</id>
            <parentid>588</parentid>
            <timestamp>2012-12-19T20:32:26Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="6">Log in</text>
            <sha1>sxwk6bukafuxpwi2dazhtntqxbt0iso</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>MediaWiki:Loginprompt</title>
        <ns>8</ns>
        <id>122</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>591</id>
            <parentid>590</parentid>
            <timestamp>2012-12-19T20:36:30Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="0"/>
            <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>MediaWiki:Common.css</title>
        <ns>8</ns>
        <id>138</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>8448</id>
            <parentid>7955</parentid>
            <timestamp>2015-08-13T21:36:13Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>css</model>
            <format>text/css</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="4687">/* CSS placed here will be applied to all skins */

#if_matrix {
    width: 100%;
    overflow:auto;
    height: 1080px;
    border: 0;
}

table.analytictable {
    margin: 0px !important;
}

label.availableFields {
   display: block;
}

table.attackquery span.checkboxSwitches {
    display: none;
}

table.attackquery label.availableFields {
    display: none;
}

table.sensor_table td.alias {
   padding:5px;
}

table.sensor_table td.alias input {
   width:92%;
}

table.sensor_table th {
   text-align: left !important;
}

table.sensor_table td {
    text-align: center !important;
}

table.sensor_table th a {
     color: black;
}

table.stackedform tr td, table.stackedform tr th {
    text-align: left;
    display: table-row;
    font-size: 10pt;
}

table.stackedform th {
    font-weight: bold;
    font-size: 12pt !important;
}

table.stackedform div.sfTokens {
    max-width: 600px;
}

table.stackedform input.mw-ui-input,table.stackedform textarea {
    width: 600px !important;
   -webkit-box-sizing: border-box; /* For legacy WebKit based browsers */
      -moz-box-sizing: border-box; /* For legacy (Firefox &lt;29) Gecko based browsers */
           box-sizing: border-box;
}

span.requiredField::after { 
    content:"* "; color:red;
}

.requiredField th::after {
   content:"* "; color:red;
}


div.smwpre {
    font-size: 14px;
}

div.graphviz {
    max-width: 100%;
    max-height:100%;
}

div#completedItems {
    text-decoration: line-through;
}

table.analytictable th, table.analytictable td {
    vertical-align: top;
    margin-left:2px;
}
table.analytictable th {
    text-align: right !important;
    white-space: nowrap;
}

table.allanalyticstable td a {
    white-space: nowrap;
}

tr.hiddenrow {
    display: none;
}

table.fields_table {
    text-align: left !important;
}

table.fields_table th, table.fields_table td {
    text-align: left !important;
    vertical-align: center;
    min-width: 0px !important;
}
table.dependencytable td {
    vertical-align: top;
}

table.dependencytable td a {
    white-space: nowrap;
}

table.analyticinstantiationdetail {    
    width: 100%;
}
table.analyticinstantiationdetail th {    
    font-weight:bold;
    text-align: right;
    min-width: 140px;
}
th.leaddeveloper {
    text-align: left;
    white-space: nowrap;
    width: 125px;
    font-size: 11pt;
}

td.leaddeveloper {
   font-size: 11pt;
}

.analyticinstantiationdetaillabel {
    font-weight: bold;
    display: inline;
}

.analyticinstantiationdetailsubhead {
    font-weight: bold;
}

/* Infobox template style */
.infobox {
    border: 1px solid #aaa;
    background-color: #f9f9f9;
    color: black;
    /* @noflip */
    margin: 0.5em 0 0.5em 1em;
    padding: 0.2em;
    /* @noflip */
    float: right;
    /* @noflip */
    clear: right;
    /* @noflip */
    text-align: left;
    font-size: 88%;
    line-height: 1.5em;
}
.infobox caption {
    font-size: 125%;
    font-weight: bold;
}
.infobox td,
.infobox th {
    vertical-align: top;
}
.infobox.bordered {
    border-collapse: collapse;
}
.infobox.bordered td,
.infobox.bordered th {
    border: 1px solid #aaa;
}
.infobox.bordered .borderless td,
.infobox.bordered .borderless th {
    border: 0;
}

.infobox.sisterproject {
    width: 20em;
    font-size: 90%;
}

.infobox.standard-talk {
    border: 1px solid #c0c090;
    background-color: #f8eaba;
}
.infobox.standard-talk.bordered td,
.infobox.standard-talk.bordered th {
    border: 1px solid #c0c090;
}

/* styles for bordered infobox with merged rows */
.infobox.bordered .mergedtoprow td,
.infobox.bordered .mergedtoprow th {
    border: 0;
    border-top: 1px solid #aaa;
    /* @noflip */
    border-right: 1px solid #aaa;
}

.infobox.bordered .mergedrow td,
.infobox.bordered .mergedrow th {
    border: 0;
    /* @noflip */
    border-right: 1px solid #aaa;
}

/* Styles for geography infoboxes, eg countries,
   country subdivisions, cities, etc.            */
.infobox.geography {
    border-collapse: collapse;
    line-height: 1.2em;
    font-size: 90%;
}

.infobox.geography  td,
.infobox.geography  th {
    border-top: 1px solid #aaa;
    padding: 0.4em 0.6em 0.4em 0.6em;
}
.infobox.geography .mergedtoprow td,
.infobox.geography .mergedtoprow th {
    border-top: 1px solid #aaa;
    padding: 0.4em 0.6em 0.2em 0.6em;
}

.infobox.geography .mergedrow td,
.infobox.geography .mergedrow th {
    border: 0;
    padding: 0 0.6em 0.2em 0.6em;
}

.infobox.geography .mergedbottomrow td,
.infobox.geography .mergedbottomrow th {
    border-top: 0;
    border-bottom: 1px solid #aaa;
    padding: 0 0.6em 0.4em 0.6em;
}

.infobox.geography .maptable td,
.infobox.geography .maptable th {
    border: 0;
    padding: 0;
}</text>
            <sha1>mru1vkp079mruiirz9josrhh4fd1i38</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:AnalyticInstantiationQuery</title>
        <ns>10</ns>
        <id>151</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10288</id>
            <parentid>9080</parentid>
            <timestamp>2016-03-28T20:14:42Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2597">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;{{#ifeq:{{{SearchDataFormat}}}
|table
|=== Results: ===
|}}{{#ifeq:{{{SearchDataFormat}}}
|csv the link below to download the search results in CSV format:'''
|}}{{#ifeq:{{{SearchDataFormat}}}
|json
|'''Click the link below to download the search results in JSON format:'''
|}}
{{Hidden
|&lt;!-- Avoid newline generation from empty space --&gt;
{{#arraydefine: RequestedFields|{{{Available Fields|}}}|,}}
{{#arraydefine: Space|,}}
{{#arraydiff: RequestedFields|RequestedFields|Space}}
{{#arraydefine: AllFields|{{#ask: [[Has DataModel Field::+]]|mainlabel=-|?Has DataModel Field=}}|,}}
{{#arraydiff: MissingFields|AllFields|RequestedFields}}

&lt;!-- First find what instantiations have any of these fields --&gt;
{{#arraydefine: PossibleInstantiations
|{{#ask: [[Is Analytic Instantiation Of::+]] [[Has Required Field::{{#arrayprint: RequestedFields|{{!!}}}}]]
|link=none}}
|,
}}

&lt;!-- Now find the instantiations that impose additional requirements --&gt;
{{#arraydefine: ImpossibleInstantiations
|{{#ask: [[Is Analytic Instantiation Of::+]] [[Has Required Field::{{#arrayprint: MissingFields|{{!!}}}}]]
|link=none}}
|,
}}

&lt;!-- Finally subtract off the ones that are impossible --&gt;
{{#arraydiff: PossibleInstantiations|PossibleInstantiations|ImpossibleInstantiations}}

&lt;!-- End hidden section --&gt;
}}
{{#ask:
[[Is Analytic Instantiation Of::+]]
{{#if: {{{Lead Developer|}}} | [[Has Lead Developer::~*{{{Lead Developer|}}}*]] }}
{{#if: {{{Platform|}}} | [[Has Platform::{{#arraymap:{{{Platform|}}}|,|$|$|{{!!}}|}}]] }}
{{#if: {{{Maturity Level|}}} | [[Has Maturity Level::{{#arraymap:{{{Maturity Level|}}}|,|$|$|{{!!}}|}}]]}}
{{#if: {{{Certainty Probability|}}} | [[Has a Certainty Probability::{{#ifeq: ={{{Certainty Compare|}}}
|==||{{{Certainty Compare|}}}|}}{{{Certainty Probability|+}}}]]| }}
{{#if: {{{Programming Language|}}} | {{#arraymap:{{{Programming Language|}}}|,|x|[[Has Programming Language::x]]| }} }}
{{#if: {{{Other Developers|}}} | [[Has Other Developers::~*{{{Other Developers|}}}*]] }}
{{#if: {{{Available Fields|}}}| [[{{#arrayprint:PossibleInstantiations|{{!!}}}}]]}}
|default=No Records Found Matching Search Criteria
|format={{{SearchDataFormat}}}
|limit=500
|mainlabel=-
|?Has Instantiation Name=Name
|?Is Analytic Instantiation Of=Analytic
|?Has Lead Developer=Lead Developer
|?Has Platform=Platform
|?Has Maturity Level=Maturity Level
|?Has a Certainty Probability=Certainty Probability
|?Has Programming Language=Programming Language
|?Has Other Developers=Other Developers
|?Has Required Field=Required Fields
}}
&lt;/includeonly&gt;</text>
            <sha1>bi7757c3stvso8iu882q5kg6uwt1oht</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Form:AnalyticInstantiationQuery</title>
        <ns>106</ns>
        <id>152</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>9077</id>
            <parentid>9075</parentid>
            <timestamp>2016-01-15T22:10:56Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1851">&lt;noinclude&gt;
This is the "AnalyticInstantiationQuery" form.
To create a page with this form, enter the page name below;
if a page with that name already exists, you will be sent to a form to edit that page.

{{#forminput:form=AnalyticInstantiationQuery}}

&lt;/noinclude&gt;&lt;includeonly&gt;
{{{info|query form at top|query title=Search for Analytic Instantiations}}}
'''Note: All text inputs will perform partial matches but are case sensitive'''
&lt;div id="wikiPreview" style="display: none; padding-bottom: 25px; margin-bottom: 25px; border-bottom: 1px solid #AAAAAA;"&gt;&lt;/div&gt;
{{{for template|AnalyticInstantiationQuery}}}
{| class="formtable stackedform"
! Developers:
| {{{field|Developers|input type=tokens|values from property=Has Developer}}}
|-
! Platform:
| {{{field|Platform|list|input type=checkboxes|values from property=Has Platform}}}
|-
! Programming Language:
| {{{field|Programming Language|list|input type=checkboxes|values from property=Has Programming Language}}}
|-
! Maturity Level:
| {{{field|Maturity Level|list|input type=checkboxes|values from property=Has Maturity Level}}}
|-
! Available Fields
| {{{field|Available Fields|list|input type=tokens|values from property=Has Object Requirement}}}
|-
! Certainty Probability
| {{{field|Certainty Compare|input type=dropdown|values=≤,&lt;,=,≥,&gt;,!|default=≥}}}{{{field|Certainty Probability|list|input type=dropdown|property=Has a Certainty Probability}}}
|-
&lt;!--
! Other Developers:
| {{{field|Other Developers|input type=tokens|values from property=Has Other Developers}}}
|-
--&gt;
! Search Results Format: 
| {{{field|SearchDataFormat|input type=dropdown|values=table,csv,json|default=table|mandatory}}} {{#info:''table - inline HTML table&lt;br/&gt;csv - CSV format (comma delimited)&lt;br/&gt;json - JSON notation ''}}
|}
{{{end template}}}
{{{standard input|run query|label=Search}}}
&lt;/includeonly&gt;</text>
            <sha1>dx1cc2kfd10rvj79ni51sgha124swlu</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:AnalyticInstantiationDetail</title>
        <ns>10</ns>
        <id>277</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10812</id>
            <parentid>10811</parentid>
            <timestamp>2016-05-17T14:53:17Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1908">&lt;noinclude&gt;{{documentation}}
&lt;/noinclude&gt;&lt;includeonly&gt;&lt;!--
{{#arraydefine: Dependents|{{#ask:[[Has Pipeline Dependency On::{{{?Has Instantiation Name|}}}]]|mainlabel=-|?Has Pipeline Element Name=|link=none|limit=10000}}|,}}
{{#arraydefine: Dependencies|{{{?Has Pipeline Dependency On}}}|,}}
--&gt;
&lt;div id="{{{?Has Instantiation Id|}}}"&gt;
{|class="wikitable analyticinstantiationdetail skipempty"
! colspan="2" style="font-size:16pt;" | {{{?Has Instantiation Name|}}}
|-
! Platform
|{{{?Has Platform|}}}{{{?Has Platform Other|}}} 
|-
! Lead Developer
|{{{?Has Lead Developer|}}} 
|-
! Other Developers
|{{{?Has Other Developer|}}} 
|-
! Maturity Level
|{{{?Has Maturity Level|}}} 
|-
! Certainty Probability
|{{{?Has a Certainty Probability|}}} 
|-
! Programming Language(s)
|{{{?Has Programming Language|}}}{{{?Has Programming Language Other|}}} 
|-
! Output Data Format
|{{{?Has Output Data Format|}}} 
|-
! Instantiation Notes
|{{{?Has Instantiation Notes|}}}
|-
! Output Command
|{{{?Has Output Command|}}}
|-
! Output Format
|{{{?Has Output Format|}}}
|-
! Example Query
|{{#if: {{{?Has Query Link|}}}
|{{Splunk Link|{{{?Has Query Link|}}}}}&lt;br/&gt;
|}}{{#if: {{{?Has Example Query|}}}|{{#tag: pre|{{{?Has Example Query|}}}|}}|}}
|-
&lt;!--
! Required Fields
|{{#if: {{{?Has Required Field|}}}|{{RequiredFieldsTable|fields={{{?Has Required Field}}}|}}|}}
|-
! Potential Sensors
|{{#if: {{{?Has Required Field|}}}
|{{#ask:
[[Category:Sensors]]
[[Has Field Coverage::{{#arraymap: {{{?Has Required Field|}}}|,|$$|$$|{{!!}}|}}]]
}}
}}
--&gt;
|-
! Performance Notes
|{{{?Has Performance Notes|}}}
|-
! File Attachments
| {{#if: {{{?Has Inst Upload File1|}}} |[[:File:{{{?Has Inst Upload File1|}}}]]|&amp;#32;}}
{{#if: {{{?Has Inst Upload File2|}}} |[[:File:{{{?Has Inst Upload File3|}}}]]|&amp;#32;}}
{{#if: {{{?Has Inst Upload File3|}}} |[[:File:{{{?Has Inst Upload File3|}}}]]|&amp;#32;}}
|} &lt;!-- end table --&gt;
&lt;/div&gt;&lt;/includeonly&gt;</text>
            <sha1>3qve4mzm802tm7wf38vdvd67nnhm823</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>MediaWiki:Common.js</title>
        <ns>8</ns>
        <id>279</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10229</id>
            <parentid>10226</parentid>
            <timestamp>2016-03-25T21:06:01Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>javascript</model>
            <format>text/javascript</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="7200">/* Any JavaScript here will be loaded for all users on every page load. */

/* Dynamic/hierarchical Checkboxes for Calculate ATT&amp;CK Coverage */
$(document).ready(function() {
   if ($('table.attackquery')) {
       function updateActions(event) {
           var status = this.checked;
           var objectName = this.value;
           $('label.availableActions').each(function(i, label) {
               var $label = $(label);
               var $input = $(label).find('input');
               if ($input.val().match(objectName + '/.*')) {
                   if (event.type == "click") {
                       $input.prop('checked', status &amp;&amp; ($input.val() == objectName+"/*"));
                   }
                   $label.css('display', status ? 'block' : 'none');
               }
           });
           $('label.availableActions input').each(updateFields);
       }
       function updateFields(event) {
           //console.log(this);
           var status = this.checked;
           var actionName = this.value;
           $('label.availableFields').each(function(i, label) {
               var $label = $(label);
               var $input = $(label).find('input');
               if ($input.val().match(actionName.replace('*','\*') + '/.*')) {
                   if (event.type == "click") {
                       $input.prop('checked', status);
                   }
                   $label.css('display', status ? 'block' : 'none');
               }
           });
       }
       $('label.availableObjects input').on('click', updateActions);
       $('label.availableActions input').on('click', updateFields);
       $('label.availableObjects input').each(updateActions);
   }
});


/* Dynamic Pseudocode Syntax highlighting */
$(document).ready(function() {
   if ($(".pseudocode")) {
       var pc = $(".pseudocode").html() || "";
       $.each(['search', 'filter', 'where', 'output', 'join', 'var',
               'group', 'run', 'extract', 'parse', 'from', 'input',
               'match', 'by', 'merge', 'with', 'and', 'or', 'as', 
               'select', 'not', 'if', 'else', 'then', 'while', 'function',
               'do', 'for', 'each', 'in', 'return', 'define'], function(i, opcode) {
           pc = pc.replace(new RegExp("[\\(\\s]" + opcode + "[\\(\\s]", "g"), "&lt;b&gt;$&amp;&lt;/b&gt;");
       });

       pc = pc.replace(/CAR\-\d{4}\-\d{2}\-\d{3}/g, '\&lt;a href\=\"$&amp;\"\&gt;$&amp;\&lt;\/a\&gt;');
       $(".pseudocode").html(pc);
   }
});

/* Use for incrementing instantiation count */
$(function() {
    // Confirm that this is the analytic form
    if ($('input[name="Analytic Instantiation[num][Instantiation Id]"]')) {
       // Create callback for save button
       $("input#wpSave").on("click", function() {
           var $max = $('input[name="Analytic[MaximumInstantiationId]"');
           var max = parseInt($max.val());
           if (!max) { 
               max = 0;
           }
           $.each($('input[type="hidden"]'), function(i, obj) {
               var sections = obj.name.split(/\[|\]/);
               if (sections[1] != 'num' &amp;&amp; sections[3] == "Instantiation Id") {
                   if (!obj.value) {
                       // Add this as the offset from 'a' (decimal 96)
                       obj.value = String.fromCharCode(96 +(++max));
                   }
               }
           });
           $max.val(max);
       });    
    }
});

/* Used to hide empty rows of tables */
$(function() {
    $tableSelect = $('table.skipempty');
    $.each($tableSelect, function(i, tbl) {
       $trSelect = $(tbl).find('tr');
        var tblcount = 0;
        $.each($trSelect , function(i, tr) { 
            var count = 0;
            var td = $(tr).find('td');
            if (td.length &amp;&amp; td.text().trim()) {
               count++;
               if ((count &amp; 1) &amp;&amp; tr.classList.contains('row-even')) {
                   tr.classList.remove('row-even');
                   tr.classList.add('row-odd');
               } else if (!(count &amp; 1) &amp;&amp; tr.classList.contains('row-odd')) {
                   tr.classList.remove('row-odd');
                   tr.classList.add('row-even');
               }
            } else if (td.length){
               // console.log(tr.innerHTML, 'text', tr.textContent);
               $(tr).remove(); 
            }
         });
     });
});

/* Add the technique matrix via an iframe */
$(function() {

    var link = $("#matrix_link");
    if (link) {
        var href=link.find('a').attr('href');
        link.prepend('&lt;iframe id="if_matrix" src="' + href + '&amp;printable=yes"/&gt;');
        $('#if_matrix').on('ready', function() {
            var obj = $('#if_matrix');
            obj.css('height', obj[0].contentWindow.document.body.scrollHeight + 'px');
        });
    }


});

/* Hide side links */
function ModifySidebar( name ) {
	try {
		var list = document.getElementById( 'p-tb' )
						   .getElementsByTagName( 'div' )[0]
						   .getElementsByTagName( 'ul' )[0];

		var listelements = list.getElementsByTagName( 'li' );

		for ( var i = 0; i &lt; listelements.length; i++ ) {
			if (
				listelements[i].getElementsByTagName( 'a' )[0].innerHTML == name 
			)
			{
				list.removeChild( listelements[i] );
			}
		}
	} catch( e ) {
		// let's just ignore what's happened
		return;
	}
}
 
function CustomizeModificationsOfSidebar() {
	ModifySidebar( 'What links here' );
	ModifySidebar( 'Related changes' );
	ModifySidebar( 'Special pages' );
	ModifySidebar( 'Page information' );
	ModifySidebar( 'Browse properties');
}

function isObject( obj ) {
	return typeof obj == 'object' &amp;&amp; obj != null;
}
 
function isArray( obj ) {
	return isObject( obj ) &amp;&amp; obj.constructor.toString().indexOf( 'Array' ) != -1;
}
 
Array.prototype.Contains = function( element, strict ) {
	for( i in this ) {
		if( this[i] == element &amp;&amp; !strict || this[i] === element ) {
			return true;
		}
	}
	return false;
}

if ( isArray( wgUserGroups ) ) {
	if ( !wgUserGroups.Contains( 'user' ) ) {
		jQuery( CustomizeModificationsOfSidebar );
	}
}

conf = mw.config.get(['wgPageName', 'wgCanonicalNamespace', 'wgTitle', 'wgCategories']);
mw.loader.using( 'mediawiki.util', function () {

    
     if (conf.wgCanonicalNamespace == 'Help'||conf.wgCanonicalNamespace == 'Help_talk') {
        mw.util.addPortletLink(
            'p-namespaces',
             mw.util.getUrl( '' + conf.wgTitle),
            'Page',
            'ca-nstab-main',
            'View the content page',
            'h',
            '#ca-nstab-help'
        );
        $('#ca-nstab-help a').text('Help');
    }

    else if (conf.wgCanonicalNamespace == ''||conf.wgCanonicalNamespace == 'Talk') {

        var helpPage = conf.wgTitle;
        var helpCategories = ['Analytics', 'Sensors', 'Sensor Suites', 'Operators', 'Data Model'];
        $.each(helpCategories, function(idx, category) {
            if (conf.wgCategories.indexOf(category) &gt;= 0) {
                helpPage = category;
            }
        });
        mw.util.addPortletLink(
            'p-namespaces',
             mw.util.getUrl( 'Help:' + helpPage),
            'Help',
            'ca-nstab-help',
            'Help for this current page',
            'h',
            '#ca-talk'
        );
    }
});
</text>
            <sha1>rkugi9k7k2rwfjrcwsbnr7n8c4c7zvu</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Owner</title>
        <ns>102</ns>
        <id>280</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>1739</id>
            <timestamp>2013-01-08T14:19:01Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>MediaWiki:Lastmodifiedat</title>
        <ns>8</ns>
        <id>287</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7975</id>
            <parentid>1975</parentid>
            <timestamp>2015-04-29T19:16:10Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="40">This page was last modified on $1 at $2.</text>
            <sha1>qup6k3rllp7a8x5f6hsflxooepqiyzm</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>MediaWiki:Lastmodifiedatby</title>
        <ns>8</ns>
        <id>288</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>1978</id>
            <parentid>1977</parentid>
            <timestamp>2013-01-22T19:32:10Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="41">This page was last modified $2, $1 by $3.</text>
            <sha1>lqe2u41lhixqwufjhjz6bzswoi0ps6q</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2013-01-002</title>
        <ns>0</ns>
        <id>290</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10819</id>
            <parentid>10818</parentid>
            <timestamp>2016-05-17T18:54:30Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="3052">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=Autorun Differences
|Hypothesis=The Sysinternals tool [[Autoruns]] checks the registry and file system for known identify persistence mechanisms. It will output any tools identified, including built-in or added-on Microsoft functionality and third party software. Many of these locations are known by adversaries and used to obtain [[attack:Persistence|Persistence]]. Running Autoruns periodically in an environment makes it possible to collect and monitor its output for differences, which may include the removal or addition of persistent tools. Depending on the persistence mechanism and location, legitimate software may be more likely to make changes than an adversary tool. Thus, this analytic may result in significant noise in a highly dynamic environment. While [[Autoruns]] is a convenient method to scan for programs using persistence mechanisms its scanning nature does not conform well to streaming based analytics. This analytic could be replaced with one that draws from sensors that collect registry and file information if streaming analytics are desired.
|SubmissionDate=2013/01/25
|AnalyticType=Situational Awareness,TTP
|InformationDomain=Analytic, Host
|HostSubtypes=Registry
|AnalyticNotes=Utilizes the Sysinternals autoruns tool (ignoring validated Microsoft entries). Primarily not a detection analytic by itself but through analysis of results by an analyst can be used for such. Building another analytic on top of this one identifying unusual entries would likely be a beneficial alternative.
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1031
|Tactics=Persistence,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1050
|Tactics=Persistence,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1053
|Tactics=Persistence,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1013
|Tactics=Persistence,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1060
|Tactics=Persistence,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1034
|Tactics=Persistence, Privilege Escalation,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1015
|Tactics=Privilege Escalation, Persistence,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1112
|Tactics=Persistence, Execution,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1058
|Tactics=Persistence, Execution,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1084
|Tactics=Persistence,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1044
|Tactics=Privilege Escalation, Persistence,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1042
|Tactics=Persistence,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1037
|Tactics=Persistence,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1004
|Tactics=Persistence,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1103
|Tactics=Persistence,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode}}
|UnitTests=
|AnalyticInstantiations=
|Instantiation_Output Fields=now, `gumby_cmd_output`, change, md5_count, occurrences
}}</text>
            <sha1>gwl1a8742g5iafwy1ljil8afxxvo9tc</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2013-01-003</title>
        <ns>0</ns>
        <id>291</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10746</id>
            <parentid>10736</parentid>
            <timestamp>2016-04-21T18:20:52Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2207">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=SMB Events Monitoring
|Hypothesis=[[wikipedia:Server Message Block|Server Message Block]] (SMB) is used by Windows to allow for file, pipe, and printer sharing over port 445/tcp. It allows for enumerating, and reading from and writing to file shares for a remote computer. Although it is heavily used by Windows servers for legitimate purposes and by users for file and printer sharing, many adversaries also use SMB to achieve [[attack:Lateral Movement|Lateral Movement]]. Looking at this activity more closely to obtain an adequate sense of situational awareness may make it possible to detect adversaries moving between hosts in a way that deviates from normal activity.

Because SMB traffic is heavy in many environments, this analytic may be difficult to turn into something that can be used to quickly detect an APT. In some cases, it may make more sense to run this analytic in a forensic fashion. Looking through and filtering its output after an intrusion has been discovered may be helpful in identifying the scope of compromise.
|SubmissionDate=2013/01/25
|AnalyticType=Situational Awareness,
|InformationDomain=Network
|NetworkSubtypes=PCAP,
|NetworkProtocols=SMB
|OutputDataDescription=The source, destination, content, and time of each event.
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1078
|Tactics=Lateral Movement,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1039
|Tactics=Exfiltration,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1077
|Tactics=Lateral Movement,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Description=Although there may be more native ways to detect detailed SMB events on the host, they can be extracted out of network traffic. With the right protocol decoders, port 445 traffic can be filtered and even the file path (relative to the share) can be retrieved.
|Example Query=flow = search Flow:Message
smb_events = filter flow where (dest_port == "445" and protocol == "smb")
smb_events.file_name = smb_events.proto_info.file_name
output smb_write
|Required Fields=flow/message/dest_port, flow/message/proto_info,
}}
|UnitTests=
|AnalyticInstantiations=
}}</text>
            <sha1>gjdozsqjqlt5u3x5nj2rworg5a7wrdn</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2013-02-003</title>
        <ns>0</ns>
        <id>294</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10788</id>
            <parentid>10747</parentid>
            <timestamp>2016-04-25T19:38:47Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1773">{{Analytic
|MaximumInstantiationId=2
|ShortSummary=Processes Spawning cmd.exe
|Hypothesis=The Windows [[wikipedia:cmd.exe|Command Prompt]] (&lt;code&gt;cmd.exe&lt;/code&gt;) is a utility that provides a command line interface to Windows operating systems. It provides the ability to run additional programs and also has several built-in commands such as &lt;code&gt;dir&lt;/code&gt;, &lt;code&gt;copy&lt;/code&gt;,&lt;code&gt;mkdir&lt;/code&gt;, and &lt;code&gt;type&lt;/code&gt;, as well as batch scripts (&lt;code&gt;.bat&lt;/code&gt;).

Typically, when a user runs a command prompt, the parent process is &lt;code&gt;explorer.exe&lt;/code&gt; or another instance of the prompt. There may be automated programs, logon scripts, or administrative tools that launch instances of the command prompt in order to run scripts or other built-in commands. Spawning the process &lt;code&gt;cmd.exe&lt;/code&gt; from certain parents may be more indicative of malice.

For example, if Adobe Reader or Outlook launches a command shell, this may suggest that a malicious document has been loaded and should be investigated. Thus, by looking for abnormal parent processes of &lt;code&gt;cmd.exe&lt;/code&gt;, it may be possible to detect adversaries.
|SubmissionDate=2013/02/05
|AnalyticType=Situational Awareness
|InformationDomain=Host
|HostSubtypes=Process
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1059
|Tactics=Execution,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Example Query=process = search Process:Create
cmd = filter process where (exe == "cmd.exe")
output cmd
|Required Fields=process/create/exe, process/create/parent_exe,
}}
|UnitTests={{Analytic Unit Test
|Configurations=Windows 7,
|Description=Within a command prompt or powershell, run cmd.exe
}}
|AnalyticInstantiations=
|Instantiation_Pipeline Predecessor=OP-Filter-0003
}}</text>
            <sha1>kmh0qgktsri60mdi5jjk0sj0u78y2kj</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2013-02-008</title>
        <ns>0</ns>
        <id>299</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10877</id>
            <parentid>10876</parentid>
            <timestamp>2016-06-27T14:10:39Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1483">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=Simultaneous Logins on a Host
|Hypothesis=Multiple users logged into a single machine at the same time, or even within the same hour, do not typically occur in networks we have observed.
|SubmissionDate=2013/02/18
|AnalyticType=Situational Awareness,
|InformationDomain=Host
|HostSubtypes=Login
|AnalyticNotes=Logon events are Windows Event Code 4624 for Windows Vista and above, 518 for pre-Vista. Logoff events are 4634 for Windows Vista and above, 538 for pre-Vista.

Logon types 2, 3, 9 and 10 are of interest. For more details see the Logon Types table on Microsoft's [https://technet.microsoft.com/en-us/library/cc787567(v=ws.10).aspx Audit Logon Events] page.
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1078
|Tactics=Lateral Movement,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Example Query=users_list = search UserSession:Login
users_grouped = group users_list by hostname
users_grouped = from users_grouped select min(time) as earliest_time, max(time) as latest_time count(user) as user_count 
multiple_logins = filter users_grouped where (latest_time - earliest_time &lt;= 1 hour and user_count &gt; 1)
output multiple_logins
|Required Fields=user_session/login/user, user_session/login/hostname,
}}
|UnitTests=
|AnalyticInstantiations=
|Instantiation_Pipeline Predecessor=OP-Filter-0030
|Instantiation_Output Fields=values(IPAddress), values(_time) by ComputerName, UserName
}}</text>
            <sha1>e4llybuwbw0s9zj6jy1t9unlqk1vhcu</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2013-02-012</title>
        <ns>0</ns>
        <id>303</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10821</id>
            <parentid>10748</parentid>
            <timestamp>2016-05-17T19:00:06Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1255">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=User Logged in to Multiple Hosts
|Hypothesis=Most users use only one or two machines during the normal course of business. User accounts that log in to multiple machines, especially over a short period of time, may be compromised. Remote logins among multiple machines may be an indicator of [[attack:Lateral Movement|lateral movement]].
|SubmissionDate=2013/02/27
|AnalyticType=Situational Awareness,
|InformationDomain=Host
|HostSubtypes=Login,
|OutputDataDescription=User Name, Machines logged into, the earliest and latest times in which users were logged into the host, the type of logon, and logon ID.
|AnalyticNotes=Certain users will likely appear as being logged into several machines and may need to be "whitelisted." Such users would include network admins or user names that are common to many hosts.
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1078
|Tactics=Lateral Movement,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode}}
|UnitTests=
|AnalyticInstantiations=
|Instantiation_Pipeline Predecessor=OP-Statistics-0002
|Instantiation_Output Fields=values(host) AS hostname, values(Logon_Details) AS Logon_Details, values(time_frame) AS Time_Frame,
}}</text>
            <sha1>nhirohpk5u9p23z3rehixsm8rjquwv1</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:MyFileTemplate</title>
        <ns>10</ns>
        <id>304</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>2094</id>
            <timestamp>2013-03-01T15:44:47Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="232">&lt;noinclude&gt;
This is the "MyFileTemplate" template.
It should be called in the following format:
&lt;pre&gt;
{{MyFileTemplate
}}
&lt;/pre&gt;
Edit the page to see the template text.
&lt;/noinclude&gt;&lt;includeonly&gt;{| class="wikitable"
|}
&lt;/includeonly&gt;</text>
            <sha1>08e7i252vcq9me0dtvfolhi0f3ny3c3</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2013-03-001</title>
        <ns>0</ns>
        <id>324</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10822</id>
            <parentid>10749</parentid>
            <timestamp>2016-05-17T19:02:10Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="3768">{{Analytic
|MaximumInstantiationId=2
|ShortSummary=Reg.exe called from Command Shell
|Hypothesis=Registry modifications are often essential in establishing persistence via known Windows mechanisms. Many legitimate modifications are done graphically via &lt;code&gt;regedit.exe&lt;/code&gt; or by using the corresponding channels, or even calling the Registry APIs directly. 

The built-in utility &lt;code&gt;reg.exe&lt;/code&gt; provides a [[wikipedia:Command-line_interface|command-line interface]] to the registry, so that queries and modifications can be performed from a shell, such as &lt;code&gt;cmd.exe&lt;/code&gt;.

When a user is responsible for these actions, the parent of &lt;code&gt;cmd.exe&lt;/code&gt; will likely be &lt;code&gt;explorer.exe&lt;/code&gt;. Occasionally, power users and administrators write scripts that do this behavior as well, but likely from a different process tree. These background scripts must be learned so they can be tuned out accordingly.
|SubmissionDate=2013/03/28
|AnalyticType=TTP,
|InformationDomain=Host
|HostSubtypes=Process,
|OutputDataDescription=The sequence of processes that resulted in &lt;code&gt;reg.exe&lt;/code&gt; being started from a shell. That is, a hierarchy that looks like

* &lt;code&gt;great-grand_parent.exe&lt;/code&gt;
* &lt;code&gt;grand_parent.exe&lt;/code&gt;
* &lt;code&gt;parent.exe&lt;/code&gt;
* &lt;code&gt;reg.exe&lt;/code&gt;
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1012
|Tactics=Defense Evasion
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1112
|Tactics=Persistence, Privilege Escalation,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1060
|Tactics=Persistence, Privilege Escalation,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1058
|Tactics=Persistence, Privilege Escalation,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Description=To gain better context, it may be useful to also get information about the cmd process to know its parent. This may be helpful when tuning the analytic to an environment, if this behavior happens frequently. This may also help to rule out instances of users running &lt;code&gt;reg.exe&lt;/code&gt; from within a command prompt that was created from Explorer.

A second version of the analytic does not join back to the parent process, to allow a tighter time frame when actually searching. Instead, it looks for registry changes across a large number of hosts.
|Example Query=processes = search Process:Create
reg = filter processes where (exe == "reg.exe" and parent_exe == "cmd.exe")
cmd = filter processes where (exe == "cmd.exe" and parent_exe != "explorer.exe"")
reg_and_cmd = join (reg, cmd) where (reg.ppid == cmd.pid and reg.hostname == cmd.hostname)
output reg_and_cmd


processes = search Process:Create
reg_processes = filter processes where (
   exe == "reg.exe" and parent_exe == "cmd.exe" and
   (command_line == "*add*" OR command_line == "*delete*" OR command_line == "*copy*" OR command_line == "*restore*" OR command_line == "*load*" OR command_line == "*import*")
)
reg_processes_counted = count(hostname) as host_count group reg_processes by command_line
reg_processes_sorted = sort by host_count
output reg_processes_sorted
|Required Fields=process/create/command_line, process/create/hostname, process/create/exe, process/create/parent_exe, process/create/pid, process/create/ppid,
}}
|UnitTests={{Analytic Unit Test
|Configurations=Windows 7,
|Description=Execute reg.exe from cmd.exe. Note that the analytic joins back to the grandparent process, which in this case is explorer.exe. The query time window must include the user log on. For example, if you logged in at 8am and tested the analytic at 10am, the query needs to search from 8am to 10am, not just at 10am.

Within a command window, run the command
|Command=REG.EXE QUERY HKLM\Software\Microsoft
}}
|AnalyticInstantiations=
}}</text>
            <sha1>r6qog4td0bg1it9lhk5aat47lhxhqfr</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>File:Traffic Classification Simple Statistical Fingerprinting.pdf</title>
        <ns>6</ns>
        <id>325</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>2218</id>
            <timestamp>2013-04-01T16:31:31Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="0"/>
            <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
        </revision>
        <upload xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <timestamp>2013-04-01T16:31:31Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Rmarkeloff</username>
                <id>9</id>
            </contributor>
            <comment></comment>
            <filename>Traffic_Classification_Simple_Statistical_Fingerprinting.pdf</filename>
            <src>https://car-internal.mitre.org/w/images/4/46/Traffic_Classification_Simple_Statistical_Fingerprinting.pdf</src>
            <size>340516</size>
        </upload>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>File:Detection of Encrypted Tunnels.pdf</title>
        <ns>6</ns>
        <id>326</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>2219</id>
            <timestamp>2013-04-01T16:32:36Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="0"/>
            <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
        </revision>
        <upload xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <timestamp>2013-04-01T16:32:36Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Rmarkeloff</username>
                <id>9</id>
            </contributor>
            <comment></comment>
            <filename>Detection_of_Encrypted_Tunnels.pdf</filename>
            <src>https://car-internal.mitre.org/w/images/9/94/Detection_of_Encrypted_Tunnels.pdf</src>
            <size>291881</size>
        </upload>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>File:Tunnel hunter.pdf</title>
        <ns>6</ns>
        <id>327</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>2220</id>
            <timestamp>2013-04-01T16:32:51Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="0"/>
            <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
        </revision>
        <upload xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <timestamp>2013-04-01T16:32:51Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Rmarkeloff</username>
                <id>9</id>
            </contributor>
            <comment></comment>
            <filename>Tunnel_hunter.pdf</filename>
            <src>https://car-internal.mitre.org/w/images/a/a9/Tunnel_hunter.pdf</src>
            <size>520704</size>
        </upload>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2013-04-002</title>
        <ns>0</ns>
        <id>329</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10803</id>
            <parentid>10802</parentid>
            <timestamp>2016-05-04T19:35:34Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="4446">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=Quick execution of a series of suspicious commands
|Hypothesis=Certain commands are frequently used by malicious actors and infrequently used by normal users. By looking for execution of these commands in short periods of time, we can not only see when a malicious user was on the system but also get an idea of what they were doing.
|SubmissionDate=2013/04/11
|AnalyticType=TTP,
|InformationDomain=Analytic, Host
|AnalyticSubtypes=Sequence,
|HostSubtypes=Process,
|OutputDataDescription=The host on which the commands were executed, the time of execution, and what commands were executed
|AnalyticNotes=Commands of interest:
* arp.exe
* at.exe
* attrib.exe
* cscript.exe
* dsquery.exe
* hostname.exe
* ipconfig.exe
* mimikatz.exe
* nbstat.exe
* net.exe
* netsh.exe
* nslookup.exe
* ping.exe
* quser.exe
* qwinsta.exe
* reg.exe
* runas.exe
* sc.exe
* schtasks.exe
* ssh.exe
* systeminfo.exe
* taskkill.exe
* telnet.exe
* tracert.exe
* wscript.exe
* xcopy.exe
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1087
|Tactics=Discovery,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1003
|Tactics=Credential Access,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1069
|Tactics=Discovery,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1057
|Tactics=Discovery,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1077
|Tactics=Lateral Movement,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1050
|Tactics=Persistence, Privilege Escalation,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1031
|Tactics=Persistence, Privilege Escalation,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1112
|Tactics=Defense Evasion,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1058
|Tactics=Persistence, Privilege Escalation,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1018
|Tactics=Discovery,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1035
|Tactics=Persistence, Privilege Escalation,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1053
|Tactics=Persistence, Privilege Escalation, Execution,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1029
|Tactics=Exfiltration,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1033
|Tactics=Discovery,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1007
|Tactics=Discovery,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1082
|Tactics=Discovery,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1049
|Tactics=Discovery,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1016
|Tactics=Discovery,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1010
|Tactics=Discovery,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1063
|Tactics=Discovery,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1046
|Tactics=Discovery,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1089
|Tactics=Defense Evasion,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1098
|Tactics=Credential Access,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1054
|Tactics=Defense Evasion,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1059
|Tactics=Execution,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1012
|Tactics=Discovery,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Example Query=processes = search Process:Create
reg_processes = filter processes where (exe == "arp.exe" or exe == "at.exe" or exe == "attrib.exe" 
    or exe == "cscript.exe" or exe == "dsquery.exe" or exe == "hostname.exe" 
    or exe == "ipconfig.exe" or exe == "mimikatz.exe" or exe == "nbstat.exe" 
    or exe == "net.exe" or exe == "netsh.exe" or exe == "nslookup.exe"  
    or exe == "ping.exe" or exe == "quser.exe" or exe == "qwinsta.exe" 
    or exe == "reg.exe" or exe == "runas.exe" or exe == "sc.exe" 
    or exe == "schtasks.exe" or exe == "ssh.exe" or exe == "systeminfo.exe" 
    or exe == "taskkill.exe" or exe == "telnet.exe" or exe == tracert.exe" 
    or exe == "wscript.exe" or exe == "xcopy.exe")
reg_grouped = group reg by hostname, ppid where(max time between two events is 30 minutes)
output reg_grouped
|Required Fields=process/create/hostname, process/create/ppid, process/create/exe,
}}
|UnitTests={{Analytic Unit Test
|Configurations=Windows 7,
|Description=Within a command window, execute several of the commands in quick succession.
|Command=ipconfig /all
hostname
systeminfo
reg.exe Query HKLM\Software\Microsoft
}}
|AnalyticInstantiations=
}}</text>
            <sha1>mz8dao9mfv9nkitcaxkvt9syaooxhab</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has a Certainty Probability</title>
        <ns>102</ns>
        <id>331</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>4807</id>
            <parentid>3397</parentid>
            <timestamp>2015-01-23T21:59:58Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="344">This is a property of type [[Has type::Number]].

The allowed values for this property are:
* [[Allows value::100]]
* [[Allows value::90]]
* [[Allows value::80]]
* [[Allows value::70]]
* [[Allows value::60]]
* [[Allows value::50]]
* [[Allows value::40]]
* [[Allows value::30]]
* [[Allows value::20]]
* [[Allows value::10]]
* [[Allows value::0]]</text>
            <sha1>6wzt6s4wmw7d4kwzh24r3tk5te1ugr6</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2013-05-002</title>
        <ns>0</ns>
        <id>333</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10798</id>
            <parentid>10797</parentid>
            <timestamp>2016-05-02T19:12:50Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2168">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=Suspicious Run Locations
|Hypothesis=In Windows, files should never execute out of certain directory locations. Any of these locations may exist for a variety of reasons, and executables may be present in the directory but should not execute. As a result, some defenders make the mistake of ignoring these directories and assuming that a process will never run from one. There are known TTPs that have taken advantage of this fact to go undetected. This fact should inform defenders to monitor these directories more closely, knowing that they should never contain running processes.
|SubmissionDate=2013/05/07
|AnalyticType=TTP,
|InformationDomain=Host
|HostSubtypes=Process
|AnalyticNotes=Monitors the directories
* &lt;code&gt;*:\RECYCLER&lt;/code&gt;
* &lt;code&gt;*:\SystemVolumeInformation&lt;/code&gt;
* &lt;code&gt;%systemroot%\Tasks&lt;/code&gt;
* &lt;code&gt;%systemroot%\debug&lt;/code&gt;
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1036
|Tactics=Defense Evasion,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Description=The RECYCLER and SystemVolumeInformation directories will be present on every drive. Replace %systemroot% and %windir% with the actual paths as configured by the endpoints.
|Example Query=processes = search Process:Create
suspicious_locations = filter process where (
   image_path == "*:\RECYCLER\*" or
   image_path == "*:\SystemVolumeInformation\*" or
   image_path == "%windir%\Tasks\*" or 
   image_path == "%systemroot%\debug\*"
)
output suspicious_locations
|Required Fields=process/create/image_path,
}}
|UnitTests={{Analytic Unit Test
|Configurations=Windows 7,
|Description=1. Typically %systemroot% is C:\Windows but you can check this by running "echo %systemdrive%" at the command line.&lt;br /&gt;
2. Copy C:\Windows\system32\notepad to C:\Windows\Tasks.&lt;br /&gt;
3. Run notepad. The analytic should fire.&lt;br /&gt;
4. Delete the executable to clean up from the test.&lt;br /&gt;
|Command=copy C:\windows\system32\notepad.exe C:\windows\tasks
start C:\windows\tasks\notepad.exe
del C:\windows\tasks\notepad.exe
}}
|AnalyticInstantiations=
|Instantiation_Pipeline Predecessor=OP-Union-0002
}}</text>
            <sha1>7i3wrqo5bxljvo3fwutk2rvsf8wmzaa</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2013-05-003</title>
        <ns>0</ns>
        <id>338</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10752</id>
            <parentid>10743</parentid>
            <timestamp>2016-04-21T18:43:06Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1675">{{Analytic
|MaximumInstantiationId=4
|ShortSummary=SMB Write Request
|Hypothesis=As described in {{Analytic Link|CAR-2013-01-003}}, SMB provides a means of remotely managing a file system. Adversaries often use SMB to move laterally to a host. SMB is commonly used to upload files. It may be used for staging in [[attack:Exfiltration|Exfiltration]] or as a [[attack:Lateral Movement|Lateral Movement]] technique. Unlike SMB Reads, SMB Write requests typically require an additional level of access, resulting in less activity. Focusing on SMB Write activity narrows the field to find techniques that actively change remote hosts, instead of passively reading files.
|SubmissionDate=2013/05/13
|AnalyticType=Situational Awareness, TTP,
|InformationDomain=Host, Network
|HostSubtypes=Network,
|NetworkSubtypes=Netflow, PCAP,
|NetworkProtocols=SMB
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1105
|Tactics=Lateral Movement,
|Coverage=High
}}{{ATTACK Reference
|Technique=T1077
|Tactics=Lateral Movement,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1078
|Tactics=Defense Evasion, Lateral Movement,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Example Query=flow = search Flow:Message
smb_write = filter flow where (dest_port == "445" and protocol == "smb.write")
smb_write.file_name = smb_write.proto_info.file_name
output smb_write
|Required Fields=flow/message/proto_info, flow/message/dest_port,
}}
|UnitTests=
|AnalyticInstantiations=
|Instantiation_Pipeline Predecessor=OP-Filter-0002
|Instantiation_Output Fields=_time, src_ip, src_port, dest_ip, dest_port, hostname, SMB_filetype, SMB_filename, proto_info, end_time
}}</text>
            <sha1>kg2pbq5tu2yk069nompc8v6rkbhs2it</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2013-05-004</title>
        <ns>0</ns>
        <id>339</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10790</id>
            <parentid>10753</parentid>
            <timestamp>2016-05-02T15:37:49Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2581">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=Execution with AT
|Hypothesis=In order to gain [[attack:Persistence|persistence]], [[attack:Privilege Escalation|privilege escalation]], or [[attack:Execution|remote execution]], an adversary may use the Windows built-in command AT (&lt;code&gt;at.exe&lt;/code&gt;) to {{Technique Link|T1053|schedule a command}} to be run at a specified time, date, and even host. This method has been used by adversaries and administrators alike. Its use may lead to detection of compromised hosts and compromised users if it is used to move laterally.

The built-in Windows tool &lt;code&gt;schtasks.exe&lt;/code&gt; ({{Analytic Link|CAR-2013-08-001}}) offers greater flexibility when creating, modifying, and enumerating tasks. For these reasons, &lt;code&gt;schtasks.exe&lt;/code&gt; is more commonly used by administrators, tools/scripts, and power users.
|SubmissionDate=2013/05/13
|AnalyticType=TTP,
|InformationDomain=Host
|HostSubtypes=Process
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1053
|Tactics=Persistence, Execution, Privilege Escalation,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Description=Instances of the process &lt;code&gt;at.exe&lt;/code&gt; running imply the querying or creation of tasks. Although the [[Data Model/process#command_line|command_line]] is not essential for the analytic to run, it is critical when identifying the command that was scheduled.
|Example Query=process = search Process:Create
at = filter process where (exe == "at.exe")
output at
|Required Fields=process/create/command_line, process/create/exe,
}}
|UnitTests={{Analytic Unit Test
|Configurations=Windows 7,
|Requirements=Administrator account,
|Description=Create a new scheduled task with &lt;code&gt;at.exe&lt;/code&gt; and verify that the analytic fires when the task executes.
# From an admin account, open Windows command prompt (right click, run as administrator).
# Execute "at 10:00 calc.exe," substituting a time in the near future for 10:00.
## The program should respond with “Added a new job with job ID = 1” where the job ID is dependent on what tasks are scheduled.
# The program should execute at the time specified. This is what the analytic should fire on.
# To remove the scheduled task, execute "at 1 /delete" where you replace "1" with the job ID output in step 2a above.
|Command=at 10:00 calc.exe // returns a job number X
at X /delete
}}
|AnalyticInstantiations=
|Instantiation_Pipeline Predecessor=OP-Filter-0004
|Instantiation_Output Fields=_time, hostname, command_line, image_path, pid, parent_image_path, ppid, type
}}</text>
            <sha1>dxi236v6mq8dr4yrx7owivw0rhzlmmj</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2013-05-005</title>
        <ns>0</ns>
        <id>340</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10823</id>
            <parentid>10754</parentid>
            <timestamp>2016-05-17T19:20:56Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1964">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=SMB Copy and Execution
|Hypothesis=An adversary needs to gain access to other hosts to move throughout an environment. In many cases, this is a twofold process. First, a file is remotely written to a host via an SMB share (detected by {{Analytic Link|CAR-2013-05-003}}). Then, a variety of [[attack:Execution|Execution]] techniques can be used to remotely establish execution of the file or script.

To detect this behavior, look for files that are written to a host over SMB and then later run directly as a process or in the command line arguments. SMB File Writes and Remote Execution may happen normally in an environment, but the combination of the two behaviors is less frequent and more likely to indicate adversarial activity.
|SubmissionDate=2013/05/13
|AnalyticType=TTP,
|InformationDomain=Host, Network
|HostSubtypes=Network, Process, File,
|NetworkSubtypes=PCAP,
|NetworkProtocols=SMB
|AnalyticNotes=This can possibly extend to more copy protocols in order to widen its reach, or it could be tuned more finely to focus on specific program run locations (e.g. &lt;code&gt;%SYSTEMROOT%\system32&lt;/code&gt; to gain a higher detection rate.
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1077
|Tactics=Lateral Movement,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1078
|Tactics=Defense Evasion, Lateral Movement,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1105
|Tactics=Lateral Movement,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Example Query=process = search Process:Create
smb_write = run Analytic:CAR-2013-05-003
remote_start = join (smb_write, process) where (
    smb_write.hostname == process.hostname and
    smb_write.file_path == process.image_path
   (smb_write.time &lt; process.time)
)
output remote_start
|Required Fields=process/create/image_path, flow/message/proto_info, process/create/hostname,
}}
|UnitTests=
|AnalyticInstantiations=
}}</text>
            <sha1>0o6ni5egruztkzto1emhlm98uppx8mm</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Maturity Level</title>
        <ns>102</ns>
        <id>342</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>2354</id>
            <parentid>2334</parentid>
            <timestamp>2013-05-17T17:20:32Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="246">This is a property of type [[Has type::String]].

The allowed values for this property are:
* [[Allows value::Idea]]
* [[Allows value::Conceptualized]]
* [[Allows value::Development]]
* [[Allows value::Operational]]
* [[Allows value::Deprecated]]</text>
            <sha1>6cl593zmbznulqqp48hr3wiptttr971</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Help:Contents</title>
        <ns>12</ns>
        <id>344</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10947</id>
            <parentid>10046</parentid>
            <timestamp>2016-06-30T15:14:05Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1009">Welcome to CAR, ''the'' Cyber-Analytics Repository. There are a couple of ways to go about getting started. The [[#Navigation Bar|navigation bar]] on the left hand bar contains several useful links for exploring CAR.

== Glossary ==
{{Article Link|Help:Glossary}}

== Navigation Bar ==

::'''[[Main Page]]''' - ''The "Welcome to CAR" launch page''
::'''[[Full Analytic List|Analytic List]]''' - ''A summary page for all analytics''
::'''[[Special:BrowseData|Data Drilldown]]''' - ''A drilldown way to browse the Semantic objects on CAR''
::'''[[Special:RunQuery/AnalyticQuery|Analytic Search]]''' - ''A way to search analytics by metadata''
::'''[[Contribute|Contribute]]''' - ''How to contribute to CAR''
::'''[[Help:Contents#|Help]]''' - ''This contents page of the help menu''

:'''Coverage'''
::'''[[Data Model]]''' - ''Detailed view of the Data Model and available sensors''
::'''[[Special:BrowseData/Sensors|Sensors]]''' - ''Drilldown on all sensors''

== Data Model ==
{{Article Link|Help:Data Model}}
</text>
            <sha1>oeb2z1fwlc16zrjevgmd66fx33xgbvk</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2013-05-009</title>
        <ns>0</ns>
        <id>348</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10857</id>
            <parentid>10826</parentid>
            <timestamp>2016-06-01T16:41:27Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1120">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=Running executables with same hash and different names
|Hypothesis=Executables are generally not renamed, thus a given hash of an executable should only have ever one name. Identifying instances where multiple process names share the same hash may find cases where tools are copied by attackers to different folders or hosts to [[attack:Defense Evasion|avoid detection]].
|SubmissionDate=2013/05/23
|InformationDomain=Host
|HostSubtypes=Process
|OutputDataDescription=A list of hashes and the different executables associated with each one
|AnalyticNotes=Although this analytic was initially based on MD5 hashes, it is equally applicable to any hashing convention.
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1036
|Tactics=Defense Evasion,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Required Fields=process/create/exe, process/create/md5_hash,
}}
|UnitTests=
|AnalyticInstantiations=
|Instantiation_Pipeline Predecessor=OP-Statistics-0004
|Instantiation_Output Fields=dc(executable) AS count values(combi) by md5_hash2
}}</text>
            <sha1>eyahx494l5pt07tt3l139yt1n8apwiq</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>File:RAR file layout.pdf</title>
        <ns>6</ns>
        <id>350</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>2408</id>
            <timestamp>2013-05-29T17:24:16Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="0"/>
            <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
        </revision>
        <upload xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <timestamp>2013-05-29T17:24:16Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Dhildebrand</username>
                <id>11</id>
            </contributor>
            <comment></comment>
            <filename>RAR_file_layout.pdf</filename>
            <src>https://car-internal.mitre.org/w/images/e/e0/RAR_file_layout.pdf</src>
            <size>156529</size>
        </upload>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2013-07-001</title>
        <ns>0</ns>
        <id>352</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10755</id>
            <parentid>10718</parentid>
            <timestamp>2016-04-22T13:11:26Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="3253">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=Suspicious Arguments
|Hypothesis=Malicious actors may rename built-in commands or external tools, such as those provided by SysInternals, to better [[attack:Defense Evasion|blend in]] with the environment. In those cases, the file path name is arbitrary and may blend in well with the background. If the arguments are closely inspected, it may be possible to infer what tools are running and understand what an adversary is doing. When any legitimate software shares the same command lines, it must be whitelisted according to the expected parameters.
|SubmissionDate=2013/07/05
|AnalyticType=TTP,
|InformationDomain=Host
|HostSubtypes=Process
|AnalyticNotes=Any tool of interest with commonly known command line usage can be detecting by command line analysis. Known substrings of command lines include
* PuTTY 
** port forwarding &lt;code&gt;-R * -pw&lt;/code&gt;
** secure copy (scp) &lt;code&gt;-pw * * *@*&lt;/code&gt;
* mimikatz &lt;code&gt;sekurlsa::&lt;/code&gt;
* RAR &lt;code&gt;* -hp *&lt;/code&gt;
* Archive&lt;code&gt;* a *&lt;/code&gt;

Additionally, it may be useful to find IP addresses in the command line
* &lt;code&gt;\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}&lt;/code&gt;

Logically this analytic makes use of {{Analytic Link|CAR-2014-03-005}}.
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1003
|Tactics=Credential Access,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1036
|Tactics=Defense Evasion,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1021
|Tactics=Lateral Movement,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1105
|Tactics=Command and Control, Lateral Movement,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Description=Identify process launches that contain substrings that belong to known tools and do not match the expected process names. These will help to indicate instances of tools that have been renamed.
|Example Query=process = search Process:Create
port_fwd = filter process where (command_line match "-R .* -pw")
scp = filter process where (command_line match "-pw .* .* .*@.*"
mimikatz = filter process where (command_line match "sekurlsa")
rar = filter process where (command_line match " -hp ")
archive = filter process where (command_line match ".* a .*")
ip_addr = filter process where (command_line match \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})

output port_fwd, scp, mimikatz, rar, archive, ip_addr
|Required Fields=process/create/command_line, process/create/exe,
}}
|UnitTests={{Analytic Unit Test
|Configurations=Windows 7,
|Description=Download and run Putty from the command line to connect to an SSH server using remote port forwarding. Note that this requires specifying your remote system password on the command line, where it will be logged and visible.

It is highly recommended that you specify an incorrect password and not complete the login, or use a temporary password.
|Command=putty.exe -pw &lt;password&gt; -R &lt;port&gt;:&lt;host&gt; &lt;user&gt;@&lt;host&gt;
}}{{Analytic Unit Test
|Configurations=Windows 7,
|Description=Download 7zip or other archiving software you plan to monitor. Create an innocuous text file for testing, or substitute an existing file.
|Command=7z.exe a test.zip test.txt
}}
|AnalyticInstantiations=
|Instantiation_Pipeline Predecessor=OP-Filter-0009
}}</text>
            <sha1>363domhln2okk0y21zv48wifae7xp37</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2013-07-002</title>
        <ns>0</ns>
        <id>353</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10756</id>
            <parentid>10730</parentid>
            <timestamp>2016-04-22T13:13:11Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2023">{{Analytic
|MaximumInstantiationId=2
|ShortSummary=RDP Connection Detection
|Hypothesis=The {{Technique Link|T1076|Remote Desktop Protocol}} (RDP), built in to Microsoft operating systems, allows a user to remotely log in to the desktop of another host. It allows for interactive access of the running windows, and forwards key presses, mouse clicks, etc. Network administrators, power users, and end-users may use RDP for day-to-day operations. From an adversary's perspective, RDP provides a means to [[attack:Lateral Movement|laterally move]] to a new host.  Determining which RDP connections correspond to adversary activity can be a difficult problem in highly dynamic environments, but will be useful in identifying the scope of a compromise.
|SubmissionDate=2013/07/24
|AnalyticType=Situational Awareness,TTP
|InformationDomain=Analytic, Network
|AnalyticSubtypes=Map building, Anomaly
|NetworkSubtypes=Hostflow
|NetworkProtocols=RDP, TCP
|OutputDataDescription=The time of the Connection, the source, the destination, and the user name used
|AnalyticNotes=Remote Desktop can be detected in several ways
* Network connections to port 3389/tcp (assuming use of the default port)
* Packet capture analysis
* Windows security logs (Event ID 4624, 4634, 4647, 4778)
* Detecting network connections from &lt;code&gt;mstsc.exe&lt;/code&gt;
* Execution of the process &lt;code&gt;rdpclip.exe&lt;/code&gt;
** Runs as the clipboard manager on the RDP target if clipboard sharing is enabled
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1076
|Tactics=Lateral Movement,
|Coverage=High
}}
|Pseudocode={{Analytic Pseudocode
|Example Query=flow_start = search Flow:Start
flow_end = search Flow:End
rdp_start = filter flow_start where (port == "3389")
rdp_end = filter flow_start where (port == "3389")
rdp = group flow_start, flow_end by src_ip, src_port, dest_ip, dest_port
output rdp
|Required Fields=flow/start/src_ip,flow/start/dest_ip,flow/start/dest_port,flow/end/dest_port
}}
|UnitTests=
|AnalyticInstantiations=
}}</text>
            <sha1>n1yzag70bzfc2xxqnhlg6o5hm984td5</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2013-07-005</title>
        <ns>0</ns>
        <id>356</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10791</id>
            <parentid>10787</parentid>
            <timestamp>2016-05-02T15:48:09Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1675">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=Command Line Usage of Archiving Software
|Hypothesis=Before [[attack:Exfiltration|exfiltrating data]] that an adversary has [[attack:Collection|collected]], it is very likely that a {{Technique Link|T1002|compressed archive}} will be created, so that transfer times are minimized and fewer files are transmitted. There is variety between the tools used to compress data, but the command line usage and context of archiving tools, such as ZIP, RAR, and 7ZIP, should be monitored.
|SubmissionDate=2013/07/31
|AnalyticType=TTP,
|InformationDomain=Host
|HostSubtypes=Process
|AnalyticNotes=In addition to looking for RAR or 7z program names, command line usage of 7Zip or RAR can be detected with the flag usage of "&lt;code&gt;* a *&lt;/code&gt;". This is helpful, as adversaries may change program names.
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1002
|Tactics=Exfiltration,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Description=This analytic looks for the command line argument &lt;code&gt; a &lt;/code&gt;, which is used by RAR. However, there may be other programs that have this as a legitimate argument and may need to be filtered out.
|Example Query=processes = search Process:Create
rar_argument = filter processes where (command_line == "* a *")
output rar_argument
|Required Fields=process/create/command_line,
}}
|UnitTests={{Analytic Unit Test
|Configurations=Windows 7,
|Description=Download 7zip or other archiving software you plan to monitor. Create an innocuous text file for testing, or substitute an existing file.
|Command=7z.exe a test.zip test.txt
}}
|AnalyticInstantiations=
}}</text>
            <sha1>c3p2vmc7f96z5hbbv6v5hi75wcpfebg</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2013-08-001</title>
        <ns>0</ns>
        <id>357</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10758</id>
            <parentid>10720</parentid>
            <timestamp>2016-04-22T14:26:40Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2784">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=Execution with schtasks
|Hypothesis=The Windows built-in tool &lt;code&gt;schtasks.exe&lt;/code&gt; provides the creation, modification, and running of {{Technique Link|T1053|scheduled tasks}} on a local or remote computer. It is provided as a more flexible alternative to &lt;code&gt;at.exe&lt;/code&gt;, described in {{Analytic Link|CAR-2013-05-004}}. Although used by adversaries, the tool is also legitimately used by administrators, scripts, and software configurations.

The scheduled tasks tool can be used to gain [[attack:Persistence|persistence]] and can be used in combination with a [[attack:Lateral Movement|lateral movement]] technique to remotely gain [[attack:Execution|execution]]. Additionally, the command has parameters to specify the user and password responsible for creating the task, as well as the user and password combination that the task will run as. The &lt;code&gt;/s&lt;/code&gt; flag will cause a task to run as the SYSTEM user, usually indicating [[attack:Privilege Escalation|privilege escalation]].
|SubmissionDate=2013/08/07
|AnalyticType=TTP,
|InformationDomain=Host
|HostSubtypes=Process
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1053
|Tactics=Persistence,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Description=Look for instances of &lt;code&gt;schtasks.exe&lt;/code&gt; running as processes. The [[Data Model/process#command_line|command_line]] field is necessary to disambiguate between types of schtasks commands. These include the flags /create, /run, /query, /delete, /change, and /end.
|Example Query=process = search Process:Create
schtasks = filter process where (exe == "schtasks.exe")
output schtasks
|Required Fields=process/create/exe, process/create/command_line,
}}
|UnitTests={{Analytic Unit Test
|Configurations=Windows 7,
|Requirements=Administrator account,
|Description=Create a new scheduled task with &lt;code&gt;schtasks.exe&lt;/code&gt; and verify the analytic fires when the task executes.
# From an admin account, open Windows command prompt (right click, run as administrator)&lt;br /&gt;
# Execute &lt;code&gt;schtasks /Create /SC ONCE /ST 19:00 /TR C:\Windows\System32\calc.exe /TN calctask&lt;/code&gt;, substituting a time in the near future for 19:00
## The program should respond with "SUCCESS: The scheduled task "calctask" has successfully been created."
# The program should execute at the time specified. This is what the analytic should fire on.
# To remove the scheduled task, execute &lt;code&gt;schtasks /Delete /TN calctask"&lt;/code&gt;.
## The program should respond with "SUCCESS: The scheduled task "calctask" was successfully deleted."
|Command=schtasks /Create /SC ONCE /ST 19:00 /TR C:\Windows\System32\calc.exe /TN calctask
schtasks /Delete /TN calctask
}}
|AnalyticInstantiations=
}}</text>
            <sha1>1km2l7aq5irrb67gq3wzfn6edjd6m6j</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2013-09-003</title>
        <ns>0</ns>
        <id>363</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10759</id>
            <parentid>10631</parentid>
            <timestamp>2016-04-22T14:43:10Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1033">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=SMB Session Setups
|Hypothesis=Account usage within SMB can be used to identify compromised credentials, and the hosts accessed with them.
|SubmissionDate=2013/09/12
|AnalyticType=Situational Awareness,
|InformationDomain=Network
|NetworkSubtypes=PCAP,
|NetworkProtocols=SMB
|AnalyticNotes=This analytic monitors SMB activity that deals with user activity rather than file activity.
|IntellectualProperty=MITRE
|ATTACK References=
|Pseudocode={{Analytic Pseudocode
|Example Query=flow = search Flow:Message
smb_setup = filter flow where (dest_port == 445 and protocol == smb.setup)
smb_setup.user = smb_write.proto_info.user_name
smb_setup.target_host = smb_write.proto_info.hostname
output smb_write
|Required Fields=flow/message/proto_info, flow/message/dest_port, flow/message/protocol,
}}
|UnitTests=
|AnalyticInstantiations=
|Instantiation_Pipeline Predecessor=OP-Filter-0008
|Instantiation_Output Fields=_time, user, session_user, proto_info, src_ip, dest_ip, hostname, mac
}}</text>
            <sha1>1d0ma8wr16z6ek04yb3iyowkaxr1j2q</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2013-09-005</title>
        <ns>0</ns>
        <id>365</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10828</id>
            <parentid>10793</parentid>
            <timestamp>2016-05-17T20:49:16Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1302">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=Service Outlier Executables
|Hypothesis=New executables that are started as a service are suspicious. This analytic looks for anomalous service executables.
|SubmissionDate=2013/09/23
|AnalyticType=Anomaly, Situational Awareness,
|InformationDomain=Host
|HostSubtypes=Process,
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1031
|Tactics=Persistence, Privilege Escalation,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1050
|Tactics=Persistence, Privilege Escalation,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Description=Create a baseline of services seen over the last 30 days and a list of services seen today. Remove services in the baseline from services seen today, leaving a list of new services.
|Example Query=processes = search Process:Create
services = filter processes where (parent_image_path == "C:\Windows\System32\services.exe")
historic_services = filter services (where timestamp &lt; now - 1 day AND timestamp &gt; now - 1 day)
current_services = filter services (where timestamp &gt;= now - 1 day)
new_services = historic_services - current_services
output new_services
|Required Fields=process/create/parent_image_path,
}}
|UnitTests=
|AnalyticInstantiations=
|AnalyticTypes=Detection
}}</text>
            <sha1>32xizu3zyu8ltvgfpczcjeg6lexzier</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2013-10-001</title>
        <ns>0</ns>
        <id>370</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10882</id>
            <parentid>10873</parentid>
            <timestamp>2016-06-27T14:58:54Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1463">{{Analytic
|MaximumInstantiationId=3
|ShortSummary=User Login Activity Monitoring
|Hypothesis=Monitoring logon and logoff events for hosts on the network is very important for situational awareness. This information can be used as an indicator of unusual activity as well as to corroborate activity seen elsewhere.
|SubmissionDate=2013/10/03
|AnalyticType=Situational Awareness
|InformationDomain=Host, Network
|HostSubtypes=Login
|NetworkSubtypes=Netflow,
|NetworkProtocols=RPC, SMB, NetBIOS,
|OutputDataDescription=The time of login events for distinct users on individual systems
|AnalyticNotes=Could be applied to a number of different types of monitoring depending on what information is desired. Some use cases include monitoring for all remote connections and building login timelines for users.

Logon events are Windows Event Code 4624 for Windows Vista and above, 518 for pre-Vista. Logoff events are 4634 for Windows Vista and above, 538 for pre-Vista.
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1076
|Tactics=Lateral Movement,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1078
|Tactics=Defense Evasion,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode}}
|UnitTests=
|AnalyticInstantiations=
|Instantiation_Pipeline Predecessor=OP-Join-0009
|Instantiation_Output Fields=_time, ComputerName, Account_Name, Source_Host, s_ComputerName, Source_Network_Address, dest_ip, dest_port, src_port, type, action
}}</text>
            <sha1>1rxs444s9ysnwdr7xiv4783dhphcibo</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2013-10-002</title>
        <ns>0</ns>
        <id>371</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10912</id>
            <parentid>10897</parentid>
            <timestamp>2016-06-29T22:33:50Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="3184">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=DLL Injection via Load Library
|Hypothesis=Microsoft Windows allows for processes to remotely create threads within other processes of the same privilege level. This functionality is provided via the Windows API [https://msdn.microsoft.com/en-us/library/windows/desktop/ms682437.aspx CreateRemoteThread]. Both Windows and third-party software use this ability for legitimate purposes. For example, the Windows process &lt;code&gt;[[wikipedia:Client/Server_Runtime_Subsystem|csrss.exe]]&lt;/code&gt; creates threads in programs to send signals to registered callback routines.

Both adversaries and host-based security software use this functionality to {{Technique Link|T1055|inject DLLs}}, but for very different purposes. An adversary is likely to inject into a program to [[attack:Defense Evasion|evade defenses]] or {{Technique Link|T1088|bypass User Account Control}}, but a security program might do this to gain increased monitoring of API calls. One of the most common methods of {{Technique Link|T1055|DLL Injection}} is through the Windows API [https://msdn.microsoft.com/en-us/library/windows/desktop/ms684175.aspx LoadLibrary].

* Allocate memory in the target program with [https://msdn.microsoft.com/en-us/library/windows/desktop/aa366890.aspx VirtualAllocEx]
* Write the name of the DLL to inject into this program with [https://msdn.microsoft.com/en-us/library/windows/desktop/ms681674.aspx WriteProcessMemory]
* Create a new thread and set its entry point to [https://msdn.microsoft.com/en-us/library/windows/desktop/ms684175.aspx LoadLibrary] using the API [https://msdn.microsoft.com/en-us/library/windows/desktop/ms682437.aspx CreateRemoteThread].

This behavior can be detected by looking for thread creations across processes, and resolving the entry point to determine the function name. If the function is LoadLibraryA or LoadLibraryW, then the intent of the remote thread is clearly to inject a DLL. When this is the case, the source process must be examined so that it can be ignored when it is both expected and a trusted process.
|SubmissionDate=2013/10/07
|AnalyticType=TTP,
|InformationDomain=Host
|HostSubtypes=Process, DLL,
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1055
|Tactics=Defense Evasion,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1088
|Tactics=Privilege Escalation
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Description=Search for remote thread creations that start at LoadLibraryA or LoadLibraryW. Depending on the tool, it may provide additional information about the DLL string that is an argument to the function. If there is any security software that legitimately injects DLLs, it must be carefully whitelisted.
|Example Query=remote_thread = search Thread:RemoteCreate
remote_thread = filter (start_function == "LoadLibraryA" or start_function == "LoadLibraryW")
remote_thread = filter (src_image_path != "C:\Path\To\TrustedProgram.exe")

output remote_thread
|Required Fields=thread/remote_create/start_function, thread/remote_create/src_pid,
}}
|UnitTests=
|AnalyticInstantiations=
|Instantiation_Pipeline Predecessor=OP-Filter-0056
}}</text>
            <sha1>b1tvh6psndtmcdu7znkmvhfp44p15ep</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2014-02-001</title>
        <ns>0</ns>
        <id>378</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>11014</id>
            <parentid>10931</parentid>
            <timestamp>2016-07-18T21:08:57Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2233">{{Analytic
|MaximumInstantiationId=2
|ShortSummary=Service Binary Modifications
|Hypothesis=Adversaries may modify the binary file for an existing service to achieve [[attack:Persistence|Persistence]] while potentially [[attack:Defense Evasion|evading defenses]]. If a newly created or modified runs as a service, it may indicate APT activity. However, services are frequently installed by legitimate software. A well-tuned baseline is essential to differentiating between benign and malicious service modifications.
|SubmissionDate=2014/02/14
|AnalyticType=Situational Awareness, TTP,
|InformationDomain=Host
|HostSubtypes=Registry, File, Process,
|OutputDataDescription=The Service Name and approximate time in which changes occurred on each host
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1050
|Tactics=Persistence, Privilege Escalation,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1031
|Tactics=Persistence
}}{{ATTACK Reference
|Technique=T1044
|Tactics=Persistence, Privilege Escalation,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1035
|Tactics=Execution, Privilege Escalation
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Description=Look for events where a file was created and then later run as a service. In these cases, a new service has been created or the binary has been modified. Many programs, such &lt;code&gt;msiexec.exe&lt;/code&gt;, do these behaviors legitimately and can be used to help validate legitimate service creations/modifications.
|Example Query=legitimate_installers = ["C:\windows\system32\msiexec.exe", "C:\windows\syswow64\msiexec.exe", ...]

file_change = search File:Create,Modify
process = search Process:Create
service_process = filter processes where (parent_exe == "services.exe")
modified_service = join (search, filter) where (
    file_change.time &lt; service_process.time and 
    file_change.file_path == service_process.image_path
)

modified_service = filter modified_service where (modified_service.file_change.image_path not in legitimate_installers)
output modified_service
|Required Fields=file/create/file_path, process/create/parent_exe, process/create/image_path, file/create/image_path,
}}
|UnitTests=
|AnalyticInstantiations=
}}</text>
            <sha1>ahm91r0ht1k34h7dkfse3qwrpba8f8l</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2014-03-001</title>
        <ns>0</ns>
        <id>379</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10764</id>
            <parentid>10632</parentid>
            <timestamp>2016-04-22T15:05:26Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1740">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=SMB Write Request - NamedPipes
|Hypothesis=An SMB write can be an indicator of lateral movement, especially when combined with other information such as execution of that written file. Named pipes are a subset of SMB write requests. Named pipes such as msftewds may not be alarming; however others, such as lsarpc, may.
|SubmissionDate=2014/03/03
|InformationDomain=Host, Network
|HostSubtypes=Process
|NetworkSubtypes=Netflow
|NetworkProtocols=SMB
|AnalyticNotes=Monitoring SMB write requests still creates some noise, particulary with named pipes. As a result, SMB is now split between writing named pipes and writing other files.
|IntellectualProperty=MITRE
|ATTACK References=
|Pseudocode={{Analytic Pseudocode
|Description=Look for SMB network connections over port 445. Using a sensor that can decode protocol information, extract out the name of the pipe and potentially other information. This happens legitimately so certain pipes, such as &lt;code&gt;spoolss&lt;/code&gt; should be appropriately white-listed. Certain pipes do correspond to adversary activity, including
* &lt;code&gt;WINREG&lt;/code&gt; - Windows Remote Registry ([[CAR-2014-11-005]])
* &lt;code&gt;ATSVC&lt;/code&gt; - Windows AT command ([[CAR-2015-04-001]])
|Example Query=flow = search Flow:Message
smb_write = filter flow where (dest_port == "445" and protocol == "smb.write_pipe")
smb_write.pipe_name = smb_write.proto_info.pipe_name
output smb_write
|Required Fields=flow/message/proto_info, flow/start/dest_port,
}}
|UnitTests=
|AnalyticInstantiations=
|Instantiation_Pipeline Predecessor=OP-Filter-0010
|Instantiation_Output Fields=_time, src_ip, src_port, dest_ip, dest_port, hostname, SMB_filetype, SMB_filename, proto_info, end_time
}}</text>
            <sha1>5zw73uwi1vbjcpe414a10vizlfhmaxa</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2014-03-005</title>
        <ns>0</ns>
        <id>383</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10765</id>
            <parentid>10691</parentid>
            <timestamp>2016-04-22T15:10:32Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2276">{{Analytic
|MaximumInstantiationId=2
|ShortSummary=Remotely Launched Executables via Services
|Hypothesis=There are several ways to cause code to [[attack:Execution|execute]] on a remote host. One of the most common methods is via the Windows [[wikipedia:Service_Control_Manager|Service Control Manager]] (SCM), which allows authorized users to remotely create and modify services. Several tools, such as [[attack:Software/S0029|PsExec]], use this functionality.

When a client remotely communicates with the Service Control Manager, there are two observable behaviors. First, the client connects to the [[CAR-2014-05-001|RPC Endpoint Mapper]] over 135/tcp. This handles authentication, and tells the client what port the endpoint&amp;mdash;in this case the SCM&amp;mdash;is listening on. Then, the client connects directly to the listening port on &lt;code&gt;services.exe&lt;/code&gt;.
If the request is to start an existing service with a known command line, the the SCM process will run the corresponding command.

This compound behavior can be detected by looking for &lt;code&gt;services.exe&lt;/code&gt; receiving a network connection and immediately spawning a child process.
|SubmissionDate=2014/03/18
|AnalyticType=TTP,
|InformationDomain=Host, Network
|HostSubtypes=Network, Process
|NetworkSubtypes=Hostflow
|NetworkProtocols=RPC,
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1050
|Tactics=Execution,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1031
|Tactics=Execution,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1035
|Tactics=Execution,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Description=Look for processes launched from &lt;code&gt;services.exe&lt;/code&gt; within 1 second of &lt;code&gt;services.exe&lt;/code&gt; receiving a network connection.
|Example Query=process = search Process:Create
flow = search Flow:Start
service = filter process where (parent_exe == "services.exe")
remote_start = join (flow, service ) where (
    flow.hostname == service.hostname and
    flow.pid == service.pid and
   (flow.time &lt; service.time &lt; flow.time + 1 second)
)
output remote_start
|Required Fields=process/create/parent_exe, flow/start/pid, process/create/pid,
}}
|UnitTests=
|AnalyticInstantiations=
|Instantiation_Pipeline Predecessor=OP-Transact-0003
}}</text>
            <sha1>1ag5ppwhrfef20d68k73yd76iexctx4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2014-03-006</title>
        <ns>0</ns>
        <id>384</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10766</id>
            <parentid>10685</parentid>
            <timestamp>2016-04-22T15:13:30Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1608">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=RunDLL32.exe monitoring
|Hypothesis=Adversaries may find it necessary to use [https://msdn.microsoft.com/en-us/library/windows/desktop/ms682589.aspx Dyanamic-link Libraries] (DLLs) to [[attack:Defense Evasion|evade defenses]]. One way these DLLs can be "executed" is through the use of the built-in Windows utility {{Technique Link|T1085|RunDLL32}}, which allows a user to execute code in a DLL, providing the name and optional arguments to an exported entry point. Windows uses RunDll32 legitimately in its normal operation, but with a proper baseline and understanding of the environment, monitoring its usage could be fruitful.
|SubmissionDate=2014/03/28
|AnalyticType=TTP,
|InformationDomain=Host
|HostSubtypes=Process
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1085
|Tactics=Defense Evasion,
|Coverage=High
}}
|Pseudocode={{Analytic Pseudocode
|Description=When looking for all instances of RunDLL32, it is imperative to also have the [[Data Model/process#command_line|command line]] information, which contains the DLL information, including the name, entry point, and optional arguments.
|Example Query=process = search Process:Create
rundll32 = filter process where (exe == "rundll32.exe")
output rundll32
|Required Fields=process/create/exe, process/create/command_line,
}}
|UnitTests={{Analytic Unit Test
|Configurations=Windows 7,
|Description=Execute rundll32.exe from a command window
|Command=c:\windows\syswow64\rundll32.exe
RUNDLL32.EXE SHELL32.DLL,Control_RunDLL desk.cpl,,0
}}
|AnalyticInstantiations=
}}</text>
            <sha1>3amxepvg27j4gtc3gz96gok27nn8k6a</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2014-04-003</title>
        <ns>0</ns>
        <id>387</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10830</id>
            <parentid>10829</parentid>
            <timestamp>2016-05-17T20:59:23Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1407">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=Powershell Execution
|Hypothesis=PowerShell is a scripting environment included with Windows that is used by both attackers and administrators. Execution of PowerShell scripts in most Windows versions is opaque and not typically secured by antivirus which makes using PowerShell an easy way to circumvent security measures. This analytic detects execution of PowerShell scripts.
|SubmissionDate=2014/04/11
|AnalyticType=TTP,
|InformationDomain=Host
|HostSubtypes=Process
|AnalyticNotes=Powershell can be used to hide monitored command line execution such as 
* &lt;code&gt;net use&lt;/code&gt;
* &lt;code&gt;sc start&lt;/code&gt;
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1086
|Tactics=Defense Evasion,
|Coverage=High
}}{{ATTACK Reference
|Technique=T1064
|Tactics=Defense Evasion,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Description=Look for versions of PowerShell that were not launched interactively.
|Example Query=process = search Process:Create
powershell = filter process where (exe == "powershell.exe" AND parent_exe != "explorer.exe" )
output powershell
|Required Fields=process/create/exe, process/create/parent_exe,
}}
|UnitTests=
|AnalyticInstantiations=
|Instantiation_Pipeline Predecessor=OP-Filter-0016
|Instantiation_Output Fields=_time, hostname, user, command_line, pid, image_path, ppid, parent_image_path
}}</text>
            <sha1>gtfphwdcrzyjyxbp05rwa6xe6dtp78z</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2014-05-001</title>
        <ns>0</ns>
        <id>389</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10768</id>
            <parentid>10653</parentid>
            <timestamp>2016-04-22T16:00:45Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="3278">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=RPC Activity
|Hypothesis=Microsoft Windows uses its implementation of [[wikipedia:DCE/RPC|Distributed Computing Environment/Remote Procedure Call]] (DCE/RPC), which it calls [[wikipedia:Microsoft RPC|Microsoft RPC]], to call certain APIs remotely.

A Remote Procedure Call is initiated by communicating to the RPC Endpoint Mapper, which exists as the Windows service RpcEptMapper and listens on the port 135/tcp. The endpoint mapper resolves a requested endpoint/interface and responds to the client with the port that the service is listening on. Since the RPC endpoints are assigned ports when the services start, these ports are dynamically assigned from 49152 to 65535. The connection to the endpoint mapper then terminates and the client program can communicate directly with the requested service. 

RPC is a legitimate functionality of Windows that allows remote interaction with a variety of services. For a Windows environment to be properly configured, several programs use RPC to communicate legitimately with servers. The background and benign RPC activity may be enormous, but must be learned, especially peer-to-peer RPC between workstations, which is often indicative of [[attack:Lateral Movement|Lateral Movement]].

According to ATT&amp;CK, adversaries frequently use RPC connections to remotely
* {{Technique Link|T1050|Create}}, {{Technique Link|T1031|modify}}, and {{Technique Link|T1035|manipulate}} sevices ({{Analytic Link|CAR-2014-03-005}})
* {{Technique Link|T1053|Schedule Tasks}} ({{Analytic Link|CAR-2015-04-002}})
* Query ({{Analytic Link|CAR-2014-11-007}}) and Invoke ({{Analytic Link|CAR-2014-12-001}}) {{Technique Link|T1047|Windows Management Instrumentation (WMI)}}

Additional endpoints are detailed at [http://www.hsc.fr/ressources/articles/win_net_srv/well_known_named_pipes.html http://www.hsc.fr/ressources/articles/win_net_srv/well_known_named_pipes.html]
|SubmissionDate=2014/05/01
|AnalyticType=TTP, Situational Awareness,
|InformationDomain=Network
|NetworkSubtypes=Netflow
|NetworkProtocols=RPC,
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1078
|Tactics=Lateral Movement,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1021
|Tactics=Lateral Movement,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Description=Traffic to the RPC Endpoint Mapper will always have the destination port of 135. Assuming success, RPC traffic will continue to the endpoint. The endpoint and the client both bind to dynamically assigned ports (on Windows, this is typically greater than 49152). The traffic between the client and endpoint can be detected by looking at traffic to 135 followed by traffic where the source and destination ports are at least 49152.
|Example Query=flows = search Flow:Start
rpc_mapper = filter flows where (dest_port == 135)
rpc_endpoint = filter flows where (dest_port &gt;= 49152 and src_port &gt;= 49152)
rpc = join rpc_mapper, rpc_endpoint where (
    (rpc_mapper.time &lt; rpc_endpoint.time &lt; rpc_mapper.time + 2 seconds) and
    (rpc_mapper.src_ip == rpc_endpoint.src_ip and rpc_mapper.dest_ip == rpc_endpoint.dest_ip)
)
output rpc
|Required Fields=flow/start/dest_port, flow/start/src_port,
}}
|UnitTests=
|AnalyticInstantiations=
}}</text>
            <sha1>d2xps2ad5mtq1pyujycz0bhfdntrvqa</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2014-05-002</title>
        <ns>0</ns>
        <id>390</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10769</id>
            <parentid>10642</parentid>
            <timestamp>2016-04-22T16:05:38Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2331">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=Services launching Cmd
|Hypothesis=Windows runs the [[wikipedia:Service Control Manager|Service Control Manager]] (SCM) within the process &lt;code&gt;services.exe&lt;/code&gt;. Windows launches services as independent processes or DLL loads within a &lt;code&gt;[[wikipedia:svchost.exe|svchost.exe]]&lt;/code&gt; group. To be a legitimate service, a process (or DLL) must have the appropriate service entry point [https://msdn.microsoft.com/en-us/library/windows/desktop/ms687414.aspx SvcMain]. If an application does not have the entry point, then it will timeout (default is 30 seconds) and the process will be killed.

To survive the timeout, [https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-RAT-and-Staging-Report.pdf adversaries and red teams] can create services that direct to &lt;code&gt;cmd.exe&lt;/code&gt; with the flag &lt;code&gt;/c&lt;/code&gt;, followed by the desired command. The &lt;code&gt;/c&lt;/code&gt; flag causes the command shell to run a command and immediately exit. As a result, the desired program will remain running and it will report an error starting the service. This analytic will catch that command prompt instance that is used to launch the actual malicious executable.

Additionally, the children and descendants of services.exe will run as a  SYSTEM user by default. Thus, services are a convenient way for an adversary to gain [[attack:Persistence|Persistence]] and [[attack:Privilege Escalation|Privilege Escalation]].
|SubmissionDate=2014/05/05
|AnalyticType=TTP,
|InformationDomain=Host
|HostSubtypes=Process
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1050
|Tactics=Persistence, Privilege Escalation,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Description=Returns all processes named "cmd.exe" that have "services.exe" as a parent process. Because this should never happen, the &lt;code&gt;/c&lt;/code&gt; flag is redundant in the search.
|Example Query=process = search Process:Create
cmd = filter process where (exe == "cmd.exe" and parent_exe == "services.exe")
output cmd
|Required Fields=process/create/parent_exe, process/create/exe,
}}
|UnitTests=
|AnalyticInstantiations=
|Instantiation_Pipeline Predecessor=OP-Filter-0014
|Instantiation_Output Fields=_time, hostname, user, ppid, pid, image_path, command_line
}}</text>
            <sha1>h1pi80uyivr0exfavh43mxl48cm6mlq</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2014-07-001</title>
        <ns>0</ns>
        <id>391</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10810</id>
            <parentid>10770</parentid>
            <timestamp>2016-05-10T21:02:26Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1872">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=Service Search Path Interception
|Hypothesis=According to [[attack:Main Page|ATT&amp;CK]], an adversary may [[attack:Privilege Escalation|escalate privileges]] by {{Technique Link|T1034#Unquoted_Paths|intercepting the search path}} for legitimately installed services. As a result, Windows will launch the target executable instead of the desired binary and command line. This can be done when there are spaces in the binary path and the path is unquoted. Search path interception should never happen legitimately and will likely be the result of an adversary abusing a system misconfiguration. With a few regular expressions, it is possible to identify the execution of services with intercepted search paths.
|SubmissionDate=2014/07/17
|AnalyticType=TTP,
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1034
|Tactics=Privilege Escalation, Persistence,
|Coverage=High
}}
|Pseudocode={{Analytic Pseudocode
|Description=Look over all service creations that have a quoted path for the first argument. Assuming these still have an absolute path, look for cases in which the [[Data Model/process#command line|command line]] has a space, but the [[Data Model/process#exe|exe]] field is not part of the command line. This would indicate that a different process was intended, but the path was intercepted at an earlier space.
|Example Query=process = search Process:Create
services = filter processes where (parent_exe == "services.exe")
unquoted_services = filter services where (command_line != "\"*" and command_line == "* *")
intercepted_service = filter unquoted_service where (image_path != "* *" and exe not in command_line)
output intercepted_service
|Required Fields=process/create/parent_exe, process/create/command_line, process/create/image_path,
}}
|UnitTests=
|AnalyticInstantiations=
}}</text>
            <sha1>j7jn29t7xklcsyge8x21m6slzo3ui4v</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Example Query</title>
        <ns>102</ns>
        <id>396</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>3138</id>
            <parentid>2728</parentid>
            <timestamp>2014-12-08T02:07:47Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="46">This is a property of type [[Has type::Code]].</text>
            <sha1>czxcmn12bkxuwt8g2rduqsuxtr5psk8</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2014-11-002</title>
        <ns>0</ns>
        <id>398</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>11005</id>
            <parentid>11004</parentid>
            <timestamp>2016-07-13T22:01:18Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2062">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=Outlier Parents of Cmd
|Hypothesis=Many programs create command prompts as part of their normal operation including malware used by attackers. This analytic attempts to identify suspicious programs spawning cmd.exe by looking for programs that do not normally create cmd.exe.
|SubmissionDate=2014/11/06
|AnalyticType=Anomaly, TTP,
|InformationDomain=Host
|HostSubtypes=Process
|OutputDataDescription=The time and host the new process was started as well as its parent
|AnalyticNotes=While this analytic does not take the user into account, doing so could generate further interesting results. 

It is very common for some programs to spawn cmd.exe as a subprocess, for example to run batch files or windows commands. However many process don’t routinely launch a command prompt – for example Microsoft Outlook. A command prompt being launched from a process that normally doesn’t launch command prompts could be the result of malicious code being injected into that process, or of an attacker replacing a legitimate program with a malicious one.
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1059
|Tactics=Execution,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Description=Create a baseline of parents of cmd.exe seen over the last 30 days and a list of parents of cmd.exe seen today. Remove parents in the baseline from parents seen today, leaving a list of new parents.
|Example Query=processes = search Process:Create
cmd = filter processes where (exe == "cmd.exe")
cmd = from cmd select parent_exe
historic_cmd = filter cmd (where timestamp &lt; now - 1 day AND timestamp &gt; now - 1 day)
current_cmd = filter cmd (where timestamp &gt;= now - 1 day)
new_cmd = historic_cmd - current_cmd
output new_cmd
|Required Fields=process/create/exe, process/create/parent_exe,
}}
|UnitTests=
|AnalyticInstantiations=
|Instantiation_Pipeline Predecessor=OP-Join-0005
|Instantiation_Output Fields=_time, hostname, ppid, pid, user, parent_image_path, image_path, command_line
}}</text>
            <sha1>g0s4lkctcfcogo3gm3wxxcrigc7dfz1</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2014-11-004</title>
        <ns>0</ns>
        <id>400</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10772</id>
            <parentid>10709</parentid>
            <timestamp>2016-04-22T16:12:55Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1224">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=Remote PowerShell Sessions
|Hypothesis=According to ATT&amp;CK, PowerShell can be used over WinRM to remotely run commands on a host. When a remote PowerShell session starts, svchost.exe executes wsmprovhost.exe
|SubmissionDate=2014/11/19
|AnalyticType=TTP,
|InformationDomain=Host, Network
|HostSubtypes=Process
|NetworkProtocols=WinRM,
|AnalyticNotes=For this to work, certain registry keys must be set, and the WinRM service must be enabled. The PowerShell command "Enter-PSSession -ComputerName &lt;RemoteHost&gt;" creates a remote PowerShell session.
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1086
|Tactics=Execution
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1028
|Tactics=Lateral Movement
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Example Query=process = search Process:Create
wsmprovhost = filter process where (exe == "wsmprovhost.exe" and parent_exe == "svchost.exe")
|Required Fields=process/create/exe, process/create/parent_exe,
}}
|UnitTests=
|AnalyticInstantiations=
|Instantiation_Pipeline Predecessor=OP-Filter-0018
|Instantiation_Output Fields=_time, hostname, user, ppid, pid, image_path, command_line
}}</text>
            <sha1>d70429lde31mllgk9ktxioan8eyk13o</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2014-11-005</title>
        <ns>0</ns>
        <id>401</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10773</id>
            <parentid>10651</parentid>
            <timestamp>2016-04-22T16:16:48Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2166">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=Remote Registry
|Hypothesis=An adversary can remotely {{Technique Link|T1112|manipulate the registry}} of another machine if the RemoteRegistry service is enabled and valid credentials are obtained. While the registry is remotely accessed, it can be used to prepare a [[attack:Lateral Movement|lateral movement]] technique, [[attack:Discovery|discover]] the configuration of a host, achieve [[attack:Persistence|persistence]], or anything that aids an adversary in achieving the mission.

Like most ATT&amp;CK techniques, this behavior can be used legitimately, and the reliability of an analytic depends on the proper identification of the pre-existing legitimate behaviors. Although this behavior is disabled in many Windows configurations, it is possible to {{Technique Link|T1035|remotely enable}} the RemoteRegistry service, which can be detected with {{Analytic Link|CAR-2014-03-005}}.
|SubmissionDate=2014/11/19
|AnalyticType=TTP,
|InformationDomain=Host, Network
|HostSubtypes=Network, Registry, File,
|NetworkSubtypes=PCAP,
|NetworkProtocols=SMB,
|AnalyticNotes=Remote access to the registry can be achieved via
* Windows API function [https://msdn.microsoft.com/en-us/library/windows/desktop/ms724840.aspx RegConnectRegistry]
* command line via &lt;code&gt;reg.exe&lt;/code&gt;
* graphically via &lt;code&gt;regedit.exe&lt;/code&gt;

All of these behaviors call into the Windows API, which uses the NamedPipe &lt;code&gt;WINREG&lt;/code&gt; over SMB to handle the protocol information. This network can be decoded with wireshark or a similar sensor, and can also be detected by hooking the API function.
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1112
|Tactics=Lateral Movement,Defense Evasion
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Example Query=flows = search Flow:Message
winreg = filter flows where (dest_port == 445 and proto_info.pipe == "WINREG")
winreg_modify = filter flows where (proto_info.function == "Create*" or proto_info.function == "SetValue*")

output winreg_modify
|Required Fields=flow/message/dest_port, flow/message/proto_info,
}}
|UnitTests=
|AnalyticInstantiations=
}}</text>
            <sha1>lmvo1dw8q477b2mbg4gb8bfbyfs9kb4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2014-11-006</title>
        <ns>0</ns>
        <id>402</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>11000</id>
            <parentid>10775</parentid>
            <timestamp>2016-07-06T11:07:12Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1573">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=Windows Remote Management (WinRM)
|Hypothesis=When a Windows Remote Management connection is opened, the client sends HTTP requests to port 5985 for HTTP or 5986 for HTTPS on the target host. Each HTTP(S) request to the URI "/wsman" is called, and other information is set in the headers. Depending on the operation, the HTTP method may vary (i.e., GET, POST, etc.).

This analytic would detect Remote PowerShell, as well as other communications that rely on WinRM. Additionally, it outputs the executable on the client host, the connection information, and the hostname of the target host.
|SubmissionDate=2014/11/19
|AnalyticType=Situational Awareness,
|InformationDomain=Host, Network
|HostSubtypes=Network,
|NetworkSubtypes=Netflow,
|NetworkProtocols=WinRM,
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1028
|Tactics=Lateral Movement,
|Coverage=High
}}
|Pseudocode={{Analytic Pseudocode
|Description=Look for network connections to port 5985 and 5986. To really decipher what is going on, these outputs should be fed into something that can do packet analysis.
|Example Query=flow = search Flow:Start
winrm = filter flow where (dest_port == 5985)
winrm_s = filter flow where (dest_port == 5986)
output winrm, winrm_s
|Required Fields=flow/start/dest_port, flow/start/dest_port,
}}
|UnitTests=
|AnalyticInstantiations=
|Instantiation_Pipeline Predecessor=OP-Filter-0020
|Instantiation_Output Fields=_time, hostname, ppid, pid, exe, dest_hostname, src_ip, src_port, dest_ip, dest_port
}}</text>
            <sha1>ct9d8ssl8k8vyg0esersu8qasg4z2ja</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2014-11-007</title>
        <ns>0</ns>
        <id>403</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>11016</id>
            <parentid>10776</parentid>
            <timestamp>2016-07-21T18:31:21Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2425">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=Remote Windows Management Instrumentation (WMI) over RPC
|Hypothesis=As described in ATT&amp;CK, an adversary can use {{Technique Link|T1047|Windows Management Instrumentation}} (WMI) to view or manipulate objects on a remote host. It can be used to remotely edit configuration, start services, query files, and anything that can be done with a WMI class. 

When remote WMI requests are over RPC ({{Analytic Link|CAR-2014-05-001}}), it connects to a DCOM interface within the RPC group netsvcs. To detect this activity, a sensor is needed at the network level that can decode RPC traffic or on the host where the communication can be detected more natively, such as [https://msdn.microsoft.com/en-us/library/windows/desktop/bb968803.aspx Event Tracing for Windows]. Using wireshark/tshark decoders, the WMI interfaces can be extracted so that WMI activity over RPC can be detected.
|SubmissionDate=2014/11/19
|AnalyticType=TTP,
|InformationDomain=Host, Network
|HostSubtypes=API, RPC,
|NetworkSubtypes=PCAP, Hostflow,
|NetworkProtocols=RPC, WMI,
|OutputDataDescription=Identifies the connection in which WMI traffic is seen, as well as the process(es) responsible for owning the connection.
|AnalyticNotes=Although the description details how to detect remote WMI precisely, a decent estimate has been to look for the string RPCSS within the initial RPC connection on 135/tcp. It returns a superset of this activity, and will trigger on all DCOM-related services running within RPC, which is likely to also be activity that should be detected between hosts.

[http://www.hsc.fr/ressources/articles/win_net_srv/rpcss_dcom_interfaces.html rpcss_dcom_interfaces.html]
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1047
|Tactics=Lateral Movement
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Description=To detect WMI over RPC (using DCOM), a sensor needs to exist that has the insight into individual connections and can actually decode and make sense of RPC traffic. Specifically, WMI can be detected by looking at RPC traffic where the target interface matches that of WMI, which is IRemUnknown2.
|Example Query=flows = search Flow:Message
wmi_flow = filter flows where (dest_port == 135 and proto_info.rpc_interface == "IRemUnknown2")
output wmi_flow
|Required Fields=flow/message/proto_info,
}}
|UnitTests=
|AnalyticInstantiations=
}}</text>
            <sha1>hetqz7ssr7rg5brniz6gbbdaujgnhea</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2014-11-008</title>
        <ns>0</ns>
        <id>404</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10785</id>
            <parentid>10777</parentid>
            <timestamp>2016-04-25T18:11:57Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2074">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=Command Launched from WinLogon
|Hypothesis=An adversary can use {{Technique Link|T1015|accessibility features}} (Ease of Access), such as StickyKeys or Utilman, to launch a command shell from the logon screen and gain SYSTEM access. Since an adversary does not have physical access to the machine, this technique must be run within {{Technique Link|T1076|Remote Desktop}}. To prevent an adversary from getting to the login screen without first authenticating, Network-Level Authentication (NLA) must be enabled.

If a debugger is set up for one of the accessibility features, then it will intercept the process launch of the feature and instead execute a new command line. This analytic looks for instances of &lt;code&gt;cmd.exe&lt;/code&gt; or &lt;code&gt;powershell.exe&lt;/code&gt; launched directly from the logon process, &lt;code&gt;winlogon.exe&lt;/code&gt;. It should be used in tandem with {{Analytic Link|CAR-2014-11-003}}, which detects the accessibility programs in the command line.
|SubmissionDate=2014/11/19
|AnalyticType=TTP,
|InformationDomain=Host
|HostSubtypes=Process,
|AnalyticNotes=Several accessibility programs can be run using the Ease of Access center
* &lt;code&gt;sethc.exe&lt;/code&gt; handles StickyKeys
* &lt;code&gt;utilman.exe&lt;/code&gt; is the Ease of Access menu
* &lt;code&gt;osk.exe&lt;/code&gt; runs the On-Screen Keyboard
* &lt;code&gt;narrator.exe&lt;/code&gt; reads screen text over audio
* &lt;code&gt;magnify.exe&lt;/code&gt; magnifies the view of the screen near the cursor
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1015
|Tactics=Privilege Escalation, Execution, Persistence,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Description=Look for instances of processes where the parent executable is winlogon.exe and the child is an instance of a command prompt.
|Example Query=processes = search Process:Create
winlogon_cmd = filter processes where (parent_exe == "winlogon.exe" and exe == "cmd.exe")
output winlogon_cmd
|Required Fields=process/create/parent_exe, process/create/exe,
}}
|UnitTests=
|AnalyticInstantiations=
}}</text>
            <sha1>sve5r2o5sl7aole0e84yol907aj6lt3</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2014-11-003</title>
        <ns>0</ns>
        <id>405</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10786</id>
            <parentid>10771</parentid>
            <timestamp>2016-04-25T18:17:16Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2765">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=Debuggers for Accessibility Applications
|Hypothesis=The Windows Registry location "HKLM\Software\Microsoft\Windows NT\CurrentVersion\Image File Execution Options" allows for parameters to be set for applications during execution. One feature used by malicious actors is the "Debugger" option. When a key has this value enabled, a Debugging command line can be specified. Windows will launch the Debugging command line, and pass the original command line in as an argument.

Adversaries can set a Debugger for {{Technique Link|T1015|Accessibility Applications}}. The analytic looks for the original command line as an argument to the Debugger.

When the strings "sethc.exe", "utilman.exe", "osk.exe", "narrator.exe", and "Magnify.exe" are detected in the arguments, but not as the main executable, it is very likely that a Debugger is set.
|SubmissionDate=2014/11/21
|AnalyticType=TTP,
|InformationDomain=Host
|HostSubtypes=Process
|AnalyticNotes=This analytic could depend on the possibility of the known strings used as arguments for other applications used in the day-to-day environment. Although the chance of the string "sethc.exe" being used as an argument for another application is unlikely, it still is a possibility.
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1015
|Tactics=Privilege Escalation, Execution, Persistence,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Description=One simple way to implement this technique is to note that in a default Windows configuration there are no spaces in the path to the &lt;code&gt;system32&lt;/code&gt; folder. If the accessibility programs are ever run with a Debugger set, then Windows will launch the Debugger process and append the command line to the accessibility program. As a result, a space is inserted in the command line before the path. Looking for any instances of a space in the command line before the name of an accessibility program will help identify when Debuggers are set.
|Example Query=process = search Process:Create
debuggers = filter process where (command_line match "$.* .*(sethc{{pipe}}utilman{{pipe}}osk{{pipe}}narrator{{pipe}}magnify)\.exe")
output debuggers
|Required Fields=process/create/exe, process/create/command_line,
}}
|UnitTests={{Analytic Unit Test
|Configurations=Windows 7,
|Description=Although it does not actually utilize the Debugging command line, an easy way to test this analytic to run cmd.exe from a command window, supplying one of the strings as arguments.
|Command=cmd.exe Magnify.exe
}}
|AnalyticInstantiations=
|Instantiation_Pipeline Predecessor=OP-Filter-0017
|Instantiation_Output Fields=_time, hostname, user, ppid, pid, parent_image_path, image_path, command_line
}}</text>
            <sha1>srgmo1s9mnw9yqqo46pvt3w4dktqqj6</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2014-12-001</title>
        <ns>0</ns>
        <id>406</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10891</id>
            <parentid>10778</parentid>
            <timestamp>2016-06-29T22:32:24Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="3930">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=Remotely Launched Executables via WMI
|Hypothesis=Adversaries can use {{Technique Link|T1047|Windows Management Instrumentation (WMI)}} to move laterally by launching executables remotely. For adversaries to achieve this, they must open a WMI connection to a remote host. This RPC activity is currently detected by {{Analytic Link|CAR-2014-11-007}}. After the WMI connection has been initialized, a process can be remotely launched using the command: &lt;code&gt;wmic /node:"&lt;hostname&gt;" process call create "&lt;command line&gt;"&lt;/code&gt;, which is detected via {{Analytic Link|CAR-2016-03-002}}. 

This leaves artifacts at both a network (RPC) and process (command line) level. When wmic.exe (or the schtasks API) is used to remotely create processes, Windows uses RPC (135/tcp) to communicate with the the remote machine.

After RPC authenticates, the RPC endpoint mapper opens a high port connection, through which the schtasks Remote Procedure Call is actually implemented. With the right packet decoders, or by looking for certain byte streams in raw data, these functions can be identified.

When the command line is executed, it has the parent process of &lt;code&gt;C:\windows\system32\wbem\WmiPrvSE.exe&lt;/code&gt;. This analytic looks for these two events happening in sequence, so that the network connection and target process are output.
|SubmissionDate=2014/12/02
|AnalyticType=TTP,
|InformationDomain=Host, Network
|HostSubtypes=Network, Process
|NetworkSubtypes=PCAP,
|NetworkProtocols=RPC,
|OutputDataDescription=Identifies the process that initiated the RPC request (such as &lt;code&gt;wmic.exe&lt;/code&gt; or &lt;code&gt;powershell.exe&lt;/code&gt;), as well as the source and destination information of the network connection that triggered the alert.
|AnalyticNotes=Certain strings can be identifiers of the WMI by looking up the interface UUID for IRemUnknown2 in different formats
* UUID &lt;code&gt;00000143-0000-0000-c000-000000000046&lt;/code&gt; (decoded)
* Hex &lt;code&gt;43 01 00 00 00 00 00 00 c0 00 00 00 00 00 00 46&lt;/code&gt; (raw)
* ASCII&lt;code&gt;CF&lt;/code&gt; (printable text only)

This identifier is present three times during the RPC request phase. Any sensor that has access to the byte code as raw, decoded, or ASCII could implement this analytic.

The transfer syntax is 
* UUID &lt;code&gt;8a885d04-1ceb-11c9-9fe8-08002b104860&lt;/code&gt; (decoded)
* Hex &lt;code&gt;04 5d 88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60&lt;/code&gt; (raw)
* ASCII&lt;code&gt;]+H`&lt;/code&gt; (printable text only)

Thus, a great ASCII based signature is
* &lt;code&gt;*CF*]+H*CF*CF*host*"&lt;/code&gt;
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1047
|Tactics=Execution,
|Coverage=High
}}
|Pseudocode={{Analytic Pseudocode
|Description=Look for instances of the WMI querying in network traffic, and find the cases where a process is launched immediately after a connection is seen. This essentially merges the request to start a remote process via WMI with the process execution. If other processes are spawned from &lt;code&gt;wmiprvse.exe&lt;/code&gt; in this time frame, it is possible for race conditions to occur, and the wrong process may be merged. If this is the case, it may be useful to look deeper into the network traffic to see if the desired command can be extracted.
|Example Query=processes = search Process:Create
wmi_children = filter processes where (parent_exe == "wmiprvse.exe")

flows = search Flow:Message
wmi_flow = filter flows where (src_port &gt;= 49152 and dest_port &gt;= 49152 and proto_info.rpc_interface == "IRemUnknown2")

remote_wmi_process = join wmi_children, wmi_flow where (
    wmi_flow.time &lt; wmi_children.time &lt; wmi_flow.time + 1sec and 
    wmi_flow.hostname == wmi_children.hostname  
)

output remote_wmi_process
|Required Fields=flow/message/proto_info, process/create/parent_exe, process/create/exe, process/create/command_line, flow/message/dest_port, flow/message/src_port,
}}
|UnitTests=
|AnalyticInstantiations=
}}</text>
            <sha1>ax09s146340rjoibf6dzyckyrdza0nd</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Criteria</title>
        <ns>102</ns>
        <id>425</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>3166</id>
            <parentid>3157</parentid>
            <timestamp>2014-12-08T02:57:39Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="46">This is a property of type [[Has type::Code]].</text>
            <sha1>czxcmn12bkxuwt8g2rduqsuxtr5psk8</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Operator Type</title>
        <ns>102</ns>
        <id>427</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>3089</id>
            <timestamp>2014-12-08T00:53:03Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Concept:AllOperators</title>
        <ns>108</ns>
        <id>428</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>3097</id>
            <timestamp>2014-12-08T01:07:51Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="142">{{#concept: [[Category:Operators]]
| All Operators in the CAR. 
  To add more analytics, click the "Add a new Analytic" link in the sidebar
}}</text>
            <sha1>sj5uiagv9wvkvsl1320x8epcibgeioz</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Description</title>
        <ns>102</ns>
        <id>432</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>3158</id>
            <timestamp>2014-12-08T02:49:24Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Concept:AllPipelineElements</title>
        <ns>108</ns>
        <id>439</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>4160</id>
            <parentid>3896</parentid>
            <timestamp>2015-01-13T07:23:43Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="160">{{#concept: [[Has Pipeline Element Name::+]]
| All Pipeline Elements in the CAR. 
  To add more analytics, click the "Add a new Analytic" link in the sidebar
}}</text>
            <sha1>e3zk6w7hovv426m8gswbf9e00oz3dby</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Form:SensorNormalization</title>
        <ns>106</ns>
        <id>475</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>5685</id>
            <parentid>5684</parentid>
            <timestamp>2015-01-28T23:04:55Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="738">&lt;noinclude&gt;
This is the "SensorNormalization" form.
To create a page with this form, enter the page name below;
if a page with that name already exists, you will be sent to a form to edit that page.


{{#forminput:form=SensorNormalization}}

&lt;/noinclude&gt;&lt;includeonly&gt;
{{{ for template|Event Type Normalization }}}
&lt;table class="formtable"&gt;
&lt;tr&gt;
  &lt;td style="font-weight:bold"&gt;event type&lt;/td&gt;&lt;td/&gt;&lt;td&gt;{{{field|1|}}}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
{{#arraymap: A,B,C,D,E,F|,|$field|&lt;tr&gt;&lt;td style="font-weight:bold;"&gt;$field&lt;/td&gt;&lt;td&gt;=&lt;/td&gt;&lt;td&gt;{{{field|$field}}}&lt;/td&gt;&lt;/tr&gt;|}}
&lt;/table&gt;
{{{ end template }}}


{{{standard input|save}}} {{{standard input|preview}}} {{{standard input|changes}}} {{{standard input|cancel}}}
&lt;/includeonly&gt;</text>
            <sha1>74k542dx4sfyztowvm7h1hh1aytzpr2</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Form:DataModel</title>
        <ns>106</ns>
        <id>480</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6603</id>
            <parentid>6586</parentid>
            <timestamp>2015-03-11T04:05:56Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="912">&lt;noinclude&gt;
This is the "DataModel" form.
To create a page with this form, enter the page name below;
if a page with that name already exists, you will be sent to a form to edit that page.
&lt;/noinclude&gt;
&lt;includeonly&gt;
{{{info|page name=Data Model}}}
{{{for template|DataModel}}}
{| class="formtable stackedform"
|- class="requiredField"
! Description
| {{{field|Description|input type=textarea}}}
|}
{{{end template}}}

{{{for template|Abstraction Object|multiple|label=EventTypes}}}
{| class="formtable stackedform"
|- class="requiredField"
! Object 
| {{{field|Name|input type=text|mandatory}}}
|- class="requiredField"
! Fields
| {{{field|Fields|input type=tokens|size=100|list}}}
|-
! Actions
| {{{field|Actions|input type=tokens|size=100|list}}}
|-
! Description
| {{{field|Description|input type=textarea|autogrow}}}
|}
{{{end template}}}

{{{standard input|save}}} {{{standard input|cancel}}}
&lt;/includeonly&gt;</text>
            <sha1>7qgzzamm6n9vdwe9lzpkbbi12wxi0v9</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Required Field</title>
        <ns>102</ns>
        <id>483</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>3597</id>
            <timestamp>2014-12-19T07:28:47Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Data Model with Sensors</title>
        <ns>0</ns>
        <id>484</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>8837</id>
            <parentid>8339</parentid>
            <timestamp>2015-09-30T16:19:35Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1555">__NOEDITSECTION__{{Hidden
|
{{#arraydefine: SensedFields|{{{Fields|}}}|,|uniq}}
{{#arraydefine: Sensors|{{#ask: [[Category:Sensors]]|link=none|format=list}}|,}}
{{#arraymap: {{#arrayprint: Sensors}}
|,
|$Sensor
|{{#arraydefine: Coverage__$Sensor
|{{#ask: [[$Sensor]]|mainlabel=-|?Has Field Coverage=|format=list}}
|,
}} &lt;!-- end arraydefine --&gt;
}} &lt;!-- end arraymap --&gt;
}}
{{Article Link|Help:Data Model}}
[[Data Model ATTACK|Compare]] the data model's use in analytics that map to ATT&amp;CK.

''{{#formlink:form=Data Model Object|link text=Add an Object|popup}}''
{{#arraymap: {{#ask: [[Category:Data Model]]|mainlabel=-|?Has Object Name=|format=list|sort=Has Object Name}}
|,
|$Object
|&lt;nowiki&gt;
&lt;/nowiki&gt;
=== [[Data Model/$Object|$Object]] ===
{{#arraydefine: Fields|{{#ask: [[Has Object Name::$Object]]|mainlabel=-|?Has Object Field=|format=list}}|,|sort=asc}}
{{#arraydefine: Actions|{{#ask: [[Has Object Name::$Object]]|mainlabel=-|?Has Object Action=|format=list}}|,|sort=asc}}
&lt;table class="sensor_table wikitable"&gt;
&lt;tr&gt;&lt;th&gt;&lt;/th&gt;{{#arrayprint: Fields
|
|$Field
|&lt;th&gt;[[Data Model/$Object#$Field|$Field]]&lt;/th&gt;
|
|}} &lt;!-- End Field --&gt;
&lt;/tr&gt;

{{#arrayprint: Actions
|
|$Action
|&lt;tr&gt;
&lt;th&gt;{{#ifeq: $Action|.|.|[[Data Model/$Object#$Action|$Action]]}}&lt;/th&gt;
{{#arrayprint: Fields
|
|$Field
|&lt;td&gt;{{#arrayprint: Sensors
|
|$Sensor
|{{#arraysearch: Coverage__$Sensor
|$Object/$Action/$Field
|0
|[[$Sensor]]&lt;br/&gt;
|}} &lt;!-- end arraysearch --&gt;
}} &lt;!-- end arrayprint --&gt;
&lt;/td&gt;
|}} &lt;!-- End Field --&gt;
&lt;/tr&gt;
|
|}} &lt;!-- End Action --&gt;
&lt;/table&gt;
|
}}&lt;!-- End Object --&gt;</text>
            <sha1>ask7zniff80hsr1h74ub3t3cnffzg81</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Instantiation Name</title>
        <ns>102</ns>
        <id>495</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>4071</id>
            <timestamp>2015-01-12T17:18:46Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Pipe</title>
        <ns>10</ns>
        <id>496</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7020</id>
            <parentid>5236</parentid>
            <timestamp>2015-03-16T20:27:59Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="73">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;&amp;#124;&lt;/includeonly&gt;</text>
            <sha1>6rl770lqh2mmrvofwm1cdum5hhcergo</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:RequiredFieldsTable</title>
        <ns>10</ns>
        <id>500</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>9914</id>
            <parentid>8570</parentid>
            <timestamp>2016-03-25T03:44:53Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="819">&lt;noinclude&gt;
Creates a table that looks like:
{{RequiredFieldsTable|fields=process/create/exe,process/create/ppid,process/terminate/pid}}

&lt;pre&gt;
{{RequiredFieldsTable
|fields=&lt;event type&gt;::&lt;field&gt;,&lt;event type::&lt;field&gt;,...
}}
&lt;/pre&gt;
&lt;/noinclude&gt;&lt;includeonly&gt;{{#arraydefine: Fields|{{{fields|}}}|, |unique,sort=asc}}
&lt;table class="fields_table wikitable" style="margin:0px;"&gt;
{{#arraymap: {{#arrayprint:Fields|,}}
|,
|$Field
|{{#if: $Field
|&lt;tr&gt;{{#vardefine: Object|{{#explode: $Field|/|0}}|}}
   &lt;th&gt;[[Data Model/{{#var: Object}}|{{#var: Object}}]]&lt;/th&gt;
   &lt;th&gt;[[Data Model/{{#var: Object}}#{{#explode: $Field|/|1}}|{{#explode: $Field|/|1}}]]&lt;/th&gt;
   &lt;td&gt;[[Data Model/{{#var: Object}}#{{#explode: $Field|/|2}}|{{#explode: $Field|/|2}}]]&lt;/td&gt;
&lt;/tr&gt;
|}}&lt;!-- end if --&gt;
|}} &lt;!-- end arraymap Fields--&gt;
&lt;/table&gt;&lt;/includeonly&gt;</text>
            <sha1>skqd3zwpho5xrmn86no8aq38i7mdcyi</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Hidden</title>
        <ns>10</ns>
        <id>501</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7021</id>
            <parentid>5384</parentid>
            <timestamp>2015-03-16T20:28:41Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="99">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;{{#vardefine: Ignored|{{{1}}}|}}&lt;/includeonly&gt;</text>
            <sha1>bb3q2mfuia5h7wtbnmsek8umyo0fph0</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Instantiation Id</title>
        <ns>102</ns>
        <id>512</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>4804</id>
            <timestamp>2015-01-23T21:57:15Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Is Analytic Instantiation Of</title>
        <ns>102</ns>
        <id>513</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>4805</id>
            <timestamp>2015-01-23T21:57:29Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="46">This is a property of type [[Has type::Page]].</text>
            <sha1>jk9aupditbfg4coza27xh6berm5n0sp</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:PipelineLink</title>
        <ns>10</ns>
        <id>519</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7179</id>
            <parentid>7176</parentid>
            <timestamp>2015-03-17T09:44:33Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="474">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;{{#if: {{{1|}}}
|{{#ask: [[Has Pipeline Element Name::{{{1|}}}]]
|format=template
|template=PipelineLink
|named args=yes
|link=none
|?Has Pipeline Element Link
|?Has Pipeline Element Name
|?Has Pipeline Element Description
|customparam={{{2|}}}
|}}
|}}{{#if: {{{?Has Pipeline Element Name|}}}
|[[{{{?Has Pipeline Element Link}}}|{{{?Has Pipeline Element Name}}}]]: {{{?Has Pipeline Element Description}}}|}}&lt;/includeonly&gt;</text>
            <sha1>4cgut2q9xnhg4ff0gbu4klyxqfznp8j</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Help:Glossary</title>
        <ns>12</ns>
        <id>523</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10997</id>
            <parentid>10996</parentid>
            <timestamp>2016-07-05T17:16:02Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="4882">&lt;onlyinclude&gt;The Glossary is description of commonly used words and features of CAR. Critical terms such as [[Help:Glossary#Analytic|analytic]] are defined here.&lt;/onlyinclude&gt;
== ATT&amp;CK ==
{{Define|ATT&amp;CK|[[attack:Main Page|Adversarial Tactics, Techniques, and Common Knowledge]] (ATT&amp;CK�) is a model and framework for describing the actions an adversary may take while operating within an enterprise network. The model can be used to better characterize and describe post-access adversary behavior.}}

== Analytic ==
{{Define|Analytic|An ''analytic'' describes the observable behavior generated for a TTP. It is the method by which a TTP can be identified. Its [[#Hypothesis|hypothesis]] describes the behavior expected, and the [[#Instantiation|instantiation]] details its platform-specific implementation.}}

=== Hypothesis ===
{{Define|Hypothesis|The ''hypothesis'' should generally describe why this analytic is worth making, that is, what information do you hope to gather through this analytic, and what could this information indicate? It should describe the identifiable objects or artifacts that are associated with or modified when an ATT&amp;CK technique takes place.}}

=== Information Domain ===
{{Define|Information Domain|The ''information domain'' is the top-level categorization of the analytic. It should describe the type of analytic: ''Is it based on anomaly detection? A specific behavior? Statistical analysis?'' There are five possible information domains: ''Host'', ''Network'', and ''Analytic'', ''External'', and ''Other''.}}

=== Pseudocode === 
{{Define|Pseudocode|The ''pseudocode'' is a representative example of how the analytic query would be made.}}

=== ATT&amp;CK Detection ===
{{Define|ATT&amp;CK Detection|A summary of the ATT&amp;CK tactic and techniques the analytic detects as well as the level of coverage.}}

=== Unit Tests ===
{{Define|Unit tests|A set of commands that can be run which should trigger the analytic.}}

=== Analytic Type ===
{{Define|Analytic type|The kind of mechanism this analytic uses.}}
The following are descriptions of the analytic types.

: '''TTP'''
:: {{Define|TTP Analytic|A ''TTP analytic'' is designed to detect a certain adversary tactic, technique or procedure.}}
: '''Attribution'''
:: {{Define|Attribution Analytic|An ''attribution analytic'' is an anlytic that is designed to detect actions that are unique to a single to a certain threat actor.}}
: '''Posture/Hygiene''' 
:: {{Define|Posture/Hygiene Analytic|A ''posture or hygiene analytic'' is designed to help in the maintenance of the analytic or security infrastructure.}}
: '''Situational Awareness''' 
:: {{Define|Situational Awareness Analytic|A ''situational awareness analytic'' provide general information on the state of the environment. Often these analytics can be useful during an investibation, (e.g. information such as login times doesn�t indicate malicious activity, but when coupled with other indicators can provide much needed additional information). These types of analytics can also be helpful for monitoring the "health" of the environment (e.g. on which hosts are sensors not working).}}
: '''Forensic'''
:: {{Define|Forensic Analytic|A ''forensic analytic'' has a low SNR and is less likely to be indicative of adversary behavior but is nevertheless useful during an investigation. Several ''forensic analytics'' are anomaly-based, which can create excessive noise in a highly dynamic environment. Other analytics may also have noise as a result of admins/[[wikipedia:Power user|power users]], software installations, or internal scripts. However, when related results are triggered by multiple forensic analytics, the collective probability rises. Thus, the forensics analytics reinforce each other during the investigative process.}}
: '''Anomaly'''
:: {{Define|Anomaly Analytic|An ''anomaly analytic'' triggers on behavior that is not normally observed. Anomolous may not be explixitly malicious but may be suspect. For example, detection of executables that have never been run before or a process using the network which does not normally use the network. Like ''Situational Awareness analytics'', ''anomaly analytics'' don�t necessarily indicate an attack.}}
: '''Statistical'''
:: {{Define|Statistical Analytic|A ''statistical analytic'' uses various statistical mechanisms to identify adversarial behavior.}}
: '''Investigative'''
:: {{Define|Investigative Analytic|An ''investigative analytic'' is an analytic that is primarily used during an investigation rather than as an alert.}}
: '''Malware'''
:: {{Define|Malware Analytic|A ''malware analytic'' is an analytic used to detect a specific kind of malware, such as Mimikatz.}}
: '''Event Characterization'''
:: {{Define|Event Characterization Analytic|An ''event characterization analytic'' is used to characterize the output of another analytic into certain event types.}}</text>
            <sha1>gtnydw7cg1l418zcclpmbwsch2ljw7d</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:PipelineLabel</title>
        <ns>10</ns>
        <id>528</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>9518</id>
            <parentid>5518</parentid>
            <timestamp>2016-03-24T15:42:49Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="181">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;{{{1}}}: {{#ask: [[Has Pipeline Element Name::{{{1}}}]]|mainlabel=-|?Has Pipeline Element Description=|link=none}}&lt;/includeonly&gt;</text>
            <sha1>s4muhj0jte2j309p6wz3yyprewn0xl8</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Article Link</title>
        <ns>10</ns>
        <id>530</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7013</id>
            <parentid>5722</parentid>
            <timestamp>2015-03-16T20:22:31Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="144">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;:''Main article: [[{{{1}}}|{{#if:{{{2|}}}|{{{2}}}|{{{1}}}|}}]]''

{{{{{1}}}}}&lt;/includeonly&gt;</text>
            <sha1>c5nkjdo7tq4je0puknj7d92zp7in5al</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Define</title>
        <ns>10</ns>
        <id>537</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7026</id>
            <parentid>5742</parentid>
            <timestamp>2015-03-16T20:30:06Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="145">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;{{#set_internal: Is Definition Of
|Term={{{1}}}
|Definition={{{2}}}
|}}{{{2}}}&lt;/includeonly&gt;</text>
            <sha1>m9cg92uxsvf1pot9kd2j42zlqwsey3s</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Definition</title>
        <ns>10</ns>
        <id>538</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7024</id>
            <parentid>5863</parentid>
            <timestamp>2015-03-16T20:29:38Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="150">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;{{#ask: [[Is Definition Of::{{{2|+}}}]][[Term::{{{1}}}]]|mainlabel=-|?Definition=}}&lt;/includeonly&gt;</text>
            <sha1>2odjmsmaw71l4qh2moyutp9wcrg17re</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Term</title>
        <ns>102</ns>
        <id>539</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>5746</id>
            <timestamp>2015-01-29T16:54:56Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="46">This is a property of type [[Has type::Text]].</text>
            <sha1>e9l4lxsaidmyd6062gydncspht400ia</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Is Definition Of</title>
        <ns>102</ns>
        <id>540</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6128</id>
            <parentid>5747</parentid>
            <timestamp>2015-02-06T20:13:22Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="46">This is a property of type [[Has type::Page]].</text>
            <sha1>jk9aupditbfg4coza27xh6berm5n0sp</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Definition</title>
        <ns>102</ns>
        <id>541</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>5748</id>
            <timestamp>2015-01-29T16:56:01Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="46">This is a property of type [[Has type::Text]].</text>
            <sha1>e9l4lxsaidmyd6062gydncspht400ia</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Analytic Subtype</title>
        <ns>102</ns>
        <id>544</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10968</id>
            <parentid>10967</parentid>
            <timestamp>2016-06-30T17:29:11Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="406">This is a property of type [[Has type::String]].
It is a Subproperty of [[Subproperty of::Property:Has Subtype]]

The following values are allowed:
* [[Allows value::Signature-based]]
* [[Allows value::Hybrid]]
* [[Allows value::Attribution]]
* [[Allows value::Compliance Analysis]]
* [[Allows value::Risk Analysis]]
* [[Allows value::Sequence]]
* [[Allows value::Map building]]
* [[Allows value::Anomaly]]</text>
            <sha1>i7tprf6nnzcvnjxrqrnrn4b2l31xnlg</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has External Subtype</title>
        <ns>102</ns>
        <id>545</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10953</id>
            <parentid>7813</parentid>
            <timestamp>2016-06-30T15:40:12Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="277">This is a property of type [[Has type::String]].
It is a Subproperty of [[Subproperty of::Property:Has Subtype]]

The following values are allowed:
* [[Allows value::Alerts]]
* [[Allows value::HR Data]]
* [[Allows value::Facilities Data]]
* [[Allows value::Environmental Data]]</text>
            <sha1>5nv7214ce7cojbs2ki05spbod4ctfhx</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Network Subtype</title>
        <ns>102</ns>
        <id>546</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10955</id>
            <parentid>10954</parentid>
            <timestamp>2016-06-30T15:41:59Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="348">This is a property of type [[Has type::String]].
It is a Subproperty of [[Subproperty of::Property:Has Subtype]]

The following values are allowed:
* [[Allows value::Netflow]]
* [[Allows value::PCAP]]
* [[Allows value::Firewall logs]]
* [[Allows value::Proxy logs]]
* [[Allows value::DHCP logs]]
* [[Allows value::IDS]]
* [[Allows value::Hostflow]]</text>
            <sha1>oxliy645auukwyaqwwf8yh7htsmeqwp</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Network Protocol</title>
        <ns>102</ns>
        <id>547</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10979</id>
            <parentid>10976</parentid>
            <timestamp>2016-06-30T17:36:58Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="849">This is a property of type [[Has type::String]].
The following values are allowed:
* [[Allows value::Ethernet]]
* [[Allows value::Non-Ethernet L2]]
* [[Allows value::IP]]
* [[Allows value::ICMP]]
* [[Allows value::Non-IP L3]]
* [[Allows value::TCP]]
* [[Allows value::UDP]]
* [[Allows value::SMB]]
* [[Allows value::NTP]]
* [[Allows value::DNS]]
* [[Allows value::DHCP]]
* [[Allows value::HTTP]]
* [[Allows value::HTTPS]]
* [[Allows value::SMTP]]
* [[Allows value::POP]]
* [[Allows value::IMAP]]
* [[Allows value::LDAP]]
* [[Allows value::FTP]]
* [[Allows value::SSH]]
* [[Allows value::Telnet]]
* [[Allows value::IRC]]
* [[Allows value::RDP]]
* [[Allows value::RPC]]
* [[Allows value::NNTP]]
* [[Allows value::RTSP]]
* [[Allows value::CVS]]
* [[Allows value::RealAudio]]
* [[Allows value::NetBIOS]]
* [[Allows value::WinRM]]
* [[Allows value::WMI]]</text>
            <sha1>6y56dgsbvba25v6jugqdarefjwvofoj</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Host Subtype</title>
        <ns>102</ns>
        <id>548</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10978</id>
            <parentid>10977</parentid>
            <timestamp>2016-06-30T17:36:39Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="448">This is a property of type [[Has type::String]].
It is a Subproperty of [[Subproperty of::Property:Has Subtype]]

The following values are allowed:

* [[Allows value::File]]
* [[Allows value::Network]]
* [[Allows value::Process]]
* [[Allows value::Registry]]
* [[Allows value::Login]]
* [[Allows value::DLL]]
* [[Allows value::Event Records]]
* [[Allows value::API]]
* [[Allows value::Keyboard]]
* [[Allows value::Hostflow]]
* [[Allows value::RPC]]</text>
            <sha1>5yshwdaxu0kwdncmoh8d7e38ilbfzzc</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:ATTACK Coverage</title>
        <ns>10</ns>
        <id>570</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10864</id>
            <parentid>10859</parentid>
            <timestamp>2016-06-13T19:51:19Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1535">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;
{{#ask: [[Is ATTACK Reference For::{{#arraymap: {{{Analytics|}}}|,|$Analytic|$Analytic{{!!}}|}}NULL]]
|format={{{Output Format|}}}
|default=None
|?Is ATTACK Reference For=Analytic
|?Has ATTACK Technique ID=Technique
|?Has ATTACK Tactic=Tactics
|mainlabel=-
|limit=0
|searchlabel=Condensed ATT&amp;CK Mapping
}}{{#arraydefine: DirectTechniques|{{{Techniques|}}}|,}}

{{#arraydefine: ModerateTechniques|{{#ask: [[Has ATTACK Coverage::Moderate]][[Is ATTACK Reference For::{{#arraymap: {{{Analytics|}}}|,|$Analytic|$Analytic{{!!}}|}}NULL]]
|mainlabel=-
|limit=5000
|?Has ATTACK Technique ID=
|link=none
|sep=,
}},{{{Techniques|}}}
|,
|sort=asc,uniq}} {{#arrayunion: ModerateTechniques|ModerateTechniques|DirectTechniques}}
{{#arraydefine: HighTechniques|{{#ask: [[Has ATTACK Coverage::High]] [[Is ATTACK Reference For::{{#arraymap: {{{Analytics|}}}|,|$Analytic|$Analytic{{!!}}|}}NULL]]
|mainlabel=-
|limit=5000
|?Has ATTACK Technique ID=
|link=none
|sep=,
}},{{{Techniques|}}}
|,
|sort=asc,uniq}}
{{#arraydefine: LowTechniques|{{#ask: [[Has ATTACK Coverage::Low]] [[Is ATTACK Reference For::{{#arraymap: {{{Analytics|}}}|,|$Analytic|$Analytic{{!!}}|}}NULL]]
|mainlabel=-
|limit=5000
|?Has ATTACK Technique ID=
|link=none
|sep=,
}},
|,
|sort=asc,uniq}}
&lt;span id="matrix_link"&gt;[{{ATTACK URL}}/Technique_Matrix?default=bad&amp;good={{#arrayprint: HighTechniques|,}}&amp;moderate={{#arrayprint: ModerateTechniques|,}}&amp;low={{#arrayprint: LowTechniques|,}} ATT&amp;CK Technique Matrix]&lt;/span&gt;
&lt;/includeonly&gt;</text>
            <sha1>mcvxsbe3sh6k8cv1ux5acz6td08m5z5</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Form:ATTACK Query</title>
        <ns>106</ns>
        <id>573</id>
        <redirect xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" title="Form:ATTACK Coverage"/>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6100</id>
            <timestamp>2015-02-05T20:42:53Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="34">#REDIRECT [[Form:ATTACK Coverage]]</text>
            <sha1>jidihlhxfieaxerrt66g81fgqdf40jh</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Output Format</title>
        <ns>102</ns>
        <id>592</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6347</id>
            <timestamp>2015-02-10T20:28:10Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Output Command</title>
        <ns>102</ns>
        <id>593</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6348</id>
            <timestamp>2015-02-10T20:28:18Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Analytic Type</title>
        <ns>102</ns>
        <id>594</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10974</id>
            <parentid>10969</parentid>
            <timestamp>2016-06-30T17:33:13Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="411">This is a property of type [[Has type::String]].

The following values are allowed:
* [[Allows value::TTP]]
* [[Allows value::Attribution]]
* [[Allows value::Posture/Hygiene]]
* [[Allows value::Situational Awareness]]
* [[Allows value::Forensic]]
* [[Allows value::Anomaly]]
* [[Allows value::Statistical]]
* [[Allows value::Investigative]]
* [[Allows value::Malware]]
* [[Allows value::Event Characterization]]</text>
            <sha1>ryju6p3kb67a42xw8crkwx2sw2qe2hc</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:ATTACK Reference</title>
        <ns>10</ns>
        <id>598</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10589</id>
            <parentid>10534</parentid>
            <timestamp>2016-04-14T04:58:07Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="852">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;{{#arraydefine: Empty|, ,|,}}{{#arraydefine: Tactics|{{{Tactics|}}}|,|uniq,sort=asc}}{{#arraydiff: Tactics|Tactics|Empty}}{{#set:
Has ATTACK Technique ID={{{Technique}}}
|Has ATTACK Technique Link={{Technique Link|{{{Technique}}}}}
|Has ATTACK Tactic={{#arrayprint: Tactics|,|$|$}}|+sep=
|}}{{#set_internal: Is ATTACK Reference For
|Has ATTACK Technique ID={{{Technique}}}
|Has ATTACK Technique Link={{Technique Link|{{{Technique}}}}}
|Has ATTACK Tactic#list={{#arrayprint: Tactics|,|$|$}}|+sep=,
|Has ATTACK Coverage={{{Coverage|Moderate}}}
|Has ATTACK Coverage={{#ifeq: {{{Coverage|Moderate}}}|Moderate|Partial|Complete}}
|}}
&lt;tr&gt;
  &lt;td&gt;{{Technique Link|{{{Technique}}}}}&lt;/td&gt;
  &lt;td&gt;{{#arrayprint: Tactics|, &lt;nowiki/&gt;|$|[[attack:$|$]]}}&lt;/td&gt;
  &lt;td&gt;{{{Coverage|Moderate}}}&lt;/td&gt;
&lt;/tr&gt;
&lt;/includeonly&gt;</text>
            <sha1>rgaenpxz9jf397e96gfg5xdnd9ml8ks</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Is ATTACK Reference For</title>
        <ns>102</ns>
        <id>599</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6527</id>
            <timestamp>2015-02-11T16:55:07Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="46">This is a property of type [[Has type::Page]].</text>
            <sha1>jk9aupditbfg4coza27xh6berm5n0sp</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has ATTACK Technique ID</title>
        <ns>102</ns>
        <id>600</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10397</id>
            <parentid>10396</parentid>
            <timestamp>2016-04-14T00:33:42Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has ATTACK Tactic</title>
        <ns>102</ns>
        <id>601</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10545</id>
            <parentid>10143</parentid>
            <timestamp>2016-04-14T03:45:06Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has ATTACK Coverage</title>
        <ns>102</ns>
        <id>602</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6530</id>
            <timestamp>2015-02-11T16:55:39Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Abstraction Object</title>
        <ns>10</ns>
        <id>611</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7592</id>
            <parentid>7591</parentid>
            <timestamp>2015-04-09T16:29:13Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="660">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;{{#set_internal: Is Abstraction Object
|Has Object Name={{{Name|}}}
|Has Object Action#list=., {{{Actions|}}}
|Has Object Field#list={{{Fields|}}}
|Has Object Description={{{Description|}}}
|Has Object Specific Action#list={{#arraymap: ., {{{Actions|}}}|,|$Action|{{{Name|}}}/$Action}}
|Has Object Requirement#list={{#arraymap: ., {{{Actions|}}}
|,
|$Action
|{{#if: $Action
|{{#arraymap: {{{Fields|}}}
|,
|$Field
|{{#if: $Field
|{{{Name|}}}/$Action/$Field
}} &lt;!-- end if $Field --&gt;
}} &lt;!-- end arraymap Fields --&gt;
}} &lt;!-- end if $Action --&gt;
}} &lt;!-- end arraymap Actions --&gt;
}} &lt;!-- end set --&gt;&lt;/includeonly&gt;</text>
            <sha1>2klqvfwfo7okxg9tgyto9b9a1g05ebi</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Object Name</title>
        <ns>102</ns>
        <id>612</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6577</id>
            <timestamp>2015-03-06T19:59:06Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Object Action</title>
        <ns>102</ns>
        <id>613</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6578</id>
            <timestamp>2015-03-06T20:03:14Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Object Field</title>
        <ns>102</ns>
        <id>614</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6579</id>
            <timestamp>2015-03-06T20:03:30Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Object Requirement</title>
        <ns>102</ns>
        <id>615</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6580</id>
            <timestamp>2015-03-06T20:03:59Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Render Object</title>
        <ns>10</ns>
        <id>616</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6612</id>
            <parentid>6611</parentid>
            <timestamp>2015-03-11T04:23:56Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="436">&lt;noinclude&gt;
This is the "Render Object" template.
It should be called in the following format:
&lt;pre&gt;
{{DataModel
|Description=
}}
&lt;/pre&gt;
Edit the page to see the template text.
&lt;/noinclude&gt;&lt;includeonly&gt;
=== {{{?Has Object Name|}}} ===

''' Actions '''
{{#arraymap: {{{?Has Object Action|}}}
|,
|$Action
|&lt;nowiki/&gt;
* ''$Action''
|}}


''' Fields '''
{{#arraymap: {{{?Has Object Field|}}}
|,
|$Field
|&lt;nowiki/&gt;
* $Field
|}}
&lt;/includeonly&gt;</text>
            <sha1>qhrhgk8nk94ks1yjqmkkstg2bxujieu</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Object</title>
        <ns>102</ns>
        <id>617</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6673</id>
            <timestamp>2015-03-11T05:30:03Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Object Specific Action</title>
        <ns>102</ns>
        <id>618</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6684</id>
            <timestamp>2015-03-11T06:11:32Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Is Abstraction Object</title>
        <ns>102</ns>
        <id>619</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6695</id>
            <timestamp>2015-03-11T06:41:44Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="46">This is a property of type [[Has type::Page]].</text>
            <sha1>jk9aupditbfg4coza27xh6berm5n0sp</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Form:Sensor</title>
        <ns>106</ns>
        <id>620</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10557</id>
            <parentid>10193</parentid>
            <timestamp>2016-04-14T04:02:59Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1335">&lt;noinclude&gt;{{#forminput:form=Sensor}}&lt;/noinclude&gt;
Don't see an input option you need? {{FeedbackEmail}}&lt;includeonly&gt;__NOEDITSECTION____NOTOC__
{{{info|page name=&lt;Sensor[Name]&gt;}}}
== Details ==
{{{for template|Sensor}}}
{| class="stackedform"
|- class="requiredField"
! Title
| {{{field|Name|input type=text|maxlength=255|mandatory|placeholder=Sysmon}}}
|- class="requiredField"
! Manufacturer
| {{{field|Manufacturer|input type=combobox|text|maxlength=255|mandatory|placeholder=Microsoft|values from property=Has Manufacturer}}}
|- 
! Release Date
| {{{field|Release Date|input type=datepicker}}}
|-
! Version
| {{{field|Version|input type=text|placeholder=1.0}}}
|- 
! Website
| {{{field|Website|input type=text}}}
|- 
! Description
| {{{field|Description|input type=textarea}}}
|}

== Direct Coverage ==
{| class="stackedform"
! Analytic Coverage
| {{{field|Analytics|input type=tokens|values from category=Analytics|mapping property=Has Full Analytic Name|list}}}
|-
! Technique Coverage
| {{{field|Techniques|input type=tokens|values from property=Has ATTACK Technique ID|mapping property=Has ATTACK Technique Name}}}
|}

{{{field|Fields|holds template}}} 
{{{end template}}}


{{{for template|Extract Fields|embed in field=Sensor[Fields]}}}

== Data Model Coverage ==
{{Data Model Coverage Form}}

{{{end template}}}&lt;/includeonly&gt;</text>
            <sha1>ckk6otd2cawjls92l6of6uc2q0u74nu</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Sysmon (2.0)</title>
        <ns>0</ns>
        <id>622</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10914</id>
            <parentid>10892</parentid>
            <timestamp>2016-06-29T22:33:54Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="20496">{{Sensor
|Name=Sysmon
|Manufacturer=Microsoft Corporation
|Release Date=2014/01/19
|Version=2.0
|Website=https://technet.microsoft.com/en-us/sysinternals/sysmon
|Description=Sysmon is a freely available program from Microsoft that is provided as part of the Windows Sysinternals suite of tools. It collects system information while running in the background and supports storing it in the Windows Event Log.
|Techniques=T1099
|Fields={{Extract Fields
|Object#driver=Yes
|Requirement#driver/load/base_address=No
|Requirement#driver/load/fqdn=Yes
|Requirement#driver/load/hostname=Yes
|Requirement#driver/load/image_path=Yes
|Requirement#driver/load/md5_hash=Yes
|Requirement#driver/load/module_name=Yes
|Requirement#driver/load/sha1_hash=Yes
|Requirement#driver/load/sha256_hash=Yes
|Requirement#driver/load/signer=No
|Requirement#driver/unload/base_address=No
|Requirement#driver/unload/fqdn=No
|Requirement#driver/unload/hostname=No
|Requirement#driver/unload/image_path=No
|Requirement#driver/unload/md5_hash=No
|Requirement#driver/unload/module_name=No
|Requirement#driver/unload/sha1_hash=No
|Requirement#driver/unload/sha256_hash=No
|Requirement#driver/unload/signer=No
|Object#file=Yes
|Alias#file/creation_time=CreationUtcTime
|Alias#file/file_name=TargetFilename
|Alias#file/hostname=ComputerName
|Alias#file/image_path=Image
|Alias#file/pid=ProcessId
|Alias#file/previous_creation_time=PreviousCreationUtcTime
|Alias#file/user=User
|Requirement#file/create/company=No
|Requirement#file/create/creation_time=No
|Requirement#file/create/file_name=No
|Requirement#file/create/file_path=No
|Requirement#file/create/fqdn=No
|Requirement#file/create/hostname=No
|Requirement#file/create/image_path=No
|Requirement#file/create/md5_hash=No
|Requirement#file/create/pid=No
|Requirement#file/create/ppid=No
|Requirement#file/create/previous_creation_time=No
|Requirement#file/create/sha1_hash=No
|Requirement#file/create/sha256_hash=No
|Requirement#file/create/signer=No
|Requirement#file/create/user=No
|Requirement#file/delete/company=No
|Requirement#file/delete/creation_time=No
|Requirement#file/delete/file_name=No
|Requirement#file/delete/file_path=No
|Requirement#file/delete/fqdn=No
|Requirement#file/delete/hostname=No
|Requirement#file/delete/image_path=No
|Requirement#file/delete/md5_hash=No
|Requirement#file/delete/pid=No
|Requirement#file/delete/ppid=No
|Requirement#file/delete/previous_creation_time=No
|Requirement#file/delete/sha1_hash=No
|Requirement#file/delete/sha256_hash=No
|Requirement#file/delete/signer=No
|Requirement#file/delete/user=No
|Requirement#file/modify/company=No
|Requirement#file/modify/creation_time=No
|Requirement#file/modify/file_name=No
|Requirement#file/modify/file_path=No
|Requirement#file/modify/fqdn=No
|Requirement#file/modify/hostname=No
|Requirement#file/modify/image_path=No
|Requirement#file/modify/md5_hash=No
|Requirement#file/modify/pid=No
|Requirement#file/modify/ppid=No
|Requirement#file/modify/previous_creation_time=No
|Requirement#file/modify/sha1_hash=No
|Requirement#file/modify/sha256_hash=No
|Requirement#file/modify/signer=No
|Requirement#file/modify/user=No
|Requirement#file/read/company=No
|Requirement#file/read/creation_time=No
|Requirement#file/read/file_name=No
|Requirement#file/read/file_path=No
|Requirement#file/read/fqdn=No
|Requirement#file/read/hostname=No
|Requirement#file/read/image_path=No
|Requirement#file/read/md5_hash=No
|Requirement#file/read/pid=No
|Requirement#file/read/ppid=No
|Requirement#file/read/previous_creation_time=No
|Requirement#file/read/sha1_hash=No
|Requirement#file/read/sha256_hash=No
|Requirement#file/read/signer=No
|Requirement#file/read/user=No
|Requirement#file/timestomp/company=No
|Requirement#file/timestomp/creation_time=Yes
|Requirement#file/timestomp/file_name=Yes
|Requirement#file/timestomp/file_path=No
|Requirement#file/timestomp/fqdn=No
|Requirement#file/timestomp/hostname=Yes
|Requirement#file/timestomp/image_path=Yes
|Requirement#file/timestomp/md5_hash=No
|Requirement#file/timestomp/pid=Yes
|Requirement#file/timestomp/ppid=No
|Requirement#file/timestomp/previous_creation_time=Yes
|Requirement#file/timestomp/sha1_hash=No
|Requirement#file/timestomp/sha256_hash=No
|Requirement#file/timestomp/signer=No
|Requirement#file/timestomp/user=Yes
|Requirement#file/write/company=No
|Requirement#file/write/creation_time=No
|Requirement#file/write/file_name=No
|Requirement#file/write/file_path=No
|Requirement#file/write/fqdn=No
|Requirement#file/write/hostname=No
|Requirement#file/write/image_path=No
|Requirement#file/write/md5_hash=No
|Requirement#file/write/pid=No
|Requirement#file/write/ppid=No
|Requirement#file/write/previous_creation_time=No
|Requirement#file/write/sha1_hash=No
|Requirement#file/write/sha256_hash=No
|Requirement#file/write/signer=No
|Requirement#file/write/user=No
|Object#flow=Yes
|Alias#flow/dest_ip=DestinationIP
|Alias#flow/dest_port=DestinationPort
|Alias#flow/exe=Image
|Alias#flow/hostname=ComputerName
|Alias#flow/image_path=Image
|Alias#flow/pid=ProcessId
|Alias#flow/protocol=Protocol
|Alias#flow/src_ip=SourceIP
|Alias#flow/src_port=SourcePort
|Alias#flow/start_time=UtcTime
|Alias#flow/user=User
|Requirement#flow/end/content=No
|Requirement#flow/end/dest_fqdn=No
|Requirement#flow/end/dest_hostname=No
|Requirement#flow/end/dest_ip=No
|Requirement#flow/end/dest_port=No
|Requirement#flow/end/end_time=No
|Requirement#flow/end/exe=No
|Requirement#flow/end/flags=No
|Requirement#flow/end/fqdn=No
|Requirement#flow/end/hostname=No
|Requirement#flow/end/image_path=No
|Requirement#flow/end/packet_count=No
|Requirement#flow/end/pid=No
|Requirement#flow/end/ppid=No
|Requirement#flow/end/proto_info=No
|Requirement#flow/end/protocol=No
|Requirement#flow/end/src_fqdn=No
|Requirement#flow/end/src_hostname=No
|Requirement#flow/end/src_ip=No
|Requirement#flow/end/src_port=No
|Requirement#flow/end/start_time=No
|Requirement#flow/end/user=No
|Requirement#flow/message/content=No
|Requirement#flow/message/dest_fqdn=No
|Requirement#flow/message/dest_hostname=No
|Requirement#flow/message/dest_ip=No
|Requirement#flow/message/dest_port=No
|Requirement#flow/message/end_time=No
|Requirement#flow/message/exe=No
|Requirement#flow/message/flags=No
|Requirement#flow/message/fqdn=No
|Requirement#flow/message/hostname=No
|Requirement#flow/message/image_path=No
|Requirement#flow/message/packet_count=No
|Requirement#flow/message/pid=No
|Requirement#flow/message/ppid=No
|Requirement#flow/message/proto_info=No
|Requirement#flow/message/protocol=No
|Requirement#flow/message/src_fqdn=No
|Requirement#flow/message/src_hostname=No
|Requirement#flow/message/src_ip=No
|Requirement#flow/message/src_port=No
|Requirement#flow/message/start_time=No
|Requirement#flow/message/user=No
|Requirement#flow/start/content=No
|Requirement#flow/start/dest_fqdn=No
|Requirement#flow/start/dest_hostname=No
|Requirement#flow/start/dest_ip=Yes
|Requirement#flow/start/dest_port=Yes
|Requirement#flow/start/end_time=No
|Requirement#flow/start/exe=Yes
|Requirement#flow/start/flags=No
|Requirement#flow/start/fqdn=No
|Requirement#flow/start/hostname=Yes
|Requirement#flow/start/image_path=Yes
|Requirement#flow/start/packet_count=No
|Requirement#flow/start/pid=Yes
|Requirement#flow/start/ppid=No
|Requirement#flow/start/proto_info=No
|Requirement#flow/start/protocol=Yes
|Requirement#flow/start/src_fqdn=No
|Requirement#flow/start/src_hostname=No
|Requirement#flow/start/src_ip=Yes
|Requirement#flow/start/src_port=Yes
|Requirement#flow/start/start_time=Yes
|Requirement#flow/start/user=Yes
|Object#keyboard=No
|Requirement#keyboard/kernel_keypress/hostname=No
|Requirement#keyboard/user_keypress/hostname=No
|Object#module=Yes
|Alias#module/fqdn=ComputerName
|Alias#module/hostname=ComputerName
|Alias#module/image_path=Image
|Alias#module/md5_hash=Hash
|Alias#module/module_name=ImageLoaded
|Alias#module/pid=ProcessId
|Alias#module/sha1_hash=Hash
|Alias#module/sha256_hash=Hash
|Requirement#module/load/base_address=No
|Requirement#module/load/fqdn=Yes
|Requirement#module/load/hostname=Yes
|Requirement#module/load/image_path=Yes
|Requirement#module/load/md5_hash=Yes
|Requirement#module/load/module_name=Yes
|Requirement#module/load/module_path=No
|Requirement#module/load/pid=Yes
|Requirement#module/load/sha1_hash=Yes
|Requirement#module/load/sha256_hash=Yes
|Requirement#module/load/signer=No
|Requirement#module/load/tid=No
|Requirement#module/unload/base_address=No
|Requirement#module/unload/fqdn=No
|Requirement#module/unload/hostname=No
|Requirement#module/unload/image_path=No
|Requirement#module/unload/md5_hash=No
|Requirement#module/unload/module_name=No
|Requirement#module/unload/module_path=No
|Requirement#module/unload/pid=No
|Requirement#module/unload/sha1_hash=No
|Requirement#module/unload/sha256_hash=No
|Requirement#module/unload/signer=No
|Requirement#module/unload/tid=No
|Object#process=Yes
|Alias#process/command_line=CommandLine
|Alias#process/exe=Image
|Alias#process/fqdn=ComputerName
|Alias#process/hostname=ComputerName
|Alias#process/image_path=Image
|Alias#process/md5_hash=Hash
|Alias#process/parent_exe=ParentImage
|Alias#process/parent_image_path=ParentImage
|Alias#process/pid=ProcessId
|Alias#process/ppid=ParentProcessId
|Alias#process/sha1_hash=Hash
|Alias#process/sha256_hash=Hash
|Alias#process/user=User
|Requirement#process/create/command_line=Yes
|Requirement#process/create/exe=Yes
|Requirement#process/create/fqdn=Yes
|Requirement#process/create/hostname=Yes
|Requirement#process/create/image_path=Yes
|Requirement#process/create/md5_hash=Yes
|Requirement#process/create/parent_exe=Yes
|Requirement#process/create/parent_image_path=Yes
|Requirement#process/create/pid=Yes
|Requirement#process/create/ppid=Yes
|Requirement#process/create/sha1_hash=Yes
|Requirement#process/create/sha256_hash=Yes
|Requirement#process/create/sid=No
|Requirement#process/create/signer=No
|Requirement#process/create/user=Yes
|Requirement#process/terminate/command_line=No
|Requirement#process/terminate/exe=No
|Requirement#process/terminate/fqdn=Yes
|Requirement#process/terminate/hostname=Yes
|Requirement#process/terminate/image_path=No
|Requirement#process/terminate/md5_hash=No
|Requirement#process/terminate/parent_exe=No
|Requirement#process/terminate/parent_image_path=No
|Requirement#process/terminate/pid=Yes
|Requirement#process/terminate/ppid=No
|Requirement#process/terminate/sha1_hash=No
|Requirement#process/terminate/sha256_hash=No
|Requirement#process/terminate/sid=No
|Requirement#process/terminate/signer=No
|Requirement#process/terminate/user=Yes
|Object#registry=No
|Requirement#registry/add/data=No
|Requirement#registry/add/fqdn=No
|Requirement#registry/add/hive=No
|Requirement#registry/add/hostname=No
|Requirement#registry/add/image_path=No
|Requirement#registry/add/key=No
|Requirement#registry/add/pid=No
|Requirement#registry/add/type=No
|Requirement#registry/add/user=No
|Requirement#registry/add/value=No
|Requirement#registry/edit/data=No
|Requirement#registry/edit/fqdn=No
|Requirement#registry/edit/hive=No
|Requirement#registry/edit/hostname=No
|Requirement#registry/edit/image_path=No
|Requirement#registry/edit/key=No
|Requirement#registry/edit/pid=No
|Requirement#registry/edit/type=No
|Requirement#registry/edit/user=No
|Requirement#registry/edit/value=No
|Requirement#registry/remove/data=No
|Requirement#registry/remove/fqdn=No
|Requirement#registry/remove/hive=No
|Requirement#registry/remove/hostname=No
|Requirement#registry/remove/image_path=No
|Requirement#registry/remove/key=No
|Requirement#registry/remove/pid=No
|Requirement#registry/remove/type=No
|Requirement#registry/remove/user=No
|Requirement#registry/remove/value=No
|Object#service=No
|Requirement#service/create/command_line=No
|Requirement#service/create/exe=No
|Requirement#service/create/fqdn=No
|Requirement#service/create/hostname=No
|Requirement#service/create/image_path=No
|Requirement#service/create/name=No
|Requirement#service/create/pid=No
|Requirement#service/create/ppid=No
|Requirement#service/create/user=No
|Requirement#service/delete/command_line=No
|Requirement#service/delete/exe=No
|Requirement#service/delete/fqdn=No
|Requirement#service/delete/hostname=No
|Requirement#service/delete/image_path=No
|Requirement#service/delete/name=No
|Requirement#service/delete/pid=No
|Requirement#service/delete/ppid=No
|Requirement#service/delete/user=No
|Requirement#service/pause/command_line=No
|Requirement#service/pause/exe=No
|Requirement#service/pause/fqdn=No
|Requirement#service/pause/hostname=No
|Requirement#service/pause/image_path=No
|Requirement#service/pause/name=No
|Requirement#service/pause/pid=No
|Requirement#service/pause/ppid=No
|Requirement#service/pause/user=No
|Requirement#service/start/command_line=No
|Requirement#service/start/exe=No
|Requirement#service/start/fqdn=No
|Requirement#service/start/hostname=No
|Requirement#service/start/image_path=No
|Requirement#service/start/name=No
|Requirement#service/start/pid=No
|Requirement#service/start/ppid=No
|Requirement#service/start/user=No
|Requirement#service/stop/command_line=No
|Requirement#service/stop/exe=No
|Requirement#service/stop/fqdn=No
|Requirement#service/stop/hostname=No
|Requirement#service/stop/image_path=No
|Requirement#service/stop/name=No
|Requirement#service/stop/pid=No
|Requirement#service/stop/ppid=No
|Requirement#service/stop/user=No
|Object#thread=No
|Requirement#thread/create/hostname=No
|Requirement#thread/create/pid=No
|Requirement#thread/create/src_pid=No
|Requirement#thread/create/src_tid=No
|Requirement#thread/create/stack_base=No
|Requirement#thread/create/stack_limit=No
|Requirement#thread/create/start_address=No
|Requirement#thread/create/start_function=No
|Requirement#thread/create/start_module=No
|Requirement#thread/create/start_module_name=No
|Requirement#thread/create/subprocess_tag=No
|Requirement#thread/create/tgt_pid=No
|Requirement#thread/create/tgt_tid=No
|Requirement#thread/create/tid=No
|Requirement#thread/create/user=No
|Requirement#thread/create/user_stack_base=No
|Requirement#thread/create/user_stack_limit=No
|Requirement#thread/remote_create/hostname=No
|Requirement#thread/remote_create/pid=No
|Requirement#thread/remote_create/src_pid=No
|Requirement#thread/remote_create/src_tid=No
|Requirement#thread/remote_create/stack_base=No
|Requirement#thread/remote_create/stack_limit=No
|Requirement#thread/remote_create/start_address=No
|Requirement#thread/remote_create/start_function=No
|Requirement#thread/remote_create/start_module=No
|Requirement#thread/remote_create/start_module_name=No
|Requirement#thread/remote_create/subprocess_tag=No
|Requirement#thread/remote_create/tgt_pid=No
|Requirement#thread/remote_create/tgt_tid=No
|Requirement#thread/remote_create/tid=No
|Requirement#thread/remote_create/user=No
|Requirement#thread/remote_create/user_stack_base=No
|Requirement#thread/remote_create/user_stack_limit=No
|Requirement#thread/suspend/hostname=No
|Requirement#thread/suspend/pid=No
|Requirement#thread/suspend/src_pid=No
|Requirement#thread/suspend/src_tid=No
|Requirement#thread/suspend/stack_base=No
|Requirement#thread/suspend/stack_limit=No
|Requirement#thread/suspend/start_address=No
|Requirement#thread/suspend/start_function=No
|Requirement#thread/suspend/start_module=No
|Requirement#thread/suspend/start_module_name=No
|Requirement#thread/suspend/subprocess_tag=No
|Requirement#thread/suspend/tgt_pid=No
|Requirement#thread/suspend/tgt_tid=No
|Requirement#thread/suspend/tid=No
|Requirement#thread/suspend/user=No
|Requirement#thread/suspend/user_stack_base=No
|Requirement#thread/suspend/user_stack_limit=No
|Requirement#thread/terminate/hostname=No
|Requirement#thread/terminate/pid=No
|Requirement#thread/terminate/src_pid=No
|Requirement#thread/terminate/src_tid=No
|Requirement#thread/terminate/stack_base=No
|Requirement#thread/terminate/stack_limit=No
|Requirement#thread/terminate/start_address=No
|Requirement#thread/terminate/start_function=No
|Requirement#thread/terminate/start_module=No
|Requirement#thread/terminate/start_module_name=No
|Requirement#thread/terminate/subprocess_tag=No
|Requirement#thread/terminate/tgt_pid=No
|Requirement#thread/terminate/tgt_tid=No
|Requirement#thread/terminate/tid=No
|Requirement#thread/terminate/user=No
|Requirement#thread/terminate/user_stack_base=No
|Requirement#thread/terminate/user_stack_limit=No
|Object#user_session=No
|Requirement#user_session/interactive/dest_ip=No
|Requirement#user_session/interactive/dest_port=No
|Requirement#user_session/interactive/hostname=No
|Requirement#user_session/interactive/logon_id=No
|Requirement#user_session/interactive/privileges=No
|Requirement#user_session/interactive/src_ip=No
|Requirement#user_session/interactive/src_port=No
|Requirement#user_session/interactive/user=No
|Requirement#user_session/local/dest_ip=No
|Requirement#user_session/local/dest_port=No
|Requirement#user_session/local/hostname=No
|Requirement#user_session/local/logon_id=No
|Requirement#user_session/local/privileges=No
|Requirement#user_session/local/src_ip=No
|Requirement#user_session/local/src_port=No
|Requirement#user_session/local/user=No
|Requirement#user_session/lock/dest_ip=No
|Requirement#user_session/lock/dest_port=No
|Requirement#user_session/lock/hostname=No
|Requirement#user_session/lock/logon_id=No
|Requirement#user_session/lock/privileges=No
|Requirement#user_session/lock/src_ip=No
|Requirement#user_session/lock/src_port=No
|Requirement#user_session/lock/user=No
|Requirement#user_session/login/dest_ip=No
|Requirement#user_session/login/dest_port=No
|Requirement#user_session/login/hostname=No
|Requirement#user_session/login/logon_id=No
|Requirement#user_session/login/privileges=No
|Requirement#user_session/login/src_ip=No
|Requirement#user_session/login/src_port=No
|Requirement#user_session/login/user=No
|Requirement#user_session/logout/dest_ip=No
|Requirement#user_session/logout/dest_port=No
|Requirement#user_session/logout/hostname=No
|Requirement#user_session/logout/logon_id=No
|Requirement#user_session/logout/privileges=No
|Requirement#user_session/logout/src_ip=No
|Requirement#user_session/logout/src_port=No
|Requirement#user_session/logout/user=No
|Requirement#user_session/privilege/dest_ip=No
|Requirement#user_session/privilege/dest_port=No
|Requirement#user_session/privilege/hostname=No
|Requirement#user_session/privilege/logon_id=No
|Requirement#user_session/privilege/privileges=No
|Requirement#user_session/privilege/src_ip=No
|Requirement#user_session/privilege/src_port=No
|Requirement#user_session/privilege/user=No
|Requirement#user_session/rdp/dest_ip=No
|Requirement#user_session/rdp/dest_port=No
|Requirement#user_session/rdp/hostname=No
|Requirement#user_session/rdp/logon_id=No
|Requirement#user_session/rdp/privileges=No
|Requirement#user_session/rdp/src_ip=No
|Requirement#user_session/rdp/src_port=No
|Requirement#user_session/rdp/user=No
|Requirement#user_session/reconnect/dest_ip=No
|Requirement#user_session/reconnect/dest_port=No
|Requirement#user_session/reconnect/hostname=No
|Requirement#user_session/reconnect/logon_id=No
|Requirement#user_session/reconnect/privileges=No
|Requirement#user_session/reconnect/src_ip=No
|Requirement#user_session/reconnect/src_port=No
|Requirement#user_session/reconnect/user=No
|Requirement#user_session/remote/dest_ip=No
|Requirement#user_session/remote/dest_port=No
|Requirement#user_session/remote/hostname=No
|Requirement#user_session/remote/logon_id=No
|Requirement#user_session/remote/privileges=No
|Requirement#user_session/remote/src_ip=No
|Requirement#user_session/remote/src_port=No
|Requirement#user_session/remote/user=No
|Requirement#user_session/unlock/dest_ip=No
|Requirement#user_session/unlock/dest_port=No
|Requirement#user_session/unlock/hostname=No
|Requirement#user_session/unlock/logon_id=No
|Requirement#user_session/unlock/privileges=No
|Requirement#user_session/unlock/src_ip=No
|Requirement#user_session/unlock/src_port=No
|Requirement#user_session/unlock/user=No
|Requirement#flow/end/mac=No
|Requirement#flow/message/mac=No
|Requirement#flow/start/mac=No
|Requirement#user_session/interactive/logon_type=No
|Requirement#user_session/local/logon_type=No
|Requirement#user_session/lock/logon_type=No
|Requirement#user_session/login/logon_type=No
|Requirement#user_session/logout/logon_type=No
|Requirement#user_session/privilege/logon_type=No
|Requirement#user_session/rdp/logon_type=No
|Requirement#user_session/reconnect/logon_type=No
|Requirement#user_session/remote/logon_type=No
|Requirement#user_session/unlock/logon_type=No
}}
}}</text>
            <sha1>i1qlz8z4v99of918wwbx2dhmk8eyfmh</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:DynamicField</title>
        <ns>10</ns>
        <id>623</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7047</id>
            <parentid>7046</parentid>
            <timestamp>2015-03-16T20:53:35Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="240">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;&lt;nowiki&gt;{{{field&lt;/nowiki&gt;|{{#forargs: 
|dyn_key
|dyn_val
|{{#iferror:{{#expr: {{#var: dyn_key}}^0 = 1 }}|{{#var: dyn_key}}=|}}{{#var: dyn_val}} {{!}}
}}
&lt;nowiki&gt;}}}&lt;/nowiki&gt;&lt;/includeonly&gt;</text>
            <sha1>1sslomml30kbewbzcpsblbap8xvdr3k</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Sensor</title>
        <ns>10</ns>
        <id>625</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10311</id>
            <parentid>10177</parentid>
            <timestamp>2016-04-01T20:16:02Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="893">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;__NOEDITSECTION__{{Sensor Infobox
|Name=[[Has Name::{{{Name|}}}]]
|Manufacturer=[[Has Manufacturer::{{{Manufacturer|}}}]]
|Version=[[Has Version::{{{Version|}}}]]
|Website=[[Has Website::{{{Website|}}}]]
}}
{{{Description|}}}
{{#set: Has Object={{#arraymap: {{{Fields|}}}|,|$|{{#explode: $|/|0}},|}}|+sep=,
|Has Object Action={{#arraymap: {{{Fields|}}}|,|$
|{{#if: $|{{#explode: $|/|0}}/{{#explode: $|/|1}},|}}|}}|+sep=,
|Has Field Coverage={{#arraymap: {{{Fields|}}}|,|$|$|,}}|+sep=,
}}
{{Sensor Coverage
|Fields={{{Fields|}}}
|&lt;!-- Aliases={{#arrayprint: Aliases}} --&gt;
|Analytics={{{Analytics|}}}
|Techniques={{{Techniques|}}}
|}}{{#arraymap: {{{Techniques|}}}|,|$|{{#if: $|{{#set: Has Technique Coverage=attack:$}}}}|}}
{{#arraymap: {{{Analytics|}}}|,|$|{{#if: $|{{#set: Has Analytic Coverage=$}}}}|}}
[[Category:Sensors]]
&lt;/includeonly&gt;</text>
            <sha1>de323zc6dohbq2piqjdebiqv2clbwf7</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Form:SensorSuite</title>
        <ns>106</ns>
        <id>626</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6794</id>
            <timestamp>2015-03-14T05:30:02Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1222">&lt;noinclude&gt;
{{#forminput:form=Sensor}}

&lt;/noinclude&gt;
Don't see an input option you need? {{FeedbackEmail}}
&lt;includeonly&gt;
&lt;span class="requiredField"&gt;&lt;/span&gt; denotes a mandatory field
{{{info|page name=CAR-{{CURRENTYEAR}}-{{CURRENTMONTH}}-&lt;unique number;start=001&gt;}}}
&lt;div id="wikiPreview" style="display: none; padding-bottom: 25px; margin-bottom: 25px; border-bottom: 1px solid #AAAAAA;"&gt;&lt;/div&gt;

{{{for template|Sensor}}}
{{#arraymap: {{#ask: [[Is Abstraction Object::+]]|mainlabel=-|?Has Object Name=|format=list}}
|,
|$Object
|&lt;nowiki&gt;
&lt;/nowiki&gt;
== $Object ==
{{#arraydefine: Fields|{{#ask: [[Has Object Name::$Object]]|mainlabel=-|?Has Object Field=|format=list}}}}
{{#arraydefine: Actions|{{#ask: [[Has Object Name::$Object]]|mainlabel=-|?Has Object Action=|format=list}}}}

&lt;table class="sensor_table"&gt;
&lt;tr&gt;&lt;th&gt;&lt;/th&gt;{{#arrayprint: Fields
|
|$Field
|&lt;th&gt;$Field&lt;/th&gt;
|
|}} &lt;!-- End Field --&gt;
&lt;/tr&gt;

{{#arrayprint: Actions
|
|$Action
|&lt;tr&gt;
&lt;th&gt;$Action&lt;/th&gt;
{{#arrayprint: Fields
|
|$Field
|&lt;th&gt;{{DynamicField|Requirement#$Object/$Action/$Field&lt;nowiki&gt;|input type=checkbox|multiple&lt;/nowiki&gt;}}&lt;/th&gt;
|}} &lt;!-- End Field --&gt;
&lt;/tr&gt;
|
|}} &lt;!-- End Action --&gt;
&lt;/table&gt;
|
}}&lt;!-- End Object --&gt;

{{{end template}}}
&lt;/includeonly&gt;</text>
            <sha1>4pbgxzmie0swkqd1g6z5w8n3bt5ywoa</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Category:Sensors</title>
        <ns>14</ns>
        <id>627</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10619</id>
            <parentid>7310</parentid>
            <timestamp>2016-04-19T14:42:03Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="290">__SHOWINDRILLDOWN__
This category uses the form {{#default_form: Sensor}}.

{{#drilldowninfo:
filters=
Manufacturer (property=Has Manufacturer),
Name (property=Has Name),
Version (property=Has Version),
Objects (property=Has Object),
Actions (property=Has Object Action,requires=Objects)
}}</text>
            <sha1>awc2a0mn3pybmdtntjyx36pccgc5oc4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Field Coverage</title>
        <ns>102</ns>
        <id>628</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6812</id>
            <timestamp>2015-03-16T15:12:22Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Field Coverage</title>
        <ns>10</ns>
        <id>629</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10106</id>
            <parentid>10105</parentid>
            <timestamp>2016-03-25T07:57:41Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1665">&lt;noinclude&gt;Given a set of fields, calculate the maximum coverage of Analytic Instantiations that can be completely implementable with only those fields.
&lt;/noinclude&gt;&lt;includeonly&gt;{{Hidden
|&lt;!-- First get rid of my fields that will never be used anyway --&gt;
{{#arraydefine: RequestedFields|{{{Fields|}}}|,|unique}}

&lt;!-- Determine all of the fields that are used by analytics currently --&gt;
{{#arraydefine: UsedFields|{{#ask: [[Category:Analytics]][[Has Required Field::+]]|mainlabel=-|?Has Required Field=|limit=5000}}|,|unique}}

&lt;!-- Can ignore any fields that are not currently active as a requirement for an analytic --&gt;
{{#arrayintersect: RequestedFields|RequestedFields|UsedFields}}

&lt;!-- Now find the used fields that were never specified --&gt;
{{#arraydiff: MissingFields|UsedFields|RequestedFields}}
{{#arrayintersect: RequestedFields|UsedFields|RequestedFields}}

&lt;!-- Look at analytics that have at least one requested field. If an analytic doesn't have any field requirements, then it can't be possible. --&gt;
{{#arraydefine: PossibleAnalytics
|{{#ask: [[Category:Analytics]] [[Has Required Field::{{#arrayprint: RequestedFields||$|${{!!}}|}}null]]
|link=none|limit=5000}}
|,
}}

&lt;!-- First find what instantiations have any of these fields, because that makes them impossible --&gt;
{{#arraydefine: ImpossibleAnalytics
|{{#ask: [[Category:Analytics]] [[Has Required Field::{{#arrayprint: MissingFields||$|${{!!}}|}}null]]
|link=none|limit=5000}}
|,
}}

&lt;!-- Finally subtract off the ones that are impossible --&gt;
{{#arraydiff: PossibleAnalytics|PossibleAnalytics|ImpossibleAnalytics}}
}}&lt;!-- end hidden section --&gt;
{{#arrayprint: PossibleAnalytics}}&lt;/includeonly&gt;</text>
            <sha1>1aooiadz4r0j87x969g5zthyayq551c</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Sensor Coverage</title>
        <ns>10</ns>
        <id>633</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10132</id>
            <parentid>10129</parentid>
            <timestamp>2016-03-25T08:41:50Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2381">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;__NOEDITSECTION__
{{#arraydefine: Empty|, ,|,}} {{#arraydefine: SensedFields|{{{Fields|}}}|,|uniq}}{{#arraydefine: Aliases|{{{Aliases|}}}|,}} {{#arraydefine: SensedAnalytics|{{{Analytics|}}}|,|uniq}} {{#arraydefine: SensedTechniques|{{{Techniques|}}}|,|uniq}} {{#arraydiff: SensedTechniques|SensedTechniques|Empty}}

== Data Model Coverage ==
{{#arraymap: {{#ask: [[Category:Data Model]]|mainlabel=-|?Has Object Name=|format=list|sort=Has Object Name}}
|,
|$Object
|{{#if: {{#arraysearch: SensedFields|/^$Object\//|found}}
|&lt;nowiki&gt;
&lt;/nowiki&gt;
=== [[Data Model/$Object|$Object]] ===
{{#arraydefine: Fields|{{#ask: [[Has Object Name::$Object]]|mainlabel=-|?Has Object Field=|format=list}}|,|sort=asc}}
{{#arraydefine: Actions|{{#ask: [[Has Object Name::$Object]]|mainlabel=-|?Has Object Action=|format=list}}|,|sort=asc}}

&lt;table class="sensor_table wikitable"&gt;
{{#if: {{{Aliases|}}}
|
&lt;tr&gt;&lt;th&gt;Sensor Field&lt;/th&gt;{{#arrayprint: Fields
|
|$Field
|&lt;td&gt;{{#arraysearcharray: tmp|Aliases|/^$Object\/$Field-&gt;/}}{{#arrayprint: tmp|&lt;/br&gt;|$Alias|{{#explode: $Alias|-&gt;|1}}|}}&lt;/td&gt;
|
|}} &lt;!-- End Field --&gt;
&lt;/tr&gt;
&lt;tr style="height:1em;"&gt;&lt;/tr&gt;
}}
&lt;tr&gt;&lt;th&gt;&lt;/th&gt;{{#arrayprint: Fields
|
|$Field
|&lt;th&gt;[[Data Model/$Object#$Field|$Field]]&lt;/th&gt;
|
|}} &lt;!-- End Field --&gt;
&lt;/tr&gt;

{{#arrayprint: Actions
|
|$Action
|&lt;tr&gt;
&lt;th&gt;{{#ifeq: $Action|.|.|[[Data Model/$Object#$Action|$Action]]}}&lt;/th&gt;
{{#arrayprint: Fields
|
|$Field
|&lt;td&gt;{{#arraysearch: SensedFields|$Object/$Action/$Field|0|&amp;#10003;|}}&lt;/td&gt;
|}} &lt;!-- End Field --&gt;
&lt;/tr&gt;
|
|}} &lt;!-- End Action --&gt;
&lt;/table&gt;
|
}}&lt;!-- end ifarraysearch Object in SensedFields --&gt;
|
}}&lt;!-- End arraymap on Object --&gt;
&lt;!-- This is old school.
== Instantiation Coverage ==
{{#arraydefine: Instantiations|{{Field Coverage|Fields={{#arrayprint: SensedFields}}|}}|,}}
{{:Full Instantiation List|Instantiations={{#arrayprint: Instantiations}}|}}
--&gt;
== Analytic Coverage ==
{{#arraydiff: SensedFields|SensedFields|Empty}}
{{#arraydefine: Analytics|{{Field Coverage|Fields={{#arrayprint: SensedFields|,}}|}}|,|asc,uniq}}
{{#arrayunion: Analytics|Analytics|SensedAnalytics}} {{#arraydiff: Analytics|Analytics|Empty}} 
{{:Full Analytic List|Analytics={{#arrayprint: Analytics|,}}|}}

== ATT&amp;CK Coverage ==
{{ATTACK Coverage|Analytics={{#arrayprint: Analytics|,}}|Techniques={{#arrayprint: SensedTechniques|,}}}}
&lt;/includeonly&gt;</text>
            <sha1>4uvuw0rxdp2a8tlmnxbfmn2sh0n3kpv</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Infobox</title>
        <ns>10</ns>
        <id>634</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7248</id>
            <parentid>7247</parentid>
            <timestamp>2015-03-17T16:17:56Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="145">{{#invoke:Infobox|infobox}}&lt;noinclude&gt;

{{documentation}}
&lt;!-- Categories go in the /doc subpage, and interwikis go in Wikidata. --&gt;
&lt;/noinclude&gt;</text>
            <sha1>kavlqnbr7pew8bhy59a3n9jmoau5jt4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Distinguish</title>
        <ns>10</ns>
        <id>636</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6888</id>
            <parentid>6887</parentid>
            <timestamp>2015-03-16T18:51:59Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="517">{{Hatnote|Not to be confused with [[:{{{1}}}]]{{
    #if: {{{3|}}}{{{4|}}}
    | , [[:{{{2}}}]], {{
      #if: {{{4|}}}
      | [[:{{{3}}}]], or [[:{{{4}}}]]
      | or [[:{{{3}}}]]
    }}
    | {{
      #if: {{{2|}}}
      | &amp;nbsp;or [[:{{{2}}}]]
    }}
  }}.}}&lt;noinclude&gt;&lt;!-- splitting these lines causes {{Documentation}} template to terminate green shading when Distinguish is used in /doc pages. --&gt;
{{Documentation}}
&lt;!-- Add categories to the /doc subpage and interwikis to Wikidata, not here! --&gt;
&lt;/noinclude&gt;</text>
            <sha1>k3qkbmr368q268ozhi0it5ec84chizl</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Documentation</title>
        <ns>10</ns>
        <id>637</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6890</id>
            <parentid>6889</parentid>
            <timestamp>2015-03-16T18:51:59Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="182">{{#invoke:documentation|main|_content={{ {{#invoke:documentation|contentTitle}}}}}}&lt;noinclude&gt;
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
            <sha1>o4ddn701tao1ufdnkxe1wdgz5b5ga84</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Documentation subpage</title>
        <ns>10</ns>
        <id>638</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6892</id>
            <parentid>6891</parentid>
            <timestamp>2015-03-16T18:51:59Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1667">&lt;includeonly&gt;&lt;!--
 --&gt;{{#ifeq:{{lc:{{SUBPAGENAME}}}} |{{{override|doc}}}
     | &lt;!--(this template has been transcluded on a /doc or /{{{override}}} page)--&gt;
&lt;/includeonly&gt;&lt;!--

      --&gt;{{#ifeq:{{{doc-notice|show}}} |show
          | {{Mbox
             | type = notice
             | style = margin-bottom:1.0em;
             | image = [[File:Edit-copy green.svg|40px|alt=|link=]]
             | text =
'''This is a [[Wikipedia:Template documentation|documentation]] [[Wikipedia:Subpages|subpage]] for {{{1|[[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}]]}}}'''.&lt;br /&gt;It contains usage information, [[Wikipedia:Categorization|categories]] and other content that is not part of the original {{#if:{{{text2|}}} |{{{text2}}} |{{#if:{{{text1|}}} |{{{text1}}} |{{#ifeq:{{SUBJECTSPACE}} |{{ns:User}} |{{lc:{{SUBJECTSPACE}}}} template page |{{#if:{{SUBJECTSPACE}} |{{lc:{{SUBJECTSPACE}}}} page|article}}}}}}}}. 
            }}
         }}&lt;!--

      --&gt;{{DEFAULTSORT:{{{defaultsort|{{PAGENAME}}}}}}}&lt;!--

      --&gt;{{#if:{{{inhibit|}}} |&lt;!--(don't categorize)--&gt;
          |   &lt;includeonly&gt;&lt;!--
               --&gt;{{#ifexist:{{NAMESPACE}}:{{BASEPAGENAME}}
                   | [[Category:{{#switch:{{SUBJECTSPACE}} |Template=Template |Module=Module |User=User |#default=Wikipedia}} documentation pages]]
                   | [[Category:Documentation subpages without corresponding pages]]
                  }}&lt;!--
           --&gt;&lt;/includeonly&gt;
         }}&lt;!--

(completing initial #ifeq: at start of template:)
--&gt;&lt;includeonly&gt;
     | &lt;!--(this template has not been transcluded on a /doc or /{{{override}}} page)--&gt;
    }}&lt;!--
--&gt;&lt;/includeonly&gt;&lt;noinclude&gt;{{Documentation}}&lt;/noinclude&gt;</text>
            <sha1>iwoex9r4jjje2jlwm8eygcyef0s6hzx</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Hatnote</title>
        <ns>10</ns>
        <id>640</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6896</id>
            <parentid>6895</parentid>
            <timestamp>2015-03-16T18:51:59Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="171">&lt;includeonly&gt;{{#invoke:Hatnote|hatnote}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
            <sha1>8nnude79i1y2v6yy2z7j285k1k4v8p3</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:High-risk</title>
        <ns>10</ns>
        <id>641</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6898</id>
            <parentid>6897</parentid>
            <timestamp>2015-03-16T18:51:59Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1367">{{ombox
| type = content
| text = 
'''This {{
#switch:{{NAMESPACE}}
|Module=Lua module
|#default=template
}} is used on &lt;span class="plainlinks"&gt;[http://tools.wmflabs.org/templatecount/index.php?lang=en&amp;namespace={{NAMESPACENUMBER:{{FULLPAGENAME}}}}&amp;name={{urlencode:{{PAGENAME}}}} {{#if:{{{1|}}}|{{{1}}}|a very large number of}} pages].'''&lt;/span&gt;&lt;br /&gt;To avoid large-scale disruption and unnecessary server load, any changes to this {{
#switch:{{NAMESPACE}}
|Module=module
|#default=template
}} should first be tested in its [[{{
#switch: {{SUBPAGENAME}}
| doc | sandbox = {{SUBJECTSPACE}}:{{BASEPAGENAME}}
| #default      = {{SUBJECTPAGENAME}}
}}/sandbox|/sandbox]] or [[{{
#switch: {{SUBPAGENAME}}
| doc | sandbox = {{SUBJECTSPACE}}:{{BASEPAGENAME}}
| #default      = {{SUBJECTPAGENAME}}
}}/testcases|/testcases]] subpages{{
#switch:{{NAMESPACE}}
|Module=.
|#default=, or in your own [[Wikipedia:Subpages#How to create user subpages|user space]].
}} The tested changes can then be added to this page in one single edit. Please consider discussing any changes on {{#if:{{{2|}}}|[[{{{2}}}]]|the [[{{
#switch: {{SUBPAGENAME}}
| doc | sandbox = {{TALKSPACE}}:{{BASEPAGENAME}}
| #default      = {{TALKPAGENAME}}
}}|talk page]]}} before implementing them.
}}&lt;noinclude&gt;
{{Documentation}}
&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
            <sha1>oj30a94ttox1t0sw4ggejozxzotjs6o</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Infobox/doc</title>
        <ns>10</ns>
        <id>642</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7237</id>
            <parentid>6900</parentid>
            <timestamp>2015-03-17T16:02:57Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="33241">{{Documentation subpage}}
{{distinguish|Template:Userbox}}
&lt;includeonly&gt;{{#ifeq:{{#titleparts:{{PAGENAME}}|1|2}}|old | |{{High-risk|2,200,000+}}{{Lua|Module:Infobox}}}}&lt;/includeonly&gt;
{{Generic template demo
 |name={{PAGENAME}} &lt;!--|child |subbox |decat--&gt; |title |above |subheader |subheader1 |subheader2={{{subheader2}}}&lt;br/&gt;...... |subheader20
 |image|caption |image1|caption1 |image2|caption2={{{caption2}}}&lt;br/&gt;...... |image20|caption20
 |header1=&lt;div style="border-top:1px dashed #ccc;"&gt;{{{header1}}}&lt;br/&gt;{{nobold|( ''or'' )}}&lt;/div&gt;
 |label2={{{label1}}} |data2={{{data1}}}
 |data3=( ''or'' ) |data4=&lt;div style="padding-bottom:0.25em;border-bottom:1px dashed #ccc;"&gt;{{{data1}}}&lt;/div&gt;
 |header5={{{header2}}}&lt;br/&gt;{{nobold|( ''or'' )}}&lt;/div&gt;
 |label6={{{label2}}} |data6={{{data2}}}
 |data7=( ''or'' ) |data8=&lt;div style="padding-bottom:0.25em;border-bottom:1px dashed #ccc;"&gt;{{{data2}}}&lt;/div&gt;
 |data9=&lt;div style="padding:0.75em 0 0.5em;"&gt;( ''etc'' )&lt;/div&gt;
 |below
}}

This template is intended as a meta-template: a template used for constructing other templates. It is not meant for use directly in an article, but can be used on a one-off basis if required. See [[Help:Infobox]] for an introduction to infoboxes and information on how to design them and [[:Category:Infobox templates]] for specific infobox templates.

=== Usage ===
Usage is similar to {{tl|navbox}}, but with an additional distinction. Each row on the table can contain either a header, or a label/data pair, or just a data cell. These are mutually exclusive states so if you define a row with both a header and a label/data pair, the label/data pair is ignored.

To insert an image somewhere other than at the top of the infobox, or to insert freeform data, use a row with only a data field.

=== Optional control parameters ===
; name : If this parameter is present, "view/discuss/edit" links will be added to the bottom of the infobox, pointing to the named page. You may use the value &lt;nowiki&gt;{{subst:PAGENAME}}&lt;/nowiki&gt;; however this is rarely what you want, because it will send users clicking these links in an infobox in an article to the template code rather than the data in the infobox that they probably want to change.
; child :  See the [[#Embedding|Embedding]] section for details. If this is set to "yes", this child infobox should be titled but have no name parameter. This parameter is empty by default, set it to "yes" to activate it.
; subbox :  See the [[#Subboxes|Subboxes]] section for details. If this is set to "yes", this subbox should be titled but have no name parameter. This parameter is empty by default, set to "yes" to activate it. It has no effect if the '''child''' parameter is also set to "yes".
; decat : If this is set to "yes", the current page will not be autocategorized in a maintenance category when the generated infobox has some problems or no visible data section. Leave empty by default or set to "yes" to activate it.

=== Content parameters ===

==== Title ====
There are two different ways to put a title on an infobox. One contains the title inside the infobox's border in the uppermost cell of the table, the other puts as a caption it on top of the table. You can use both of them together if you like, or just one or the other, or even neither (though this is not recommended):

; title : Text to put in the caption over the top of the table (or as section header before the whole content of this table, if this is a child infobox). For [[Wikipedia:Manual_of_Style/Accessibility#Tables|accessibility reasons]], this is the most recommended alternative.
; above : Text to put within the uppermost cell of the table.
; subheader(n) : additional title fields which fit below {{{title}}} and {{{above}}}, but before images. Subheader parameters should not be numbered more than 10 apart.

Examples:

{{Infobox
 | name = Infobox/doc
 | title      = Text in caption over infobox
 | subheader  = Subheader of the infobox
 | header = (the rest of the infobox goes here)
}}
&lt;pre style="overflow:auto"&gt;
{{Infobox
 | name = {{subst:PAGENAME}}
 | title      = Text in caption over infobox
 | subheader  = Subheader of the infobox
 | header = (the rest of the infobox goes here)
}}
&lt;/pre&gt;{{clear}}

{{Infobox
 | name = Infobox/doc
 | above      = Text in uppermost cell of infobox
 | subheader  = Subheader of the infobox
 | subheader2 = Second subheader of the infobox
 | header = (the rest of the infobox goes here)
}}
&lt;pre style="overflow:auto"&gt;
{{Infobox
 | name = {{subst:PAGENAME}}
 | above      = Text in uppermost cell of infobox
 | subheader  = Subheader of the infobox
 | subheader2 = Second subheader of the infobox
 | header = (the rest of the infobox goes here)
}}
&lt;/pre&gt;{{clear}}

==== Illustration images ====
; image(n) : images to display at the top of the template. Use full image syntax, for example &lt;nowiki&gt;[[File:example.png|200px|alt=Example alt text]]&lt;/nowiki&gt;. Image is centered by default. See [[WP:ALT]] for more on alt text. Image parameters should not be numbered more than 10 apart.
; caption(n) : Text to put underneath the images.

==== Main data ====
; header(n) : Text to use as a header in row n. Header and data parameters should not be numbered more than 50 apart.
; label(n) : Text to use as a label in row n.
; data(n) : Text to display as data in row n. Header and data parameters should not be numbered more than 50 apart.

Note: for any given value for (n), not all combinations of parameters are permitted. The presence of a {{para|header''(n)''}} will cause the corresponding {{para|data''(n)''}} (and {{para|rowclass''(n)''}} {{para|label''(n)''}}, see below) to be ignored; the absence of a {{para|data''(n)''}} will cause the corresponding {{para|label''(n)''}} to be ignored. Valid combinations for any single row are:

* {{para|class''(n)''}} {{para|header''(n)''}}
* {{para|rowclass''(n)''}} {{para|class''(n)''}} {{para|data''(n)''}}
* {{para|rowclass''(n)''}} {{para|label''(n)''}} {{para|class''(n)''}} {{para|data''(n)''}}

See the rendering of header4, label4, and data4 in the [[#Examples|Examples]] section below.

===== Number ranges =====
To allow flexibility when the layout of an infobox is changed, it may be helpful when developing an infobox to use non-contiguous numbers for header and label/data rows. Parameters for new rows can then be inserted in future without having to renumber existing parameters. For example:

&lt;pre style="overflow:auto"&gt;
 | header3  = Section 1
 |  label5  = Label A
 |   data5  = Data A
 |  label7  = Label C
 |   data7  = Data C
 | header10 = Section 2
 |  label12 = Label D
 |   data12 = Data D
&lt;/pre&gt;{{clear}}

It is also possible to automatically renumber parameter names by using [[Module:IncrementParams]].

Note that although there is no limitation on the number of rows available, row parameters should not be numbered more than 50 apart. See the [[#Limitations]] section below for more details.

===== Making data fields optional =====
A row with a label but no data is not displayed. This allows for the easy creation of optional infobox content rows. To make a row optional use a parameter that defaults to an empty string, like so:

&lt;pre style="overflow:auto"&gt;
 |  label5 = Population
 |   data5 = {{{population|}}}
&lt;/pre&gt;{{clear}}

This way if an article doesn't define the population parameter in its infobox the row won't be displayed.

For more complex fields with pre-formatted contents that would still be present even if the parameter wasn't set, you can wrap it all in an "#if" statement to make the whole thing vanish when the parameter is not used. For instance, the "#if" statement in the following example reads "#if:the parameter ''mass'' has been supplied |then display it, followed by 'kg'":

&lt;pre style="overflow:auto"&gt;
 |  label6 = Mass
 |   data6 = {{ #if: {{{mass|}}} | {{{mass}}} kg }}
&lt;/pre&gt;{{clear}}

For more on #if, see [[meta:ParserFunctions##if:|here]].

===== Hiding headers when all data fields are hidden =====
You can also make headers optional in a similar way. Consider this example:
{{Infobox
 | title   = Example of an undesirable header
 | header1 = Undesirable header
 |  label2 = Item 1      |   data2 =
 |  label3 = Item 2      |   data3 =
 |  label4 = Item 3      |   data4 =
 | header5 = Static header
 |  label6 = Static item |   data6 = Static value
}}
&lt;pre style="overflow:auto"&gt;
{{Infobox
 | title   = Example of an undesirable header
 | header1 = Undesirable header
 |  label2 = Item 1      |   data2 =
 |  label3 = Item 2      |   data3 =
 |  label4 = Item 3      |   data4 =
 | header5 = Static header
 |  label6 = Static item |   data6 = Static value
}}
&lt;/pre&gt;{{clear}}

If you want the first header to appear only if one or more of the data fields that fall under it are filled, one could use the following pattern as an example of how to do it:

{{Infobox
 | title   = Example of an optional header
 | header1 = {{ #if: {{{item1|}}}{{{item2|}}}{{{item3|}}} | Optional header }}
 |  label2 = Item 1      |   data2 = {{{item1|}}}
 |  label3 = Item 2      |   data3 = {{{item2|}}}
 |  label4 = Item 3      |   data4 = {{{item3|}}}
 | header5 = Static header
 |  label6 = Static item |   data6 = Static value
}}
&lt;pre style="overflow:auto"&gt;
{{Infobox
 | title   = Example of an optional header
 | header1 = {{ #if: {{{item1|}}}{{{item2|}}}{{{item3|}}} | Optional header }}
 |  label2 = Item 1      |   data2 = {{{item1|}}}
 |  label3 = Item 2      |   data3 = {{{item2|}}}
 |  label4 = Item 3      |   data4 = {{{item3|}}}
 | header5 = Static header
 |  label6 = Static item |   data6 = Static value
}}
&lt;/pre&gt;{{clear}}

header1 will be shown if any of item1, item2, or item3 is defined. If none of the three parameters are defined the header won't be shown and no emty row appears before the next static content. The trick to this is that the "#if" returns false only if there is nothing whatsoever in the conditional section, so only if all three of item1, item2 and item3 are undefined will the if statement fail.

Note that such trick may be sometimes very complex to test if there are many data items whose value depends on complex tests (or when a data row is generated by a recursive invokation of this template as a [[#Subboxes|subbox]]). Ideally, the Lua module supporting this template should now support a new way to make each header row autohideable by detecting if there is at least one non-empty data row after that header row (a parameter like "autohide header1 = yes", for example, would remove the need to perform the "#if" test so that we can just to define "header1 = Optional header"),

==== Footer ====
; below : Text to put in the bottom cell. The bottom cell is intended for footnotes, see-also, and other such information.

=== Presentation parameters ===

==== Italic titles ====
Titles of articles with infoboxes may be made italic, in line with [[WP:ITALICTITLE]], by passing the &lt;code&gt;italic title&lt;/code&gt; parameter.

* Turn on italic titles by passing {{para|italic title|&lt;nowiki&gt;{{{italic title|}}}&lt;/nowiki&gt;}} from the infobox.
* Turn off by default (notably because only Latin script may be safely rendered in this style and italic may be needed to distinguish foreign language from local English language only in that script, but would be difficult to read for other scripts) but allow some instances to be made italic by passing {{para|italic title|&lt;nowiki&gt;{{{italic title|no}}}&lt;/nowiki&gt;}}
* Do not make any titles italic by not passing the parameter at all.

==== CSS styling ====
; bodystyle : Applies to the infobox table as a whole
; titlestyle : Applies only to the title caption. Adding a background color is usually inadvisable since the text is rendered "outside" the infobox.
; abovestyle : Applies only to the "above" cell at the top. The default style has font-size:125%; since this cell is usually used for a title, if you want to use the above cell for regular-sized text include "font-size:100%;" in the abovestyle.
; imagestyle : Applies to the cell the image is in. This includes the text of the image caption, but you should set text properties with captionstyle instead of imagestyle in case the caption is moved out of this cell in the future.
; captionstyle : Applies to the text of the image caption.
; headerstyle : Applies to all header cells
; labelstyle : Applies to all label cells
; datastyle : Applies to all data cells
; belowstyle : Applies only to the below cell

==== HTML classes and microformats ====
; bodyclass : This parameter is inserted into the &lt;code&gt;class&lt;code&gt; attribute for the infobox as a whole.
; titleclass : This parameter is inserted into the &lt;code&gt;class&lt;code&gt; attribute for the infobox's '''title''' caption.
&lt;!-- currently not implemented in Lua module
; aboverowclass : This parameter is inserted into the &lt;code&gt;class&lt;code&gt; attribute for the complete table row the '''above''' cell is on.
--&gt;
; aboveclass : This parameter is inserted into the &lt;code&gt;class&lt;code&gt; attribute for the infobox's '''above''' cell.
; subheaderrowclass(n) : This parameter is inserted into the &lt;code&gt;class&lt;code&gt; attribute for the complete table row the '''subheader''' is on.
; subheaderclass(n) : This parameter is inserted into the &lt;code&gt;class&lt;code&gt; attribute for the infobox's '''subheader'''.
; imagerowclass(n) : These parameters are inserted into the &lt;code&gt;class&lt;code&gt; attribute for the complete table row their respective '''image''' is on.
; imageclass : This parameter is inserted into the &lt;code&gt;class&lt;code&gt; attribute for the '''image'''.
; rowclass(n) : This parameter is inserted into the &lt;code&gt;class&lt;code&gt; attribute for the specified row including the '''label''' and '''data''' cells.
; class(n) : This parameter is inserted into the &lt;code&gt;class&lt;code&gt; attribute for the '''data''' cell of the specified row. If there's no '''data''' cell it has no effect.
&lt;!-- currently not implemented in Lua module
; belowrowclass : This parameter is inserted into the &lt;code&gt;class&lt;code&gt; attribute for the complete table row the '''below''' cell is on.
--&gt;
; belowclass : This parameter is inserted into the &lt;code&gt;class&lt;code&gt; attribute for the infobox's '''below''' cell.

This template supports the addition of microformat information. This is done by adding "class" attributes to various data cells, indicating what kind of information is contained within. Multiple class names may be specified, separated by spaces, some of them being used as selectors for custom styling according to a project policy or to the skin selected in user preferences, others beig used for microformats.

To flag an infobox as containing [[hCard]] information, for example, add the following parameter:

&lt;pre style="overflow:auto"&gt;
 | bodyclass = vcard
&lt;/pre&gt;{{clear}}

And for each row containing a data cell that's part of the vcard, add a corresponding class parameter:

&lt;pre style="overflow:auto"&gt;
 | class1 = fn
 | class2 = org
 | class3 = tel
&lt;/pre&gt;{{clear}}

...and so forth. "above" and "title" can also be given classes, since these are usually used to display the name of the subject of the infobox.

See [[Wikipedia:WikiProject Microformats]] for more information on adding microformat information to Wikipedia, and [[microformat]] for more information on microformats in general.

=== Examples ===
Notice how the row doesn't appear in the displayed infobox when a '''label''' is defined without an accompanying '''data''' cell, and how all of them are displayed when a '''header''' is defined on the same row as a '''data''' cell. Also notice that '''subheaders''' are not bold by default like the '''headers''' used to split the main data section, because this role is meant to be for the '''above''' cell :

{{Infobox
 |name         = Infobox/doc
 |bodystyle    = 

 |titlestyle   = 
 |abovestyle = background:#cfc;
 |subheaderstyle =
 |title        = Test Infobox
 |above        = Above text
 |subheader    = Subheader above image
 |subheader2   = Second subheader

 |imagestyle   = 
 |captionstyle = 
 |image        = [[File:example.png|200px|alt=Example alt text]]
 |caption      = Caption displayed below example.png

 |headerstyle  = background:#ccf;
 |labelstyle   = background:#ddf;
 |datastyle    = 

 |header1 = Header defined alone
 | label1 = 
 |  data1 = 
 |header2 = 
 | label2 = Label defined alone does not display (needs data, or is suppressed)
 |  data2 = 
 |header3 =
 | label3 = 
 |  data3 = Data defined alone
 |header4 = All three defined (header, label, data, all with same number)
 | label4 = does not display (same number as a header)
 |  data4 = does not display (same number as a header)
 |header5 =
 | label5 = Label and data defined (label)
 |  data5 = Label and data defined (data)

 |belowstyle = background:#ddf;
 |below      = Below text
}}
&lt;pre style="overflow:auto"&gt;
{{Infobox
 |name         = {{subst:PAGENAME}}
 |bodystyle    = 

 |titlestyle   = 
 |abovestyle = background:#cfc;
 |subheaderstyle =
 |title        = Test Infobox
 |above        = Above text
 |subheader    = Subheader above image
 |subheader2   = Second subheader

 |imagestyle   = 
 |captionstyle = 
 |  image      = [[File:example.png|200px|alt=Example alt text]]
 |caption      = Caption displayed below example.png

 |headerstyle  = background:#ccf;
 |labelstyle   = background:#ddf;
 |datastyle    = 

 |header1 = Header defined alone
 | label1 = 
 |  data1 = 
 |header2 = 
 | label2 = Label defined alone does not display (needs data, or is suppressed)
 |  data2 = 
 |header3 =
 | label3 = 
 |  data3 = Data defined alone
 |header4 = All three defined (header, label, data, all with same number)
 | label4 = does not display (same number as a header)
 |  data4 = does not display (same number as a header)
 |header5 =
 | label5 = Label and data defined (label)
 |  data5 = Label and data defined (data)

 |belowstyle = background:#ddf;
 |below      = Below text
}}
&lt;/pre&gt;{{clear}}

For this example, the '''bodystyle''' and '''labelstyle''' parameters are used to adjust the infobox width and define a default width for the column of labels:

{{Infobox
 |name        = Infobox/doc
 |bodystyle   = width:20em

 |titlestyle  = 
 |title       = Test Infobox

 |headerstyle = 
 |labelstyle  = width:33%
 |datastyle   = 

 |header1 = 
 | label1 = Label 1
 |  data1 = Data 1
 |header2 = 
 | label2 = Label 2
 |  data2 = Data 2
 |header3 = 
 | label3 = Label 3
 |  data3 = Data 3
 |header4 = Header 4
 | label4 = 
 |  data4 = 
 |header5 = 
 | label5 = Label 5
 |  data5 = Data 5: Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.

 |belowstyle = 
 |below = Below text
}}
&lt;pre style="overflow: auto"&gt;
{{Infobox
 |name        = {{subst:PAGENAME}}
 |bodystyle   = width:20em

 |titlestyle  = 
 |title       = Test Infobox

 |headerstyle = 
 |labelstyle  = width:33%
 |datastyle   = 

 |header1 = 
 | label1 = Label 1
 |  data1 = Data 1
 |header2 = 
 | label2 = Label 2
 |  data2 = Data 2
 |header3 = 
 | label3 = Label 3
 |  data3 = Data 3
 |header4 = Header 4
 | label4 = 
 |  data4 = 
 |header5 = 
 | label5 = Label 5
 |  data5 = Data 5: Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.

 |belowstyle = 
 |below = Below text
}}
&lt;/pre&gt;{{clear}}

=== Embedding ===
&lt;!--Linked from [[Template:Subinfobox bodystyle/doc]]--&gt;
One infobox template can be embedded into another using the {{para|child}} parameter.  This feature can be used to create a modular infobox, or to create more well defined logical sections. Previously, it was necessary to use embedding in order to create infoboxes with more than 99 rows, but there is now no limit to the number of rows that can be defined in a single instance of &lt;code&gt;&lt;nowiki&gt;{{infobox}}&lt;/nowiki&gt;&lt;/code&gt;.

{{Infobox
 | title = Top level title
 | data1 = {{Infobox | decat = yes | child = yes
    | title = First subsection
    | label1= Label 1.1
    | data1 = Data 1.1
   }}
 | data2 = {{Infobox | decat = yes | child = yes
  |title = Second subsection
  | label1= Label 2.1
  | data1 = Data 2.1
  }}
 | belowstyle = 
 | below = Below text
}}
&lt;pre style="overflow:auto"&gt;
{{Infobox
 | title = Top level title
 | data1 = {{Infobox | decat = yes | child = yes
    | title = First subsection
    | label1= Label 1.1
    | data1 = Data 1.1
   }}
 | data2 = {{Infobox | decat = yes | child = yes
  |title = Second subsection
  | label1= Label 2.1
  | data1 = Data 2.1
  }}
 | belowstyle = 
 | below = Below text
}}
&lt;/pre&gt;{{clear}}

Note, in the examples above, the child infobox is placed in a &lt;code&gt;data&lt;/code&gt; field, not a &lt;code&gt;header&lt;/code&gt; field.  Notice that the section subheadings are not in bold font if bolding is not explicitly specified. To obtain bold section headings, place the child infobox in a '''header''' field (but not in a '''label''' field because it would not be displayed!), either using

{{Infobox
 | title = Top level title
 | header1 = {{Infobox | decat = yes | child = yes
    | title = First subsection
    | label1= Label 1.1
    | data1 = Data 1.1
   }}
 | header2 = {{Infobox | decat = yes | child = yes
    | title = Second subsection
    | label1= Label 2.1
    | data1 = Data 2.1
   }}
 | belowstyle = 
 | below = Below text
}}
&lt;pre style="overflow:auto"&gt;
{{Infobox
 | title = Top level title
 | header1 = {{Infobox | decat = yes | child = yes
    | title = First subsection
    | label1= Label 1.1
    | data1 = Data 1.1
   }}
 | header2 = {{Infobox | decat = yes | child = yes
    | title = Second subsection
    | label1= Label 2.1
    | data1 = Data 2.1
   }}
 | belowstyle = 
 | below = Below text
}}
&lt;/pre&gt;{{clear}}

or,

{{Infobox
 | title = Top level title
 | header1 = First subsection
   {{Infobox | decat = yes | child = yes
    | label1 = Label 1.1
    |   data1 = Data 1.1
   }}
 | header2 = Second subsection
   {{Infobox | decat = yes | child = yes
    | label1 = Label 2.1
    |  data1 = Data 2.1
   }}
 | belowstyle = 
 | below = Below text
}}
&lt;pre style="overflow:auto"&gt;
{{Infobox
 | title = Top level title
 | header1 = First subsection
   {{Infobox | decat = yes | child = yes
    | label1 = Label 1.1
    |   data1 = Data 1.1
   }}
 | header2 = Second subsection
   {{Infobox | decat = yes | child = yes
    | label1 = Label 2.1
    |  data1 = Data 2.1
   }}
 | belowstyle = 
 | below = Below text
}}
&lt;/pre&gt;{{clear}}

Note that omitting the {{para|title}} parameter, and not including any text preceding the embedded infobox, may result in spurious blank table rows, creating gaps in the visual presentation.

=== Subboxes ===
An alternative method for embedding is to use {{para|subbox|yes}}, which removes the outer border from the infobox, but preserves the interior structure.  One feature of this approach is that the parent and child boxes need not have the same structure, and the label and data fields are not aligned between the parent and child boxes because they are not in the same parent table.

{{Infobox
 | headerstyle = background-color:#eee;
 | labelstyle  = background-color:#eee;
 | header1 = Main 1
 | header2 = Main 2
 |   data3 = {{Infobox | subbox = yes
    | headerstyle = background-color:#ccc;
    | labelstyle  = background-color:#ddd;
    | header1 = Sub 3-1
    | header2 = Sub 3-2
    |  label3 = Label 3-3    |   data3 = Data 3-3
   }}
 |   data4 = {{Infobox | subbox = yes
    | labelstyle  = background-color:#ccc;
    |  label1 = Label 4-1    |   data1 = Data 4-1
   }}
 |  label5 = Label 5 |   data5 = Data 5
 | header6 = Main 6
}}
&lt;pre style="overflow:auto"&gt;
{{Infobox
 | headerstyle = background-color:#eee;
 | labelstyle  = background-color:#eee;
 | header1 = Main 1
 | header2 = Main 2
 |   data3 = {{Infobox | subbox = yes
    | headerstyle = background-color:#ccc;
    | labelstyle  = background-color:#ddd;
    | header1 = Sub 3-1
    | header2 = Sub 3-2
    |  label3 = Label 3-3    |   data3 = Data 3-3
   }}
 |   data4 = {{Infobox | subbox = yes
    | labelstyle  = background-color:#ccc;
    |  label1 = Label 4-1    |   data1 = Data 4-1
   }}
 |  label5 = Label 5 |   data5 = Data 5
 | header6 = Main 6
}}
&lt;/pre&gt;{{clear}}

Similar embedding techniques may be used within content parameters of some other templates generating tables (such as [[:Template:Sidebar|Sidebar]]) :

{{Sidebar
 | navbar = off
 | headingstyle = background-color:#eee;
 | heading1 = Heading 1
 | heading2 = Heading 2
 | content3 = {{Infobox | subbox = yes
    | headerstyle = background-color:#ccc;
    | labelstyle = background-color:#ddd;
    | header1 = Sub 3-1
    | header2 = Sub 3-2
    |  label3 = Label 3-3 |   data3 = Data 3-3
   }}
 | content4 = {{Infobox | subbox = yes
    | labelstyle = background-color:#ccc;
    |  label1 = Label 4-1 |   data1 = Data 4-1
   }}
 | heading5 = Heading 5
}}
&lt;pre style="overflow:auto"&gt;
{{Sidebar
 | navbar = off
 | headingstyle = background-color:#eee;
 | heading1 = Heading 1
 | heading2 = Heading 2
 | content3 = {{Infobox | subbox = yes
    | headerstyle = background-color:#ccc;
    | labelstyle = background-color:#ddd;
    | header1 = Sub 3-1
    | header2 = Sub 3-2
    |  label3 = Label 3-3 |   data3 = Data 3-3
   }}
 | content4 = {{Infobox | subbox = yes
    | labelstyle = background-color:#ccc;
    |  label1 = Label 4-1 |   data1 = Data 4-1
   }}
 | heading5 = Heading 5
}}
&lt;/pre&gt;{{clear}}

Note that the default padding of the parent data cell containing each subbox is still visible, so the subboxes are slightly narrower than the parent box and there's a higher vertical spacing between standard cells of the parent box than between cells of distinct subboxes.

=== Full blank syntax ===
(Note: there is no limit to the number of possible rows; only 20 are given below since infoboxes larger than that will be relatively rare. Just extend the numbering as needed. The microformat "class" parameters are also omitted as they are not commonly used.)

&lt;pre style="overflow:auto"&gt;
{{Infobox
| name           = {{subst:PAGENAME}}
| child          = {{{child|}}}
| subbox         = {{{subbox|}}}
| italic title   = {{{italic title|no}}}
| bodystyle      = 

| titlestyle     = 
| abovestyle     = 
| subheaderstyle = 
| title          = 
| above          = 
| subheader      = 

|   imagestyle   = 
| captionstyle   = 
|   image        = 
| caption        = 
|   image2       = 
| caption2       = 

| headerstyle    = 
|  labelstyle    = 
|   datastyle    = 
| header1  = 
|  label1  = 
|   data1  = 
| header2  = 
|  label2  = 
|   data2  = 
| header3  = 
|  label3  = 
|   data3  = 
| header4  = 
|  label4  = 
|   data4  = 
| header5  = 
|  label5  = 
|   data5  = 
| header6  = 
|  label6  = 
|   data6  = 
| header7  = 
|  label7  = 
|   data7  = 
| header8  = 
|  label8  = 
|   data8  = 
| header9  = 
|  label9  = 
|   data9  = 
| header10 = 
|  label10 = 
|   data10 = 
| header11 = 
|  label11 = 
|   data11 = 
| header12 = 
|  label12 = 
|   data12 = 
| header13 = 
|  label13 = 
|   data13 = 
| header14 = 
|  label14 = 
|   data14 = 
| header15 = 
|  label15 = 
|   data15 = 
| header16 = 
|  label16 = 
|   data16 = 
| header17 = 
|  label17 = 
|   data17 = 
| header18 = 
|  label18 = 
|   data18 = 
| header19 = 
|  label19 = 
|   data19 = 
| header20 = 
|  label20 = 
|   data20 = 

| belowstyle     =
| below          = 
}}
&lt;/pre&gt;{{clear}}

=== Limitations ===
Previously, the number of rows available to this template was limited to 99. This restriction has been lifted now that the template has been ported to a [[WP:Lua|Lua module]], but to maintain backwards compatibility there is now a limit on the number of rows apart by which parameters will be detected. If parameters are numbered more than 50 apart, the later parameters may be ignored (depending on the exact numbers involved), and if parameters are numbered more than 100 apart, the later parameters will definitely be ignored.

For example, this code will display properly:

{{Infobox
 | header3   = Section 1
 |  label48  = Label A
 |   data48  = Data A
 |   data92  = Data B
 |  label136 = Label C
 |   data136 = Data C
 | header177 = Section 2
 |  label215 = Label D
 |   data215 = Data D
}}
&lt;div style="overflow:auto"&gt;
 &lt;nowiki&gt;{{&lt;/nowiki&gt;Infobox
  | header&lt;b style="color:black;background:#AFA"&gt;3&lt;/b&gt;   = Section 1
  |  label&lt;b style="color:black;background:#AFA"&gt;48&lt;/b&gt;  = Label A
  |   data&lt;b style="color:black;background:#AFA"&gt;48&lt;/b&gt;  = Data A
  |   data&lt;b style="color:black;background:#AFA"&gt;92&lt;/b&gt;  = Data B
  |  label&lt;b style="color:black;background:#AFA"&gt;136&lt;/b&gt; = Label C
  |   data&lt;b style="color:black;background:#AFA"&gt;136&lt;/b&gt; = Data C
  | header&lt;b style="color:black;background:#AFA"&gt;177&lt;/b&gt; = Section 2
  |  label&lt;b style="color:black;background:#AFA"&gt;215&lt;/b&gt; = Label D
  |   data&lt;b style="color:black;background:#AFA"&gt;215&lt;/b&gt; = Data D
 &lt;nowiki&gt;}}&lt;/nowiki&gt;
&lt;/div&gt;{{clear}}

But in this code, only Section 1, Label A and Data A will be displayed, because Data B is numbered too far away from Data A (and then all the rest is ignored):

{{Infobox
 | header3   = Section 1
 |  label48  = Label A
 |   data48  = Data A
 |   data102 = Data B
 |  label103 = Label C
 |   data103 = Data C
 | header115 = Section 2
 |  label120 = Label D |data120 = Data D
}}
&lt;div style="overflow:auto"&gt;
 &lt;nowiki&gt;{{&lt;/nowiki&gt;Infobox
  | header&lt;b style="color:black;background:#AFA"&gt;3&lt;/b&gt;   = Section 1
  |  label&lt;b style="color:black;background:#AFA"&gt;48&lt;/b&gt;  = Label A
  |   data&lt;b style="color:black;background:#AFA"&gt;48&lt;/b&gt;  = Data A
  |   data&lt;b style="color:black;background:#FAA"&gt;102&lt;/b&gt; = Data B
  |  label&lt;b style="color:black;background:#AFA"&gt;103&lt;/b&gt; = Label C
  |   data&lt;b style="color:black;background:#AFA"&gt;103&lt;/b&gt; = Data C
  | header&lt;b style="color:black;background:#AFA"&gt;115&lt;/b&gt; = Section 2
  |  label&lt;b style="color:black;background:#AFA"&gt;120&lt;/b&gt; = Label D
  |   data&lt;b style="color:black;background:#AFA"&gt;120&lt;/b&gt; = Data D
 &lt;nowiki&gt;}}&lt;/nowiki&gt;
&lt;/div&gt;{{clear}}

Note that parameter values may be blank - parameters are counted unless they are completely absent, in header() and data(n), from the template invocation:

{{Infobox
 | header3   = Section 1
 |  label48  = Label A
 |   data48  = Data A
 |   data70  =
 |   data102 = Data B
 |  label103 = Label C
 |   data103 = Data C
 | header115 = Section 2
 |  label120 = Label D |data120 = Data D
}}
&lt;div style="overflow:auto"&gt;
 &lt;nowiki&gt;{{&lt;/nowiki&gt;Infobox
  | header&lt;b style="color:black;background:#AFA"&gt;3&lt;/b&gt;   = Section 1
  |  label&lt;b style="color:black;background:#AFA"&gt;48&lt;/b&gt;  = Label A
  |   data&lt;b style="color:black;background:#AFA"&gt;48&lt;/b&gt;  = Data A
  |   data&lt;b style="color:black;background:#AFA"&gt;70&lt;/b&gt;  =
  |   data&lt;b style="color:black;background:#AFA"&gt;102&lt;/b&gt; = Data B
  |  label&lt;b style="color:black;background:#AFA"&gt;103&lt;/b&gt; = Label C
  |   data&lt;b style="color:black;background:#AFA"&gt;103&lt;/b&gt; = Data C
  | header&lt;b style="color:black;background:#AFA"&gt;115&lt;/b&gt; = Section 2
  |  label&lt;b style="color:black;background:#AFA"&gt;120&lt;/b&gt; = Label D
  |   data&lt;b style="color:black;background:#AFA"&gt;120&lt;/b&gt; = Data D
 &lt;nowiki&gt;}}&lt;/nowiki&gt;
&lt;/div&gt;{{clear}}

If only '''label(n)''' is specified (even with a non-empty value) but neither '''header(n)''' nor '''data(n)''', the parameter is ignored and considered as if it was missing:

{{Infobox
 | header3   = Section 1
 |  label48  = Label A
 |   data48  = Data A
 |  label70  = Dummy label
 |   data102 = Data B
 |  label103 = Label C
 |   data103 = Data C
 | header115 = Section 2
 |  label120 = Label D |data120 = Data D
}}
&lt;div style="overflow:auto"&gt;
 &lt;nowiki&gt;{{&lt;/nowiki&gt;Infobox
  | header&lt;b style="color:black;background:#AFA"&gt;3&lt;/b&gt;   = Section 1
  |  label&lt;b style="color:black;background:#AFA"&gt;48&lt;/b&gt;  = Label A
  |   data&lt;b style="color:black;background:#AFA"&gt;48&lt;/b&gt;  = Data A
  |  &lt;b style="color:black;background:#FAA"&gt;label70&lt;/b&gt;  = Dummy label
  |   data&lt;b style="color:black;background:#AFA"&gt;102&lt;/b&gt; = Data B
  |  label&lt;b style="color:black;background:#AFA"&gt;103&lt;/b&gt; = Label C
  |   data&lt;b style="color:black;background:#AFA"&gt;103&lt;/b&gt; = Data C
  | header&lt;b style="color:black;background:#AFA"&gt;115&lt;/b&gt; = Section 2
  |  label&lt;b style="color:black;background:#AFA"&gt;120&lt;/b&gt; = Label D
  |   data&lt;b style="color:black;background:#AFA"&gt;120&lt;/b&gt; = Data D
 &lt;nowiki&gt;}}&lt;/nowiki&gt;
&lt;/div&gt;{{clear}}

There are also similar limitations for '''image(n)''' and '''subheader(n)''' parameters: in those cases, parameters should not be numbered more than 10 apart.

=== Porting to other MediaWikis ===
The infobox template requires the [[:mw:Extension:Scribunto|Scribunto]] extension and [[mw:Manual:Using content from Wikipedia#HTMLTidy|HTMLTidy]] to be installed. It may not work with other MediaWikis. [[Wikipedia:WikiProject Transwiki|WikiProject Transwiki]] has a version of this template that has been modified to work on other MediaWikis.

===See also===
* [[Module:Infobox]], the [[WP:LUA|Lua]] module on which this template is based
* [[Special:Permalink/558855956|Template:Infobox/old]], the previous ParserFunctions implementation
* {{tl|Infobox3cols}}
* {{tl|Navbox}} and {{tl|Sidebar}}
* [[Wikipedia:List of infoboxes|List of infoboxes]]
* Maintenance categories:
** [[:Category:Articles which use infobox templates with no data rows]]
** [[:Category:Articles which use embedded infobox templates with the title parameter]]

&lt;includeonly&gt;{{#ifeq:{{SUBPAGENAME}}|sandbox | |
[[Category:Infobox templates| ]]
}}&lt;/includeonly&gt;</text>
            <sha1>ry7kgvv4g7027xb8fhpetg733g9kgmh</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Lua</title>
        <ns>10</ns>
        <id>643</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6902</id>
            <parentid>6901</parentid>
            <timestamp>2015-03-16T18:52:00Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="196">&lt;includeonly&gt;{{#invoke:Lua banner|main}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Lua|Module:Lua banner}}
{{documentation}}
&lt;!-- Categories go on the /doc subpage and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
            <sha1>pnmjp3f3fl321yf2jpg5syebi412n7b</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Navbar</title>
        <ns>10</ns>
        <id>644</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6904</id>
            <parentid>6903</parentid>
            <timestamp>2015-03-16T18:52:00Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1103">&lt;includeonly&gt;&lt;div class="plainlinks hlist navbar {{#if:{{{mini|}}}|mini}}" style="{{{style|}}}"&gt;&lt;!--

--&gt;{{#if:{{{mini|}}}{{{plain|}}}|&lt;!--nothing--&gt;|&lt;!--else:
--&gt;&lt;span style="word-spacing:0;{{{fontstyle|}}}"&gt;{{{text|This box:}}} &lt;/span&gt;}}&lt;!--

--&gt;{{#if:{{{brackets|}}}|&lt;span style="margin-right:-0.125em;{{{fontstyle|}}}"&gt;&amp;#91;&lt;/span&gt;}}&lt;!--

--&gt;&lt;ul&gt;&lt;!--
--&gt;&lt;li class="nv-view"&gt;[[{{transclude|{{{1}}}}}|&lt;span title="View this template" &lt;!--
--&gt;style="{{{fontstyle|}}}"&gt;{{#if:{{{mini|}}}|v|view}}&lt;/span&gt;]]&lt;/li&gt;&lt;!--

--&gt;&lt;li class="nv-talk"&gt;[[{{TALKPAGENAME:{{transclude|{{{1}}}}}}}|&lt;span title="Discuss this template" &lt;!--
--&gt;style="{{{fontstyle|}}}"&gt;{{#if:{{{mini|}}}|t|talk}}&lt;/span&gt;]]&lt;/li&gt;&lt;!--

--&gt;{{#if:{{{noedit|}}}|&lt;!--nothing--&gt;|&lt;!--else:
--&gt;&lt;li class="nv-edit"&gt;[{{fullurl:{{transclude|{{{1}}}}}|action=edit}} &lt;span title="Edit this template" &lt;!--
--&gt;style="{{{fontstyle|}}}"&gt;{{#if:{{{mini|}}}|e|edit}}&lt;/span&gt;]&lt;/li&gt;}}&lt;!--
--&gt;&lt;/ul&gt;&lt;!--

--&gt;{{#if:{{{brackets|}}}|&lt;span style="margin-left:-0.125em;{{{fontstyle|}}}"&gt;&amp;#93;&lt;/span&gt;}}&lt;!--

--&gt;&lt;/div&gt;&lt;/includeonly&gt;&lt;noinclude&gt;

{{documentation}}
&lt;/noinclude&gt;</text>
            <sha1>o0nu6r3h7z4ib71y018sgmw0vpebte1</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Nobold</title>
        <ns>10</ns>
        <id>645</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6906</id>
            <parentid>6905</parentid>
            <timestamp>2015-03-16T18:52:00Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="164">&lt;span style="font-weight:normal;"&gt;{{{1}}}&lt;/span&gt;&lt;noinclude&gt;
{{documentation}}
&lt;!-- PLEASE ADD CATEGORIES AND INTERWIKIS TO THE /doc SUBPAGE, THANKS --&gt;
&lt;/noinclude&gt;</text>
            <sha1>jd091g26r8rrz2i74pnanvl0wum30wj</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Ombox</title>
        <ns>10</ns>
        <id>646</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6908</id>
            <parentid>6907</parentid>
            <timestamp>2015-03-16T18:52:01Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="146">{{#invoke:Message box|ombox}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
            <sha1>1o93yrjvq6v2ylug2k0uaaltljurje2</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Para</title>
        <ns>10</ns>
        <id>647</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6910</id>
            <parentid>6909</parentid>
            <timestamp>2015-03-16T18:52:01Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="253">&lt;code class="nowrap" {{#if:{{{plain|}}}|style="background-color:inherit;border:none;"}}&gt;&amp;#124;{{#if:{{{1|}}}|{{{1}}}&amp;#61;}}{{{2|}}}&lt;/code&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;!--Categories and interwikis go near the bottom of the /doc subpage.--&gt;
&lt;/noinclude&gt;</text>
            <sha1>6nq35qepr5v1d56yqp46kz67w8xqjk3</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Sidebar</title>
        <ns>10</ns>
        <id>649</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6914</id>
            <parentid>6913</parentid>
            <timestamp>2015-03-16T18:52:01Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="94">&lt;includeonly&gt;{{#invoke:Sidebar|sidebar}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
            <sha1>2zokwtfwvucgrlrksr937kmldrijnwv</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Tl</title>
        <ns>10</ns>
        <id>650</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6916</id>
            <parentid>6915</parentid>
            <timestamp>2015-03-16T18:52:01Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="168">&amp;#123;&amp;#123;[[Template:{{{1}}}|{{{1}}}]]&amp;#125;&amp;#125;&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
            <sha1>h0vr3yvr9jdyd17x82vnav21ngwmxuk</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Transclude</title>
        <ns>10</ns>
        <id>651</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6918</id>
            <parentid>6917</parentid>
            <timestamp>2015-03-16T18:52:01Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="400">{{#switch: {{NAMESPACE: {{{1}}} }}
 |#default = {{FULLPAGENAME: {{{1}}} }} &lt;!-- eg "User:Foo" --&gt;
 |{{ns:0}} = 
    {{#ifeq: {{NAMESPACE: {{{1}}} }} | {{NAMESPACE: Template{{{1}}} }}
      | Template:{{{1}}}            &lt;!-- no leading colon, eg "Foo" --&gt;
      | {{PAGENAME: {{{1}}} }}      &lt;!-- leading colon, eg ":Foo", so we want the article --&gt;
    }}
}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
            <sha1>ob9m2b913drxlie5tgekieudupfrl9n</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:Infobox</title>
        <ns>828</ns>
        <id>652</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6947</id>
            <parentid>6921</parentid>
            <timestamp>2015-03-16T19:26:36Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="13488">--
-- This module implements {{Infobox}}
--
 
local p = {}
 
local HtmlBuilder = require('Module:HtmlBuilder')
 
local args = {}
local origArgs
local root
 
local function union(t1, t2)
    -- Returns the union of the values of two tables, as a sequence.
    local vals = {}
    for k, v in pairs(t1) do
        vals[v] = true
    end
    for k, v in pairs(t2) do
        vals[v] = true
    end
    local ret = {}
    for k, v in pairs(vals) do
        table.insert(ret, k)
    end
    return ret
end

local function getArgNums(prefix)
    -- Returns a table containing the numbers of the arguments that exist
    -- for the specified prefix. For example, if the prefix was 'data', and
    -- 'data1', 'data2', and 'data5' exist, it would return {1, 2, 5}.
    local nums = {}
    for k, v in pairs(args) do
        local num = tostring(k):match('^' .. prefix .. '([1-9]%d*)$')
        if num then table.insert(nums, tonumber(num)) end
    end
    table.sort(nums)
    return nums
end

local function addRow(rowArgs)
    -- Adds a row to the infobox, with either a header cell
    -- or a label/data cell combination.
    if rowArgs.header then
        root
            .tag('tr')
                .addClass(rowArgs.rowclass)
                .attr('id', rowArgs.rowid)
                .tag('th')
                    .attr('colspan', 2)
                    .attr('id', rowArgs.headerid)
                    .addClass(rowArgs.class)
                    .addClass(args.headerclass)
                    .css('text-align', 'center')
                    .cssText(args.headerstyle)
                    .wikitext(rowArgs.header)
    elseif rowArgs.data then
        local row = root.tag('tr')
        row.addClass(rowArgs.rowclass)
        row.attr('id', rowArgs.rowid)
        if rowArgs.label then
            row
                .tag('th')
                    .attr('scope', 'row')
                    .attr('id', rowArgs.labelid)
                    .css('text-align', 'left')
                    .cssText(args.labelstyle)
                    .wikitext(rowArgs.label)
                    .done()
        end
        
        local dataCell = row.tag('td')
        if not rowArgs.label then 
            dataCell
                .attr('colspan', 2)
                .css('text-align', 'center') 
        end
        dataCell
            .attr('id', rowArgs.dataid)
            .addClass(rowArgs.class)
            .cssText(rowArgs.datastyle)
            .newline()
            .wikitext(rowArgs.data)
    end
end

local function renderTitle()
    if not args.title then return end

    root
        .tag('caption')
            .addClass(args.titleclass)
            .cssText(args.titlestyle)
            .wikitext(args.title)
end

local function renderAboveRow()
    if not args.above then return end
    
    root
        .tag('tr')
            .tag('th')
                .attr('colspan', 2)
                .addClass(args.aboveclass)
                .css('text-align', 'center')
                .css('font-size', '125%')
                .css('font-weight', 'bold')
                .cssText(args.abovestyle)
                .wikitext(args.above)
end

local function renderBelowRow()
    if not args.below then return end
    
    root
        .tag('tr')
            .tag('td')
                .attr('colspan', '2')
                .addClass(args.belowclass)
                .css('text-align', 'center')
                .cssText(args.belowstyle)
                .newline()
                .wikitext(args.below)
end

local function renderSubheaders()
    if args.subheader then
        args.subheader1 = args.subheader
    end
    if args.subheaderrowclass then
        args.subheaderrowclass1 = args.subheaderrowclass
    end
    local subheadernums = getArgNums('subheader')
    for k, num in ipairs(subheadernums) do
        addRow({
            data = args['subheader' .. tostring(num)],
            datastyle = args.subheaderstyle or args['subheaderstyle' .. tostring(num)],
            class = args.subheaderclass,
            rowclass = args['subheaderrowclass' .. tostring(num)]
        })
    end
end

local function renderImages()
    if args.image then
        args.image1 = args.image
    end
    if args.caption then
        args.caption1 = args.caption
    end
    local imagenums = getArgNums('image')
    for k, num in ipairs(imagenums) do
        local caption = args['caption' .. tostring(num)]
        local data = HtmlBuilder.create().wikitext(args['image' .. tostring(num)])
        if caption then
            data
                .tag('div')
                    .cssText(args.captionstyle)
                    .wikitext(caption)
        end
        addRow({
            data = tostring(data),
            datastyle = args.imagestyle,
            class = args.imageclass,
            rowclass = args['imagerowclass' .. tostring(num)]
        })
    end
end

local function renderRows()
    -- Gets the union of the header and data argument numbers,
    -- and renders them all in order using addRow.
    local rownums = union(getArgNums('header'), getArgNums('data'))
    table.sort(rownums)
    for k, num in ipairs(rownums) do
        addRow({
            header = args['header' .. tostring(num)],
            label = args['label' .. tostring(num)],
            data = args['data' .. tostring(num)],
            datastyle = args.datastyle,
            class = args['class' .. tostring(num)],
            rowclass = args['rowclass' .. tostring(num)],
            dataid = args['dataid' .. tostring(num)],
            labelid = args['labelid' .. tostring(num)],
            headerid = args['headerid' .. tostring(num)],
            rowid = args['rowid' .. tostring(num)]
        })
    end
end

local function renderNavBar()
    if not args.name then return end
    
    root
        .tag('tr')
            .tag('td')
                .attr('colspan', '2')
                .css('text-align', 'right')
                .wikitext(mw.getCurrentFrame():expandTemplate({ 
                    title = 'navbar', 
                    args = { args.name, mini = 1 }
                }))
end

local function renderItalicTitle()
    local italicTitle = args['italic title'] and mw.ustring.lower(args['italic title'])
    if italicTitle == '' or italicTitle == 'force' or italicTitle == 'yes' then
        root.wikitext(mw.getCurrentFrame():expandTemplate({title = 'italic title'}))
    end
end

local function renderTrackingCategories()
    if args.decat ~= 'yes' then
        if #(getArgNums('data')) == 0 and mw.title.getCurrentTitle().namespace == 0 then
            root.wikitext('[[Category:Articles which use infobox templates with no data rows]]')
        end
        if args.child == 'yes' and args.title then
            root.wikitext('[[Category:Articles which use embedded infobox templates with the title parameter]]')
        end
    end
end

local function _infobox()
    -- Specify the overall layout of the infobox, with special settings
    -- if the infobox is used as a 'child' inside another infobox.
    if args.child ~= 'yes' then
        root = HtmlBuilder.create('table')
        
        root
            .addClass('infobox')
            .addClass(args.bodyclass)
            .attr('cellspacing', 3)
            .css('border-spacing', '3px')
            
            if args.subbox == 'yes' then
                root
                    .css('padding', '0')
                    .css('border', 'none')
                    .css('margin', '-3px')
                    .css('width', 'auto')
                    .css('min-width', '100%')
                    .css('font-size', '100%')
                    .css('clear', 'none')
                    .css('float', 'none')
                    .css('background-color', 'transparent')
            else
                root
                    .css('width', '22em')
            end
        root
            .cssText(args.bodystyle)
    
        renderTitle()
        renderAboveRow()
    else
        root = HtmlBuilder.create()
        
        root
            .wikitext(args.title)
    end

    renderSubheaders()
    renderImages() 
    renderRows() 
    renderBelowRow()  
    renderNavBar()
    renderItalicTitle()
    renderTrackingCategories()
    
    return tostring(root)
end

local function preprocessSingleArg(argName)
    -- If the argument exists and isn't blank, add it to the argument table.
    -- Blank arguments are treated as nil to match the behaviour of ParserFunctions.
    if origArgs[argName] and origArgs[argName] ~= '' then
        args[argName] = origArgs[argName]
    end
end

local function preprocessArgs(prefixTable, step)
    -- Assign the parameters with the given prefixes to the args table, in order, in batches
    -- of the step size specified. This is to prevent references etc. from appearing in the
    -- wrong order. The prefixTable should be an array containing tables, each of which has
    -- two possible fields, a "prefix" string and a "depend" table. The function always parses
    -- parameters containing the "prefix" string, but only parses parameters in the "depend"
    -- table if the prefix parameter is present and non-blank.
    if type(prefixTable) ~= 'table' then
        error("Non-table value detected for the prefix table", 2)
    end
    if type(step) ~= 'number' then
        error("Invalid step value detected", 2)
    end
    
    -- Get arguments without a number suffix, and check for bad input.
    for i,v in ipairs(prefixTable) do
        if type(v) ~= 'table' or type(v.prefix) ~= "string" or (v.depend and type(v.depend) ~= 'table') then
            error('Invalid input detected to preprocessArgs prefix table', 2)
        end
        preprocessSingleArg(v.prefix)
        -- Only parse the depend parameter if the prefix parameter is present and not blank.
        if args[v.prefix] and v.depend then
            for j, dependValue in ipairs(v.depend) do
                if type(dependValue) ~= 'string' then
                    error('Invalid "depend" parameter value detected in preprocessArgs')
                end
                preprocessSingleArg(dependValue)
            end
        end
    end

    -- Get arguments with number suffixes.
    local a = 1 -- Counter variable.
    local moreArgumentsExist = true
    while moreArgumentsExist == true do
        moreArgumentsExist = false
        for i = a, a + step - 1 do
            for j,v in ipairs(prefixTable) do
                local prefixArgName = v.prefix .. tostring(i)
                if origArgs[prefixArgName] then
                    moreArgumentsExist = true -- Do another loop if any arguments are found, even blank ones.
                    preprocessSingleArg(prefixArgName)
                end
                -- Process the depend table if the prefix argument is present and not blank, or
                -- we are processing "prefix1" and "prefix" is present and not blank, and
                -- if the depend table is present.
                if v.depend and (args[prefixArgName] or (i == 1 and args[v.prefix])) then
                    for j,dependValue in ipairs(v.depend) do
                        local dependArgName = dependValue .. tostring(i)
                        preprocessSingleArg(dependArgName)
                    end
                end
            end
        end
        a = a + step
    end
end
 
function p.infobox(frame)
    -- If called via #invoke, use the args passed into the invoking template.
    -- Otherwise, for testing purposes, assume args are being passed directly in.
    if frame == mw.getCurrentFrame() then
        origArgs = frame:getParent().args
    else
        origArgs = frame
    end
    
    -- Parse the data parameters in the same order that the old {{infobox}} did, so that
    -- references etc. will display in the expected places. Parameters that depend on
    -- another parameter are only processed if that parameter is present, to avoid
    -- phantom references appearing in article reference lists.
    preprocessSingleArg('child')
    preprocessSingleArg('bodyclass')
    preprocessSingleArg('subbox')
    preprocessSingleArg('bodystyle')
    preprocessSingleArg('title')
    preprocessSingleArg('titleclass')
    preprocessSingleArg('titlestyle')
    preprocessSingleArg('above')
    preprocessSingleArg('aboveclass')
    preprocessSingleArg('abovestyle')
    preprocessArgs({
        {prefix = 'subheader', depend = {'subheaderstyle', 'subheaderrowclass'}}
    }, 10)
    preprocessSingleArg('subheaderstyle')
    preprocessSingleArg('subheaderclass')
    preprocessArgs({
        {prefix = 'image', depend = {'caption', 'imagerowclass'}}
    }, 10)
    preprocessSingleArg('captionstyle')
    preprocessSingleArg('imagestyle')
    preprocessSingleArg('imageclass')
    preprocessArgs({
        {prefix = 'header'},
        {prefix = 'data', depend = {'label'}},
        {prefix = 'rowclass'},
        {prefix = 'class'},
        {prefix = 'dataid'},
        {prefix = 'labelid'},
        {prefix = 'headerid'},
        {prefix = 'rowid'}
    }, 50)
    preprocessSingleArg('headerclass')
    preprocessSingleArg('headerstyle')
    preprocessSingleArg('labelstyle')
    preprocessSingleArg('datastyle')
    preprocessSingleArg('below')
    preprocessSingleArg('belowclass')
    preprocessSingleArg('belowstyle')
    preprocessSingleArg('name')
    args['italic title'] = origArgs['italic title'] -- different behaviour if blank or absent
    preprocessSingleArg('decat')
 
    return _infobox()
end
 
return p</text>
            <sha1>mjjeqnr78g15whlr0rgvpi4ts519q2r</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:Arguments</title>
        <ns>828</ns>
        <id>653</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6923</id>
            <parentid>6922</parentid>
            <timestamp>2015-03-16T19:26:33Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="8620">-- This module provides easy processing of arguments passed to Scribunto from
-- #invoke. It is intended for use by other Lua modules, and should not be
-- called from #invoke directly.

local libraryUtil = require('libraryUtil')
local checkType = libraryUtil.checkType

local arguments = {}

-- Generate four different tidyVal functions, so that we don't have to check the
-- options every time we call it.

local function tidyValDefault(key, val)
	if type(val) == 'string' then
		val = val:match('^%s*(.-)%s*$')
		if val == '' then
			return nil
		else
			return val
		end
	else
		return val
	end
end

local function tidyValTrimOnly(key, val)
	if type(val) == 'string' then
		return val:match('^%s*(.-)%s*$')
	else
		return val
	end
end

local function tidyValRemoveBlanksOnly(key, val)
	if type(val) == 'string' then
		if val:find('%S') then
			return val
		else
			return nil
		end
	else
		return val
	end
end

local function tidyValNoChange(key, val)
	return val
end

function arguments.getArgs(frame, options)
	checkType('getArgs', 1, frame, 'table', true)
	checkType('getArgs', 2, options, 'table', true)
	frame = frame or {}
	options = options or {}

	--[[
	-- Get the argument tables. If we were passed a valid frame object, get the
	-- frame arguments (fargs) and the parent frame arguments (pargs), depending
	-- on the options set and on the parent frame's availability. If we weren't
	-- passed a valid frame object, we are being called from another Lua module
	-- or from the debug console, so assume that we were passed a table of args
	-- directly, and assign it to a new variable (luaArgs).
	--]]
	local fargs, pargs, luaArgs
	if type(frame.args) == 'table' and type(frame.getParent) == 'function' then
		if options.wrappers then
			--[[
			-- The wrappers option makes Module:Arguments look up arguments in
			-- either the frame argument table or the parent argument table, but
			-- not both. This means that users can use either the #invoke syntax
			-- or a wrapper template without the loss of performance associated
			-- with looking arguments up in both the frame and the parent frame.
			-- Module:Arguments will look up arguments in the parent frame
			-- if it finds the parent frame's title in options.wrapper;
			-- otherwise it will look up arguments in the frame object passed
			-- to getArgs.
			--]]
			local parent = frame:getParent()
			if not parent then
				fargs = frame.args
			else
				local title = parent:getTitle():gsub('/sandbox$', '')
				local found = false
				if type(options.wrappers) == 'table' then
					for _,v in pairs(options.wrappers) do
						if v == title then
							found = true
							break
						end
					end
				elseif options.wrappers == title then
					found = true
				end
				
				-- We test for false specifically here so that nil (the default) acts like true.
				if found or options.frameOnly == false then
					pargs = parent.args
				end
				if not found or options.parentOnly == false then
					fargs = frame.args
				end
			end
		else
			-- options.wrapper isn't set, so check the other options.
			if not options.parentOnly then
				fargs = frame.args
			end
			if not options.frameOnly then
				local parent = frame:getParent()
				pargs = parent and parent.args or nil
			end
		end
		if options.parentFirst then
			fargs, pargs = pargs, fargs
		end
	else
		luaArgs = frame
	end
	
	-- Set the order of precedence of the argument tables. If the variables are
	-- nil, nothing will be added to the table, which is how we avoid clashes
	-- between the frame/parent args and the Lua args.	
	local argTables = {fargs}
	argTables[#argTables + 1] = pargs
	argTables[#argTables + 1] = luaArgs

	--[[
	-- Generate the tidyVal function. If it has been specified by the user, we
	-- use that; if not, we choose one of four functions depending on the
	-- options chosen. This is so that we don't have to call the options table
	-- every time the function is called.
	--]]
	local tidyVal = options.valueFunc
	if tidyVal then
		if type(tidyVal) ~= 'function' then
			error(
				"bad value assigned to option 'valueFunc'"
					.. '(function expected, got '
					.. type(tidyVal)
					.. ')',
				2
			)
		end
	elseif options.trim ~= false then
		if options.removeBlanks ~= false then
			tidyVal = tidyValDefault
		else
			tidyVal = tidyValTrimOnly
		end
	else
		if options.removeBlanks ~= false then
			tidyVal = tidyValRemoveBlanksOnly
		else
			tidyVal = tidyValNoChange
		end
	end

	--[[
	-- Set up the args, metaArgs and nilArgs tables. args will be the one
	-- accessed from functions, and metaArgs will hold the actual arguments. Nil
	-- arguments are memoized in nilArgs, and the metatable connects all of them
	-- together.
	--]]
	local args, metaArgs, nilArgs, metatable = {}, {}, {}, {}
	setmetatable(args, metatable)

	local function mergeArgs(iterator, tables)
		--[[
		-- Accepts multiple tables as input and merges their keys and values
		-- into one table using the specified iterator. If a value is already
		-- present it is not overwritten; tables listed earlier have precedence.
		-- We are also memoizing nil values, but those values can be
		-- overwritten.
		--]]
		for _, t in ipairs(tables) do
			for key, val in iterator(t) do
				if metaArgs[key] == nil then
					local tidiedVal = tidyVal(key, val)
					if tidiedVal == nil then
						nilArgs[key] = true
					else
						metaArgs[key] = tidiedVal
					end
				end
			end
		end
	end

	--[[
	-- Define metatable behaviour. Arguments are memoized in the metaArgs table,
	-- and are only fetched from the argument tables once. Fetching arguments
	-- from the argument tables is the most resource-intensive step in this
	-- module, so we try and avoid it where possible. For this reason, nil
	-- arguments are also memoized, in the nilArgs table. Also, we keep a record
	-- in the metatable of when pairs and ipairs have been called, so we do not
	-- run pairs and ipairs on the argument tables more than once. We also do
	-- not run ipairs on fargs and pargs if pairs has already been run, as all
	-- the arguments will already have been copied over.
	--]]

	metatable.__index = function (t, key)
		--[[
		-- Fetches an argument when the args table is indexed. First we check
		-- to see if the value is memoized, and if not we try and fetch it from
		-- the argument tables. When we check memoization, we need to check
		-- metaArgs before nilArgs, as both can be non-nil at the same time.
		-- If the argument is not present in metaArgs, we also check whether
		-- pairs has been run yet. If pairs has already been run, we return nil.
		-- This is because all the arguments will have already been copied into
		-- metaArgs by the mergeArgs function, meaning that any other arguments
		-- must be nil.
		--]]
		local val = metaArgs[key]
		if val ~= nil then
			return val
		elseif metatable.donePairs or nilArgs[key] then
			return nil
		end
		for _, argTable in ipairs(argTables) do
			local argTableVal = tidyVal(key, argTable[key])
			if argTableVal == nil then
				nilArgs[key] = true
			else
				metaArgs[key] = argTableVal
				return argTableVal
			end
		end
		return nil
	end

	metatable.__newindex = function (t, key, val)
		-- This function is called when a module tries to add a new value to the
		-- args table, or tries to change an existing value.
		if options.readOnly then
			error(
				'could not write to argument table key "'
					.. tostring(key)
					.. '"; the table is read-only',
				2
			)
		elseif options.noOverwrite and args[key] ~= nil then
			error(
				'could not write to argument table key "'
					.. tostring(key)
					.. '"; overwriting existing arguments is not permitted',
				2
			)
		elseif val == nil then
			--[[
			-- If the argument is to be overwritten with nil, we need to erase
			-- the value in metaArgs, so that __index, __pairs and __ipairs do
			-- not use a previous existing value, if present; and we also need
			-- to memoize the nil in nilArgs, so that the value isn't looked
			-- up in the argument tables if it is accessed again.
			--]]
			metaArgs[key] = nil
			nilArgs[key] = true
		else
			metaArgs[key] = val
		end
	end

	metatable.__pairs = function ()
		-- Called when pairs is run on the args table.
		if not metatable.donePairs then
			mergeArgs(pairs, argTables)
			metatable.donePairs = true
			metatable.doneIpairs = true
		end
		return pairs(metaArgs)
	end

	metatable.__ipairs = function ()
		-- Called when ipairs is run on the args table.
		if not metatable.doneIpairs then
			mergeArgs(ipairs, argTables)
			metatable.doneIpairs = true
		end
		return ipairs(metaArgs)
	end

	return args
end

return arguments</text>
            <sha1>m9ddo769dkkvlkz48buir34035j4qhc</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:Category handler</title>
        <ns>828</ns>
        <id>654</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6925</id>
            <parentid>6924</parentid>
            <timestamp>2015-03-16T19:26:33Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="7871">--------------------------------------------------------------------------------
--                                                                            --
--                              CATEGORY HANDLER                              --
--                                                                            --
--      This module implements the {{category handler}} template in Lua,      --
--      with a few improvements: all namespaces and all namespace aliases     --
--      are supported, and namespace names are detected automatically for     --
--      the local wiki. This module requires [[Module:Namespace detect]]      --
--      and [[Module:Yesno]] to be available on the local wiki. It can be     --
--      configured for different wikis by altering the values in              --
--      [[Module:Category handler/config]], and pages can be blacklisted      --
--      from categorisation by using [[Module:Category handler/blacklist]].   --
--                                                                            --
--------------------------------------------------------------------------------

-- Load required modules
local yesno = require('Module:Yesno')

-- Lazily load things we don't always need
local mShared, mappings

local p = {}

--------------------------------------------------------------------------------
-- Helper functions
--------------------------------------------------------------------------------

local function trimWhitespace(s, removeBlanks)
	if type(s) ~= 'string' then
		return s
	end
	s = s:match('^%s*(.-)%s*$')
	if removeBlanks then
		if s ~= '' then
			return s
		else
			return nil
		end
	else
		return s
	end
end

--------------------------------------------------------------------------------
-- CategoryHandler class
--------------------------------------------------------------------------------

local CategoryHandler = {}
CategoryHandler.__index = CategoryHandler

function CategoryHandler.new(data, args)
	local obj = setmetatable({ _data = data, _args = args }, CategoryHandler)
	
	-- Set the title object
	do
		local pagename = obj:parameter('demopage')
		local success, titleObj
		if pagename then
			success, titleObj = pcall(mw.title.new, pagename)
		end
		if success and titleObj then
			obj.title = titleObj
			if titleObj == mw.title.getCurrentTitle() then
				obj._usesCurrentTitle = true
			end
		else
			obj.title = mw.title.getCurrentTitle()
			obj._usesCurrentTitle = true
		end
	end

	-- Set suppression parameter values
	for _, key in ipairs{'nocat', 'categories'} do
		local value = obj:parameter(key)
		value = trimWhitespace(value, true)
		obj['_' .. key] = yesno(value)
	end
	do
		local subpage = obj:parameter('subpage')
		local category2 = obj:parameter('category2')
		if type(subpage) == 'string' then
			subpage = mw.ustring.lower(subpage)
		end
		if type(category2) == 'string' then
			subpage = mw.ustring.lower(category2)
		end
		obj._subpage = trimWhitespace(subpage, true)
		obj._category2 = trimWhitespace(category2) -- don't remove blank values
	end
	return obj
end

function CategoryHandler:parameter(key)
	local parameterNames = self._data.parameters[key]
	local pntype = type(parameterNames)
	if pntype == 'string' or pntype == 'number' then
		return self._args[parameterNames]
	elseif pntype == 'table' then
		for _, name in ipairs(parameterNames) do
			local value = self._args[name]
			if value ~= nil then
				return value
			end
		end
		return nil
	else
		error(string.format(
			'invalid config key "%s"',
			tostring(key)
		), 2)
	end
end

function CategoryHandler:isSuppressedByArguments()
	return
		-- See if a category suppression argument has been set.
		self._nocat == true
		or self._categories == false
		or (
			self._category2
			and self._category2 ~= self._data.category2Yes
			and self._category2 ~= self._data.category2Negative
		)

		-- Check whether we are on a subpage, and see if categories are
		-- suppressed based on our subpage status.
		or self._subpage == self._data.subpageNo and self.title.isSubpage
		or self._subpage == self._data.subpageOnly and not self.title.isSubpage
end

function CategoryHandler:shouldSkipBlacklistCheck()
	-- Check whether the category suppression arguments indicate we
	-- should skip the blacklist check.
	return self._nocat == false
		or self._categories == true
		or self._category2 == self._data.category2Yes
end

function CategoryHandler:matchesBlacklist()
	if self._usesCurrentTitle then
		return self._data.currentTitleMatchesBlacklist
	else
		mShared = mShared or require('Module:Category handler/shared')
		return mShared.matchesBlacklist(
			self.title.prefixedText,
			mw.loadData('Module:Category handler/blacklist')
		)
	end
end

function CategoryHandler:isSuppressed()
	-- Find if categories are suppressed by either the arguments or by
	-- matching the blacklist.
	return self:isSuppressedByArguments()
		or not self:shouldSkipBlacklistCheck() and self:matchesBlacklist()
end

function CategoryHandler:getNamespaceParameters()
	if self._usesCurrentTitle then
		return self._data.currentTitleNamespaceParameters
	else
		if not mappings then
			mShared = mShared or require('Module:Category handler/shared')
			mappings = mShared.getParamMappings(true) -- gets mappings with mw.loadData
		end
		return mShared.getNamespaceParameters(
			self.title,
			mappings
		)
	end
end

function CategoryHandler:namespaceParametersExist()
	-- Find whether any namespace parameters have been specified.
	-- We use the order "all" --&gt; namespace params --&gt; "other" as this is what
	-- the old template did.
	if self:parameter('all') then
		return true
	end
	if not mappings then
		mShared = mShared or require('Module:Category handler/shared')
		mappings = mShared.getParamMappings(true) -- gets mappings with mw.loadData
	end
	for ns, params in pairs(mappings) do
		for i, param in ipairs(params) do
			if self._args[param] then
				return true
			end
		end
	end
	if self:parameter('other') then
		return true
	end
	return false
end

function CategoryHandler:getCategories()
	local params = self:getNamespaceParameters()
	local nsCategory
	for i, param in ipairs(params) do
		local value = self._args[param]
		if value ~= nil then
			nsCategory = value
			break
		end
	end
	if nsCategory ~= nil or self:namespaceParametersExist() then
		-- Namespace parameters exist - advanced usage.
		if nsCategory == nil then
			nsCategory = self:parameter('other')
		end
		local ret = {self:parameter('all')}
		local numParam = tonumber(nsCategory)
		if numParam and numParam &gt;= 1 and math.floor(numParam) == numParam then
			-- nsCategory is an integer
			ret[#ret + 1] = self._args[numParam]
		else
			ret[#ret + 1] = nsCategory
		end
		if #ret &lt; 1 then
			return nil
		else
			return table.concat(ret)
		end
	elseif self._data.defaultNamespaces[self.title.namespace] then
		-- Namespace parameters don't exist, simple usage.
		return self._args[1]
	end
	return nil
end

--------------------------------------------------------------------------------
-- Exports
--------------------------------------------------------------------------------

local p = {}

function p._exportClasses()
	-- Used for testing purposes.
	return {
		CategoryHandler = CategoryHandler
	}
end

function p._main(args, data)
	data = data or mw.loadData('Module:Category handler/data')
	local handler = CategoryHandler.new(data, args)
	if handler:isSuppressed() then
		return nil
	end
	return handler:getCategories()
end

function p.main(frame, data)
	data = data or mw.loadData('Module:Category handler/data')
	local args = require('Module:Arguments').getArgs(frame, {
		wrappers = data.wrappers,
		valueFunc = function (k, v)
			v = trimWhitespace(v)
			if type(k) == 'number' then
				if v ~= '' then
					return v
				else
					return nil
				end
			else
				return v
			end
		end
	})
	return p._main(args, data)
end

return p</text>
            <sha1>letwavu3yvlayfzew66uuwixmwebq5b</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:Category handler/blacklist</title>
        <ns>828</ns>
        <id>655</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6927</id>
            <parentid>6926</parentid>
            <timestamp>2015-03-16T19:26:34Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="732">-- This module contains the blacklist used by [[Module:Category handler]].
-- Pages that match Lua patterns in this list will not be categorised unless
-- categorisation is explicitly requested.

return {
    '^Main Page$', -- don't categorise the main page.
 
    -- Don't categorise the following pages or their subpages.
    -- "%f[/\0]" matches if the next character is "/" or the end of the string.
    '^Wikipedia:Cascade%-protected items%f[/\0]',
    '^User:UBX%f[/\0]', -- The userbox "template" space.
    '^User talk:UBX%f[/\0]',
 
    -- Don't categorise subpages of these pages, but allow
    -- categorisation of the base page.
    '^Wikipedia:Template messages/.*$',
 
    '/[aA]rchive' -- Don't categorise archives.
}</text>
            <sha1>ne8sdldor304iu81gnqa05p401j3exc</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:Category handler/config</title>
        <ns>828</ns>
        <id>656</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6929</id>
            <parentid>6928</parentid>
            <timestamp>2015-03-16T19:26:34Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="5755">--------------------------------------------------------------------------------
--            [[Module:Category handler]] configuration data                  --
--       Language-specific parameter names and values can be set here.        --
--       For blacklist config, see [[Module:Category handler/blacklist]].     --
--------------------------------------------------------------------------------

local cfg = {} -- Don't edit this line.

--------------------------------------------------------------------------------
--                       Start configuration data                             --
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--                              Parameter names                               --
-- These configuration items specify custom parameter names.                  --
-- To add one extra name, you can use this format:                            --
--                                                                            --
-- foo = 'parameter name',                                                    --
--                                                                            --
-- To add multiple names, you can use this format:                            --
--                                                                            --
-- foo = {'parameter name 1', 'parameter name 2', 'parameter name 3'},        --
--------------------------------------------------------------------------------

cfg.parameters = {
	
	-- The nocat and categories parameter suppress
	-- categorisation. They are used with Module:Yesno, and work as follows:
	--
	-- cfg.nocat:
	-- Result of yesno()                        Effect
	-- true                                     Categorisation is suppressed
	-- false                                    Categorisation is allowed, and
	--                                          the blacklist check is skipped
	-- nil                                      Categorisation is allowed
	--
	-- cfg.categories:
	-- Result of yesno()                        Effect
	-- true                                     Categorisation is allowed, and
	--                                          the blacklist check is skipped
	-- false                                    Categorisation is suppressed
	-- nil                                      Categorisation is allowed
	nocat = 'nocat',
	categories = 'categories',
	
	-- The parameter name for the legacy "category2" parameter. This skips the
	-- blacklist if set to the cfg.category2Yes value, and suppresses
	-- categorisation if present but equal to anything other than
	-- cfg.category2Yes or cfg.category2Negative.
	category2 = 'category2',
	
	-- cfg.subpage is the parameter name to specify how to behave on subpages.
	subpage = 'subpage',
	
	-- The parameter for data to return in all namespaces.
	all = 'all',
	
	-- The parameter name for data to return if no data is specified for the
	-- namespace that is detected.
	other = 'other',
	
	-- The parameter name used to specify a page other than the current page;
	-- used for testing and demonstration.
	demopage = 'page',
}

--------------------------------------------------------------------------------
--                              Parameter values                              --
-- These are set values that can be used with certain parameters. Only one    --
-- value can be specified, like this:                                         --
--                                                                            --
-- cfg.foo = 'value name'                                                     --                                               --
--------------------------------------------------------------------------------

-- The following settings are used with the cfg.category2 parameter. Setting
-- cfg.category2 to cfg.category2Yes skips the blacklist, and if cfg.category2
-- is present but equal to anything other than cfg.category2Yes or
-- cfg.category2Negative then it supresses cateogrisation.
cfg.category2Yes = 'yes'
cfg.category2Negative = '¬'

-- The following settings are used with the cfg.subpage parameter.
-- cfg.subpageNo is the value to specify to not categorise on subpages;
-- cfg.subpageOnly is the value to specify to only categorise on subpages.
cfg.subpageNo = 'no'
cfg.subpageOnly = 'only'

--------------------------------------------------------------------------------
--                           Default namespaces                               --
-- This is a table of namespaces to categorise by default. The keys are the   --
-- namespace numbers.                                                         --
--------------------------------------------------------------------------------

cfg.defaultNamespaces = {
	[  0] = true, -- main
	[  6] = true, -- file
	[ 12] = true, -- help
	[ 14] = true, -- category
	[100] = true, -- portal
	[108] = true, -- book
}

--------------------------------------------------------------------------------
--                                Wrappers                                    --
-- This is a wrapper template or a list of wrapper templates to be passed to  --
-- [[Module:Arguments]].                                                      --
--------------------------------------------------------------------------------

cfg.wrappers = 'Template:Category handler'

--------------------------------------------------------------------------------
--                           End configuration data                           --
--------------------------------------------------------------------------------

return cfg -- Don't edit this line.</text>
            <sha1>6ga9hbq2pdwalsvx68i53dmbr421rq5</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:Category handler/data</title>
        <ns>828</ns>
        <id>657</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6931</id>
            <parentid>6930</parentid>
            <timestamp>2015-03-16T19:26:34Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="631">-- This module assembles data to be passed to [[Module:Category handler]] using
-- mw.loadData. This includes the configuration data and whether the current
-- page matches the title blacklist.

local data = require('Module:Category handler/config')
local mShared = require('Module:Category handler/shared')
local blacklist = require('Module:Category handler/blacklist')
local title = mw.title.getCurrentTitle()

data.currentTitleMatchesBlacklist = mShared.matchesBlacklist(
	title.prefixedText,
	blacklist
)

data.currentTitleNamespaceParameters = mShared.getNamespaceParameters(
	title,
	mShared.getParamMappings()
)

return data</text>
            <sha1>k26mwixuaeijisfddb0sxkg82iux8v4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:Category handler/shared</title>
        <ns>828</ns>
        <id>658</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6933</id>
            <parentid>6932</parentid>
            <timestamp>2015-03-16T19:26:34Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="888">-- This module contains shared functions used by [[Module:Category handler]]
-- and its submodules.

local p = {}

function p.matchesBlacklist(page, blacklist)
	for i, pattern in ipairs(blacklist) do
		local match = mw.ustring.match(page, pattern)
		if match then
			return true
		end
	end
	return false
end

function p.getParamMappings(useLoadData)
	local dataPage = 'Module:Namespace detect/data'
	if useLoadData then
		return mw.loadData(dataPage).mappings
	else
		return require(dataPage).mappings
	end
end

function p.getNamespaceParameters(titleObj, mappings)
	-- We don't use title.nsText for the namespace name because it adds
	-- underscores.
	local mappingsKey
	if titleObj.isTalkPage then
		mappingsKey = 'talk'
	else
		mappingsKey = mw.site.namespaces[titleObj.namespace].name
	end
	mappingsKey = mw.ustring.lower(mappingsKey)
	return mappings[mappingsKey] or {}
end

return p</text>
            <sha1>omlsnhudxz6juptvtxz7ns97jutbzc5</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:Documentation</title>
        <ns>828</ns>
        <id>659</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7453</id>
            <parentid>6935</parentid>
            <timestamp>2015-04-06T14:56:06Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="36223">-- This module implements {{documentation}}.

-- Get required modules.
local getArgs = require('Module:Arguments').getArgs
local htmlBuilder = require('Module:HtmlBuilder')
local messageBox = require('Module:Message box')

-- Get the config table.
local cfg = mw.loadData('Module:Documentation/config')

local p = {}

-- Often-used functions.
local ugsub = mw.ustring.gsub

----------------------------------------------------------------------------
-- Helper functions
--
-- These are defined as local functions, but are made available in the p
-- table for testing purposes.
----------------------------------------------------------------------------

local function message(cfgKey, valArray, expectType)
	--[[
	-- Gets a message from the cfg table and formats it if appropriate.
	-- The function raises an error if the value from the cfg table is not
	-- of the type expectType. The default type for expectType is 'string'.
	-- If the table valArray is present, strings such as $1, $2 etc. in the
	-- message are substituted with values from the table keys [1], [2] etc.
	-- For example, if the message "foo-message" had the value 'Foo $2 bar $1.',
	-- message('foo-message', {'baz', 'qux'}) would return "Foo qux bar baz."
	--]]
	local msg = cfg[cfgKey]
	expectType = expectType or 'string'
	if type(msg) ~= expectType then
		error('message: type error in message cfg.' .. cfgKey .. ' (' .. expectType .. ' expected, got ' .. type(msg) .. ')', 2)
	end
	if not valArray then
		return msg
	end

	local function getMessageVal(match)
		match = tonumber(match)
		return valArray[match] or error('message: no value found for key $' .. match .. ' in message cfg.' .. cfgKey, 4)
	end

	local ret = ugsub(msg, '$([1-9][0-9]*)', getMessageVal)
	return ret
end

p.message = message

local function makeWikilink(page, display)
	if display then
		return mw.ustring.format('[[%s|%s]]', page, display)
	else
		return mw.ustring.format('[[%s]]', page)
	end
end

p.makeWikilink = makeWikilink

local function makeCategoryLink(cat, sort)
	local catns = mw.site.namespaces[14].name
	return makeWikilink(catns .. ':' .. cat, sort)
end

p.makeCategoryLink = makeCategoryLink

local function makeUrlLink(url, display)
	return mw.ustring.format('[%s %s]', url, display)
end

p.makeUrlLink = makeUrlLink

local function makeToolbar(...)
	local ret = {}
	local lim = select('#', ...)
	if lim &lt; 1 then
		return nil
	end
	for i = 1, lim do
		ret[#ret + 1] = select(i, ...)
	end
	return '&lt;small style="font-style: normal;"&gt;(' .. table.concat(ret, ' &amp;#124; ') .. ')&lt;/small&gt;'
end	

p.makeToolbar = makeToolbar

----------------------------------------------------------------------------
-- Argument processing
----------------------------------------------------------------------------

local function makeInvokeFunc(funcName)
	return function (frame)
		local args = getArgs(frame, {
			valueFunc = function (key, value)
				if type(value) == 'string' then
					value = value:match('^%s*(.-)%s*$') -- Remove whitespace.
					if key == 'heading' or value ~= '' then
						return value
					else
						return nil
					end
				else
					return value
				end
			end
		})
		return p[funcName](args)
	end
end

----------------------------------------------------------------------------
-- Main function
----------------------------------------------------------------------------

p.main = makeInvokeFunc('_main')

function p._main(args)
	--[[
	-- This function defines logic flow for the module.
	-- @args - table of arguments passed by the user
	-- 
	-- Messages:
	-- 'main-div-id' --&gt; 'template-documentation'
	-- 'main-div-classes' --&gt; 'template-documentation iezoomfix'
	--]]
	local env = p.getEnvironment(args)
	local root = htmlBuilder.create()
	root
		.wikitext(p.protectionTemplate(env))
		.wikitext(p.sandboxNotice(args, env))
		 -- This div tag is from {{documentation/start box}}, but moving it here
		 -- so that we don't have to worry about unclosed tags.
		.tag('div')
			.attr('id', message('main-div-id'))
			.addClass(message('main-div-classes'))
			.newline()
			.wikitext(p._startBox(args, env))
			.wikitext(p._content(args, env))
			.tag('div')
				.css('clear', 'both') -- So right or left floating items don't stick out of the doc box.
				.newline()
				.done()
			.done()
		.wikitext(p._endBox(args, env))
		.wikitext(p.addTrackingCategories(env))
	return tostring(root)
end

----------------------------------------------------------------------------
-- Environment settings
----------------------------------------------------------------------------

function p.getEnvironment(args)
	--[[
	-- Returns a table with information about the environment, including title objects and other namespace- or
	-- path-related data.
	-- @args - table of arguments passed by the user
	--
	-- Title objects include:
	-- env.title - the page we are making documentation for (usually the current title)
	-- env.templateTitle - the template (or module, file, etc.)
	-- env.docTitle - the /doc subpage.
	-- env.sandboxTitle - the /sandbox subpage.
	-- env.testcasesTitle - the /testcases subpage.
	-- env.printTitle - the print version of the template, located at the /Print subpage.
	--
	-- Data includes:
	-- env.protectionLevels - the protection levels table of the title object.
	-- env.subjectSpace - the number of the title's subject namespace.
	-- env.docSpace - the number of the namespace the title puts its documentation in.
	-- env.docpageBase - the text of the base page of the /doc, /sandbox and /testcases pages, with namespace.
	-- env.compareUrl - URL of the Special:ComparePages page comparing the sandbox with the template.
	-- 
	-- All table lookups are passed through pcall so that errors are caught. If an error occurs, the value
	-- returned will be nil.
	--]]
	
	local env, envFuncs = {}, {}

	-- Set up the metatable. If triggered we call the corresponding function in the envFuncs table. The value
	-- returned by that function is memoized in the env table so that we don't call any of the functions
	-- more than once. (Nils won't be memoized.)
	setmetatable(env, {
		__index = function (t, key)
			local envFunc = envFuncs[key]
			if envFunc then
				local success, val = pcall(envFunc)
				if success then
					env[key] = val -- Memoise the value.
					return val
				end
			end
			return nil
		end
	})	

	function envFuncs.title()
		-- The title object for the current page, or a test page passed with args.page.
		local title
		local titleArg = args.page
		if titleArg then
			title = mw.title.new(titleArg)
		else
			title = mw.title.getCurrentTitle()
		end
		return title
	end

	function envFuncs.templateTitle()
		--[[
		-- The template (or module, etc.) title object.
		-- Messages:
		-- 'sandbox-subpage' --&gt; 'sandbox'
		-- 'testcases-subpage' --&gt; 'testcases'
		--]]
		local subjectSpace = env.subjectSpace
		local title = env.title
		local subpage = title.subpageText
		if subpage == message('sandbox-subpage') or subpage == message('testcases-subpage') then
			return mw.title.makeTitle(subjectSpace, title.baseText)
		else
			return mw.title.makeTitle(subjectSpace, title.text)
		end
	end

	function envFuncs.docTitle()
		--[[
		-- Title object of the /doc subpage.
		-- Messages:
		-- 'doc-subpage' --&gt; 'doc'
		--]]
		local title = env.title
		local docname = args[1] -- User-specified doc page.
		local docpage
		if docname then
			docpage = docname
		else
			docpage = env.docpageBase .. '/' .. message('doc-subpage')
		end
		return mw.title.new(docpage)
	end
	
	function envFuncs.sandboxTitle()
		--[[
		-- Title object for the /sandbox subpage.
		-- Messages:
		-- 'sandbox-subpage' --&gt; 'sandbox'
		--]]
		return mw.title.new(env.docpageBase .. '/' .. message('sandbox-subpage'))
	end
	
	function envFuncs.testcasesTitle()
		--[[
		-- Title object for the /testcases subpage.
		-- Messages:
		-- 'testcases-subpage' --&gt; 'testcases'
		--]]
		return mw.title.new(env.docpageBase .. '/' .. message('testcases-subpage'))
	end
	
	function envFuncs.printTitle()
		--[[
		-- Title object for the /Print subpage.
		-- Messages:
		-- 'print-subpage' --&gt; 'Print'
		--]]
		return env.templateTitle:subPageTitle(message('print-subpage'))
	end

	function envFuncs.protectionLevels()
		-- The protection levels table of the title object.
		return env.title.protectionLevels
	end

	function envFuncs.subjectSpace()
		-- The subject namespace number.
		return mw.site.namespaces[env.title.namespace].subject.id
	end

	function envFuncs.docSpace()
		-- The documentation namespace number. For most namespaces this is the same as the
		-- subject namespace. However, pages in the Article, File, MediaWiki or Category
		-- namespaces must have their /doc, /sandbox and /testcases pages in talk space.
		local subjectSpace = env.subjectSpace
		if subjectSpace == 0 or subjectSpace == 6 or subjectSpace == 8 or subjectSpace == 14 then
			return subjectSpace + 1
		else
			return subjectSpace
		end
	end

	function envFuncs.docpageBase()
		-- The base page of the /doc, /sandbox, and /testcases subpages.
		-- For some namespaces this is the talk page, rather than the template page.
		local templateTitle = env.templateTitle
		local docSpace = env.docSpace
		local docSpaceText = mw.site.namespaces[docSpace].name
		-- Assemble the link. docSpace is never the main namespace, so we can hardcode the colon.
		return docSpaceText .. ':' .. templateTitle.text
	end
	
	function envFuncs.compareUrl()
		-- Diff link between the sandbox and the main template using [[Special:ComparePages]].
		local templateTitle = env.templateTitle
		local sandboxTitle = env.sandboxTitle
		if templateTitle.exists and sandboxTitle.exists then
			local compareUrl = mw.uri.fullUrl(
				'Special:ComparePages',
				{page1 = templateTitle.prefixedText, page2 = sandboxTitle.prefixedText}
			)
			return tostring(compareUrl)
		else
			return nil
		end
	end		

	return env
end	

----------------------------------------------------------------------------
-- Auxiliary templates
----------------------------------------------------------------------------

function p.sandboxNotice(args, env)
	--[=[
	-- Generates a sandbox notice for display above sandbox pages.
	-- @args - a table of arguments passed by the user
	-- @env - environment table containing title objects, etc., generated with p.getEnvironment
	-- 
	-- Messages:
	-- 'sandbox-notice-image' --&gt; '[[Image:Sandbox.svg|50px|alt=|link=]]'
	-- 'sandbox-notice-blurb' --&gt; 'This is the $1 for $2.'
	-- 'sandbox-notice-diff-blurb' --&gt; 'This is the $1 for $2 ($3).'
	-- 'sandbox-notice-pagetype-template' --&gt; '[[Wikipedia:Template test cases|template sandbox]] page'
	-- 'sandbox-notice-pagetype-module' --&gt; '[[Wikipedia:Template test cases|module sandbox]] page'
	-- 'sandbox-notice-pagetype-other' --&gt; 'sandbox page'
	-- 'sandbox-notice-compare-link-display' --&gt; 'diff'
	-- 'sandbox-notice-testcases-blurb' --&gt; 'See also the companion subpage for $1.'
	-- 'sandbox-notice-testcases-link-display' --&gt; 'test cases'
	-- 'sandbox-category' --&gt; 'Template sandboxes'
	--]=]
	local title = env.title
	local sandboxTitle = env.sandboxTitle
	local templateTitle = env.templateTitle
	local subjectSpace = env.subjectSpace
	if not (subjectSpace and title and sandboxTitle and templateTitle and mw.title.equals(title, sandboxTitle)) then
		return nil
	end
	-- Build the table of arguments to pass to {{ombox}}. We need just two fields, "image" and "text".
	local omargs = {}
	omargs.image = message('sandbox-notice-image')
	-- Get the text. We start with the opening blurb, which is something like
	-- "This is the template sandbox for [[Template:Foo]] (diff)."
	local text = ''
	local frame = mw.getCurrentFrame()
	local isPreviewing = frame:preprocess('{{REVISIONID}}') == '' -- True if the page is being previewed.
	local pagetype
	if subjectSpace == 10 then
		pagetype = message('sandbox-notice-pagetype-template')
	elseif subjectSpace == 828 then
		pagetype = message('sandbox-notice-pagetype-module')
	else
		pagetype = message('sandbox-notice-pagetype-other')
	end
	local templateLink = makeWikilink(templateTitle.prefixedText)
	local compareUrl = env.compareUrl
	if isPreviewing or not compareUrl then
		text = text .. message('sandbox-notice-blurb', {pagetype, templateLink})
	else
		local compareDisplay = message('sandbox-notice-compare-link-display')
		local compareLink = makeUrlLink(compareUrl, compareDisplay)
		text = text .. message('sandbox-notice-diff-blurb', {pagetype, templateLink, compareLink})
	end
	-- Get the test cases page blurb if the page exists. This is something like
	-- "See also the companion subpage for [[Template:Foo/testcases|test cases]]."
	local testcasesTitle = env.testcasesTitle
	if testcasesTitle and testcasesTitle.exists then
		if testcasesTitle.namespace == mw.site.namespaces.Module.id then
			local testcasesLinkDisplay = message('sandbox-notice-testcases-link-display')
			local testcasesRunLinkDisplay = message('sandbox-notice-testcases-run-link-display')
			local testcasesLink = makeWikilink(testcasesTitle.prefixedText, testcasesLinkDisplay)
			local testcasesRunLink = makeWikilink(testcasesTitle.talkPageTitle.prefixedText, testcasesRunLinkDisplay)
			text = text .. '&lt;br /&gt;' .. message('sandbox-notice-testcases-run-blurb', {testcasesLink, testcasesRunLink})
		else
			local testcasesLinkDisplay = message('sandbox-notice-testcases-link-display')
			local testcasesLink = makeWikilink(testcasesTitle.prefixedText, testcasesLinkDisplay)
			text = text .. '&lt;br /&gt;' .. message('sandbox-notice-testcases-blurb', {testcasesLink})
		end
	end
	-- Add the sandbox to the sandbox category.
	text = text .. makeCategoryLink(message('sandbox-category'))
	omargs.text = text
	local ret = '&lt;div style="clear: both;"&gt;&lt;/div&gt;'
	ret = ret .. messageBox.main('ombox', omargs)
	return ret
end

function p.protectionTemplate(env)
	-- Generates the padlock icon in the top right.
	-- @env - environment table containing title objects, etc., generated with p.getEnvironment
	-- Messages:
	-- 'protection-template' --&gt; 'pp-template'
	-- 'protection-template-args' --&gt; {docusage = 'yes'}
	local title = env.title
	local protectionLevels
	local protectionTemplate = message('protection-template')
	local namespace = title.namespace
	if not (protectionTemplate and (namespace == 10 or namespace == 828)) then
		-- Don't display the protection template if we are not in the template or module namespaces.
		return nil
	end
	protectionLevels = env.protectionLevels
	if not protectionLevels then
		return nil
	end
	local editLevels = protectionLevels.edit
	local moveLevels = protectionLevels.move
	if moveLevels and moveLevels[1] == 'sysop' or editLevels and editLevels[1] then
		-- The page is full-move protected, or full, template, or semi-protected.
		local frame = mw.getCurrentFrame()
		return frame:expandTemplate{title = protectionTemplate, args = message('protection-template-args', nil, 'table')}
	else
		return nil
	end
end

----------------------------------------------------------------------------
-- Start box
----------------------------------------------------------------------------

p.startBox = makeInvokeFunc('_startBox')

function p._startBox(args, env)
	--[[
	-- This function generates the start box.
	-- @args - a table of arguments passed by the user
	-- @env - environment table containing title objects, etc., generated with p.getEnvironment
	-- 
	-- The actual work is done by p.makeStartBoxLinksData and p.renderStartBoxLinks which make
	-- the [view] [edit] [history] [purge] links, and by p.makeStartBoxData and p.renderStartBox
	-- which generate the box HTML.
	--]]
	env = env or p.getEnvironment(args)
	local links
	local content = args.content
	if not content then
		-- No need to include the links if the documentation is on the template page itself.
		local linksData = p.makeStartBoxLinksData(args, env)
		if linksData then
			links = p.renderStartBoxLinks(linksData)
		end
	end
	-- Generate the start box html.
	local data = p.makeStartBoxData(args, env, links)
	if data then
		return p.renderStartBox(data)
	else
		-- User specified no heading.
		return nil
	end
end

function p.makeStartBoxLinksData(args, env)
	--[[
	-- Does initial processing of data to make the [view] [edit] [history] [purge] links.
	-- @args - a table of arguments passed by the user
	-- @env - environment table containing title objects, etc., generated with p.getEnvironment
	-- 
	-- Messages:
	-- 'view-link-display' --&gt; 'view'
	-- 'edit-link-display' --&gt; 'edit'
	-- 'history-link-display' --&gt; 'history'
	-- 'purge-link-display' --&gt; 'purge'
	-- 'file-docpage-preload' --&gt; 'Template:Documentation/preload-filespace'
	-- 'module-preload' --&gt; 'Template:Documentation/preload-module-doc'
	-- 'docpage-preload' --&gt; 'Template:Documentation/preload'
	-- 'create-link-display' --&gt; 'create'
	--]]
	local subjectSpace = env.subjectSpace
	local title = env.title
	local docTitle = env.docTitle
	if not title or not docTitle then
		return nil
	end

	local data = {}
	data.title = title
	data.docTitle = docTitle
	-- View, display, edit, and purge links if /doc exists.
	data.viewLinkDisplay = message('view-link-display')
	data.editLinkDisplay = message('edit-link-display')
	data.historyLinkDisplay = message('history-link-display')
	data.purgeLinkDisplay = message('purge-link-display')
	-- Create link if /doc doesn't exist.
	local preload = args.preload
	if not preload then
		if subjectSpace == 6 then -- File namespace
			preload = message('file-docpage-preload')
		elseif subjectSpace == 828 then -- Module namespace
			preload = message('module-preload')
		else
			preload = message('docpage-preload')
		end
	end
	data.preload = preload
	data.createLinkDisplay = message('create-link-display')
	return data
end

function p.renderStartBoxLinks(data)
	--[[
	-- Generates the [view][edit][history][purge] or [create] links from the data table.
	-- @data - a table of data generated by p.makeStartBoxLinksData
	--]]
	
	local function escapeBrackets(s)
		-- Escapes square brackets with HTML entities.
		s = s:gsub('%[', '&amp;#91;') -- Replace square brackets with HTML entities.
		s = s:gsub('%]', '&amp;#93;')
		return s
	end

	local ret
	local docTitle = data.docTitle
	local title = data.title
	if docTitle.exists then
		local viewLink = makeWikilink(docTitle.prefixedText, data.viewLinkDisplay)
		local editLink = makeUrlLink(docTitle:fullUrl{action = 'edit'}, data.editLinkDisplay)
		local historyLink = makeUrlLink(docTitle:fullUrl{action = 'history'}, data.historyLinkDisplay)
		local purgeLink = makeUrlLink(title:fullUrl{action = 'purge'}, data.purgeLinkDisplay)
		ret = '[%s] [%s] [%s] [%s]'
		ret = escapeBrackets(ret)
		ret = mw.ustring.format(ret, viewLink, editLink, historyLink, purgeLink)
	else
		local createLink = makeUrlLink(docTitle:fullUrl{action = 'edit', preload = data.preload}, data.createLinkDisplay)
		ret = '[%s]'
		ret = escapeBrackets(ret)
		ret = mw.ustring.format(ret, createLink)
	end
	return ret
end

function p.makeStartBoxData(args, env, links)
	--[=[
	-- Does initial processing of data to pass to the start-box render function, p.renderStartBox.
	-- @args - a table of arguments passed by the user
	-- @env - environment table containing title objects, etc., generated with p.getEnvironment
	-- @links - a string containing the [view][edit][history][purge] links - could be nil if there's an error.
	--
	-- Messages:
	-- 'documentation-icon-wikitext' --&gt; '[[File:Template-info.png|50px|link=|alt=Documentation icon]]'
	-- 'template-namespace-heading' --&gt; 'Template documentation'
	-- 'module-namespace-heading' --&gt; 'Module documentation'
	-- 'file-namespace-heading' --&gt; 'Summary'
	-- 'other-namespaces-heading' --&gt; 'Documentation'
	-- 'start-box-linkclasses' --&gt; 'mw-editsection-like plainlinks'
	-- 'start-box-link-id' --&gt; 'doc_editlinks'
	-- 'testcases-create-link-display' --&gt; 'create'
	--]=]
	local subjectSpace = env.subjectSpace
	if not subjectSpace then
		-- Default to an "other namespaces" namespace, so that we get at least some output
		-- if an error occurs.
		subjectSpace = 2
	end
	local data = {}
	
	-- Heading
	local heading = args.heading -- Blank values are not removed.
	if heading == '' then
		-- Don't display the start box if the heading arg is defined but blank.
		return nil
	end
	if heading then
		data.heading = heading
	elseif subjectSpace == 10 then -- Template namespace
		data.heading = message('documentation-icon-wikitext') .. ' ' .. message('template-namespace-heading')
	elseif subjectSpace == 828 then -- Module namespace
		data.heading = message('documentation-icon-wikitext') .. ' ' .. message('module-namespace-heading')
	elseif subjectSpace == 6 then -- File namespace
		data.heading = message('file-namespace-heading')
	else
		data.heading = message('other-namespaces-heading')
	end
	
	-- Heading CSS
	local headingStyle = args['heading-style']
	if headingStyle then
		data.headingStyleText = headingStyle
	elseif subjectSpace == 10 then
		-- We are in the template or template talk namespaces.
		data.headingFontWeight = 'bold'
		data.headingFontSize = '125%'
	else
		data.headingFontSize = '150%'
	end
	
	-- Data for the [view][edit][history][purge] or [create] links.
	if links then
		data.linksClass = message('start-box-linkclasses')
		data.linksId = message('start-box-link-id')
		data.links = links
	end
	
	return data
end

function p.renderStartBox(data)
	-- Renders the start box html.
	-- @data - a table of data generated by p.makeStartBoxData.
	local sbox = htmlBuilder.create('div')
	sbox
		.css('padding-bottom', '3px')
		.css('border-bottom', '1px solid #aaa')
		.css('margin-bottom', '1ex')
		.newline()
		.tag('span')
			.cssText(data.headingStyleText)
			.css('font-weight', data.headingFontWeight)
			.css('font-size', data.headingFontSize)
			.wikitext(data.heading)
	local links = data.links
	if links then
		sbox.tag('span')
			.addClass(data.linksClass)
			.attr('id', data.linksId)
			.wikitext(links)
	end
	return tostring(sbox)
end

----------------------------------------------------------------------------
-- Documentation content
----------------------------------------------------------------------------

p.content = makeInvokeFunc('_content')

function p._content(args, env)
	-- Displays the documentation contents
	-- @args - a table of arguments passed by the user
	-- @env - environment table containing title objects, etc., generated with p.getEnvironment
	env = env or p.getEnvironment(args)
	local docTitle = env.docTitle
	local content = args.content
	if not content and docTitle and docTitle.exists then
		content = args._content or mw.getCurrentFrame():expandTemplate{title = docTitle.prefixedText}
	end
	-- The line breaks below are necessary so that "=== Headings ===" at the start and end
	-- of docs are interpreted correctly.
	return '\n' .. (content or '') .. '\n' 
end

p.contentTitle = makeInvokeFunc('_contentTitle')

function p._contentTitle(args, env)
	env = env or p.getEnvironment(args)
	local docTitle = env.docTitle
	if not args.content and docTitle and docTitle.exists then
		return docTitle.prefixedText
	else
		return ''
	end
end

----------------------------------------------------------------------------
-- End box
----------------------------------------------------------------------------

p.endBox = makeInvokeFunc('_endBox')

function p._endBox(args, env)
	--[=[
	-- This function generates the end box (also known as the link box).
	-- @args - a table of arguments passed by the user
	-- @env - environment table containing title objects, etc., generated with p.getEnvironment
	-- 
	-- Messages:
	-- 'fmbox-id' --&gt; 'documentation-meta-data'
	-- 'fmbox-style' --&gt; 'background-color: #ecfcf4'
	-- 'fmbox-textstyle' --&gt; 'font-style: italic'
	-- 
	-- The HTML is generated by the {{fmbox}} template, courtesy of [[Module:Message box]].
	--]=]
	
	-- Get environment data.
	env = env or p.getEnvironment(args)
	local subjectSpace = env.subjectSpace
	local docTitle = env.docTitle
	if not subjectSpace or not docTitle then
		return nil
	end
		
	-- Check whether we should output the end box at all. Add the end
	-- box by default if the documentation exists or if we are in the
	-- user, module or template namespaces.
	local linkBox = args['link box']
	if linkBox == 'off'
		or not (
			docTitle.exists
			or subjectSpace == 2
			or subjectSpace == 828
			or subjectSpace == 10
		)
	then
		return nil
	end

	-- Assemble the arguments for {{fmbox}}.
	local fmargs = {}
	fmargs.id = message('fmbox-id') -- Sets 'documentation-meta-data'
	fmargs.image = 'none'
	fmargs.style = message('fmbox-style') -- Sets 'background-color: #ecfcf4'
	fmargs.textstyle = message('fmbox-textstyle') -- 'font-style: italic;'

	-- Assemble the fmbox text field.
	local text = ''
	if linkBox then
		text = text .. linkBox
	else
		text = text .. (p.makeDocPageBlurb(args, env) or '') -- "This documentation is transcluded from [[Foo]]." 
		if subjectSpace == 2 or subjectSpace == 10 or subjectSpace == 828 then
			-- We are in the user, template or module namespaces.
			-- Add sandbox and testcases links.
			-- "Editors can experiment in this template's sandbox and testcases pages."
			text = text .. (p.makeExperimentBlurb(args, env) or '')
			text = text .. '&lt;br /&gt;'
			if not args.content and not args[1] then
				-- "Please add categories to the /doc subpage."
				-- Don't show this message with inline docs or with an explicitly specified doc page,
				-- as then it is unclear where to add the categories.
				text = text .. (p.makeCategoriesBlurb(args, env) or '')
			end
			text = text .. ' ' .. (p.makeSubpagesBlurb(args, env) or '') --"Subpages of this template"
			local printBlurb = p.makePrintBlurb(args, env) -- Two-line blurb about print versions of templates.
			if printBlurb then
				text = text .. '&lt;br /&gt;' .. printBlurb
			end
		end
	end
	fmargs.text = text

	return messageBox.main('fmbox', fmargs)
end

function p.makeDocPageBlurb(args, env)
	--[=[
	-- Makes the blurb "This documentation is transcluded from [[Template:Foo]] (edit, history)".
	-- @args - a table of arguments passed by the user
	-- @env - environment table containing title objects, etc., generated with p.getEnvironment
	-- 
	-- Messages:
	-- 'edit-link-display' --&gt; 'edit'
	-- 'history-link-display' --&gt; 'history'
	-- 'transcluded-from-blurb' --&gt; 
	-- 'The above [[Wikipedia:Template documentation|documentation]] 
	-- is [[Wikipedia:Transclusion|transcluded]] from $1.'
	-- 'module-preload' --&gt; 'Template:Documentation/preload-module-doc'
	-- 'create-link-display' --&gt; 'create'
	-- 'create-module-doc-blurb' --&gt;
	-- 'You might want to $1 a documentation page for this [[Wikipedia:Lua|Scribunto module]].'
	--]=]
	local docTitle = env.docTitle
	if not docTitle then
		return nil
	end
	local ret
	if docTitle.exists then
		-- /doc exists; link to it.
		local docLink = makeWikilink(docTitle.prefixedText)
		local editUrl = docTitle:fullUrl{action = 'edit'}
		local editDisplay = message('edit-link-display')
		local editLink = makeUrlLink(editUrl, editDisplay)
		local historyUrl = docTitle:fullUrl{action = 'history'}
		local historyDisplay = message('history-link-display')
		local historyLink = makeUrlLink(historyUrl, historyDisplay)
		ret = message('transcluded-from-blurb', {docLink})
			.. ' '
			.. makeToolbar(editLink, historyLink)
			.. '&lt;br /&gt;'
	elseif env.subjectSpace == 828 then
		-- /doc does not exist; ask to create it.
		local createUrl = docTitle:fullUrl{action = 'edit', preload = message('module-preload')}
		local createDisplay = message('create-link-display')
		local createLink = makeUrlLink(createUrl, createDisplay)
		ret = message('create-module-doc-blurb', {createLink})
			.. '&lt;br /&gt;'
	end
	return ret
end

function p.makeExperimentBlurb(args, env)
	--[[
	-- Renders the text "Editors can experiment in this template's sandbox (edit | diff) and testcases (edit) pages."
	-- @args - a table of arguments passed by the user
	-- @env - environment table containing title objects, etc., generated with p.getEnvironment
	-- 
	-- Messages:
	-- 'sandbox-link-display' --&gt; 'sandbox'
	-- 'sandbox-edit-link-display' --&gt; 'edit'
	-- 'compare-link-display' --&gt; 'diff'
	-- 'module-sandbox-preload' --&gt; 'Template:Documentation/preload-module-sandbox'
	-- 'template-sandbox-preload' --&gt; 'Template:Documentation/preload-sandbox'
	-- 'sandbox-create-link-display' --&gt; 'create'
	-- 'mirror-edit-summary' --&gt; 'Create sandbox version of $1'
	-- 'mirror-link-display' --&gt; 'mirror'
	-- 'sandbox-link-display' --&gt; 'sandbox'
	-- 'testcases-link-display' --&gt; 'testcases'
	-- 'testcases-edit-link-display'--&gt; 'edit'
	-- 'module-testcases-preload' --&gt; 'Template:Documentation/preload-module-testcases'
	-- 'template-sandbox-preload' --&gt; 'Template:Documentation/preload-sandbox'
	-- 'testcases-create-link-display' --&gt; 'create'
	-- 'testcases-link-display' --&gt; 'testcases'
	-- 'testcases-edit-link-display' --&gt; 'edit'
	-- 'module-testcases-preload' --&gt; 'Template:Documentation/preload-module-testcases'
	-- 'template-testcases-preload' --&gt; 'Template:Documentation/preload-testcases'
	-- 'experiment-blurb-module' --&gt; 'Editors can experiment in this module's $1 and $2 pages.'
	-- 'experiment-blurb-template' --&gt; 'Editors can experiment in this template's $1 and $2 pages.'
	--]]
	local subjectSpace = env.subjectSpace
	local templateTitle = env.templateTitle
	local sandboxTitle = env.sandboxTitle
	local testcasesTitle = env.testcasesTitle
	local templatePage = templateTitle.prefixedText
	if not subjectSpace or not templateTitle or not sandboxTitle or not testcasesTitle then
		return nil
	end
	-- Make links.
	local sandboxLinks, testcasesLinks
	if sandboxTitle.exists then
		local sandboxPage = sandboxTitle.prefixedText
		local sandboxDisplay = message('sandbox-link-display')
		local sandboxLink = makeWikilink(sandboxPage, sandboxDisplay)
		local sandboxEditUrl = sandboxTitle:fullUrl{action = 'edit'}
		local sandboxEditDisplay = message('sandbox-edit-link-display')
		local sandboxEditLink = makeUrlLink(sandboxEditUrl, sandboxEditDisplay)
		local compareUrl = env.compareUrl
		local compareLink
		if compareUrl then
			local compareDisplay = message('compare-link-display')
			compareLink = makeUrlLink(compareUrl, compareDisplay)
		end
		sandboxLinks = sandboxLink .. ' ' .. makeToolbar(sandboxEditLink, compareLink)
	else
		local sandboxPreload
		if subjectSpace == 828 then
			sandboxPreload = message('module-sandbox-preload')
		else
			sandboxPreload = message('template-sandbox-preload')
		end
		local sandboxCreateUrl = sandboxTitle:fullUrl{action = 'edit', preload = sandboxPreload}
		local sandboxCreateDisplay = message('sandbox-create-link-display')
		local sandboxCreateLink = makeUrlLink(sandboxCreateUrl, sandboxCreateDisplay)
		local mirrorSummary = message('mirror-edit-summary', {makeWikilink(templatePage)})
		local mirrorUrl = sandboxTitle:fullUrl{action = 'edit', preload = templatePage, summary = mirrorSummary}
		local mirrorDisplay = message('mirror-link-display')
		local mirrorLink = makeUrlLink(mirrorUrl, mirrorDisplay)
		sandboxLinks = message('sandbox-link-display') .. ' ' .. makeToolbar(sandboxCreateLink, mirrorLink)
	end
	if testcasesTitle.exists then
		local testcasesPage = testcasesTitle.prefixedText
		local testcasesDisplay = message('testcases-link-display')
		local testcasesLink = makeWikilink(testcasesPage, testcasesDisplay)
		local testcasesEditUrl = testcasesTitle:fullUrl{action = 'edit'}
		local testcasesEditDisplay = message('testcases-edit-link-display')
		local testcasesEditLink = makeUrlLink(testcasesEditUrl, testcasesEditDisplay)
		testcasesLinks = testcasesLink .. ' ' .. makeToolbar(testcasesEditLink)
	else
		local testcasesPreload
		if subjectSpace == 828 then
			testcasesPreload = message('module-testcases-preload')
		else
			testcasesPreload = message('template-testcases-preload')
		end
		local testcasesCreateUrl = testcasesTitle:fullUrl{action = 'edit', preload = testcasesPreload}
		local testcasesCreateDisplay = message('testcases-create-link-display')
		local testcasesCreateLink = makeUrlLink(testcasesCreateUrl, testcasesCreateDisplay)
		testcasesLinks = message('testcases-link-display') .. ' ' .. makeToolbar(testcasesCreateLink)
	end
	local messageName
	if subjectSpace == 828 then
		messageName = 'experiment-blurb-module'
	else
		messageName = 'experiment-blurb-template'
	end
	return message(messageName, {sandboxLinks, testcasesLinks})
end

function p.makeCategoriesBlurb(args, env)
	--[[
	-- Generates the text "Please add categories to the /doc subpage."
	-- @args - a table of arguments passed by the user
	-- @env - environment table containing title objects, etc., generated with p.getEnvironment
	-- Messages:
	-- 'doc-link-display' --&gt; '/doc'
	-- 'add-categories-blurb' --&gt; 'Please add categories to the $1 subpage.'
	--]]
	local docTitle = env.docTitle
	if not docTitle then
		return nil
	end
	local docPathLink = makeWikilink(docTitle.prefixedText, message('doc-link-display'))
	return message('add-categories-blurb', {docPathLink})
end

function p.makeSubpagesBlurb(args, env)
	--[[
	-- Generates the "Subpages of this template" link.
	-- @args - a table of arguments passed by the user
	-- @env - environment table containing title objects, etc., generated with p.getEnvironment
	
	-- Messages:
	-- 'template-pagetype' --&gt; 'template'
	-- 'module-pagetype' --&gt; 'module'
	-- 'default-pagetype' --&gt; 'page'
	-- 'subpages-link-display' --&gt; 'Subpages of this $1'
	--]]
	local subjectSpace = env.subjectSpace
	local templateTitle = env.templateTitle
	if not subjectSpace or not templateTitle then
		return nil
	end
	local pagetype
	if subjectSpace == 10 then
		pagetype = message('template-pagetype')
	elseif subjectSpace == 828 then
		pagetype = message('module-pagetype')
	else
		pagetype = message('default-pagetype')
	end
	local subpagesLink = makeWikilink(
		'Special:PrefixIndex/' .. templateTitle.prefixedText .. '/',
		message('subpages-link-display', {pagetype})
	)
	return message('subpages-blurb', {subpagesLink})
end

function p.makePrintBlurb(args, env)
	--[=[
	-- Generates the blurb displayed when there is a print version of the template available.
	-- @args - a table of arguments passed by the user
	-- @env - environment table containing title objects, etc., generated with p.getEnvironment
	--
	-- Messages:
	-- 'print-link-display' --&gt; '/Print'
	-- 'print-blurb' --&gt; 'A [[Help:Books/for experts#Improving the book layout|print version]]'
	--		.. ' of this template exists at $1.'
	--		.. ' If you make a change to this template, please update the print version as well.'
	-- 'display-print-category' --&gt; true
	-- 'print-category' --&gt; 'Templates with print versions'
	--]=]
	local printTitle = env.printTitle
	if not printTitle then
		return nil
	end
	local ret
	if printTitle.exists then
		local printLink = makeWikilink(printTitle.prefixedText, message('print-link-display'))
		ret = message('print-blurb', {printLink})
		local displayPrintCategory = message('display-print-category', nil, 'boolean')
		if displayPrintCategory then
			ret = ret .. makeCategoryLink(message('print-category'))
		end
	end
	return ret
end

----------------------------------------------------------------------------
-- Tracking categories
----------------------------------------------------------------------------

function p.addTrackingCategories(env)
	--[[
	-- Check if {{documentation}} is transcluded on a /doc or /testcases page.
	-- @env - environment table containing title objects, etc., generated with p.getEnvironment
	
	-- Messages:
	-- 'display-strange-usage-category' --&gt; true
	-- 'doc-subpage' --&gt; 'doc'
	-- 'testcases-subpage' --&gt; 'testcases'
	-- 'strange-usage-category' --&gt; 'Wikipedia pages with strange ((documentation)) usage'
	-- 
	-- /testcases pages in the module namespace are not categorised, as they may have
	-- {{documentation}} transcluded automatically.
	--]]
	local title = env.title
	local subjectSpace = env.subjectSpace
	if not title or not subjectSpace then
		return nil
	end
	local subpage = title.subpageText
	local ret = ''
	if message('display-strange-usage-category', nil, 'boolean')
		and (
			subpage == message('doc-subpage')
			or subjectSpace ~= 828 and subpage == message('testcases-subpage')
		)
	then
		ret = ret .. makeCategoryLink(message('strange-usage-category'))
	end
	return ret
end

return p</text>
            <sha1>ojgwp8oqglllydwahyd1zzyd5liaq70</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:Documentation/config</title>
        <ns>828</ns>
        <id>660</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7456</id>
            <parentid>6937</parentid>
            <timestamp>2015-04-06T15:09:40Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="18659">----------------------------------------------------------------------------------------------------
--
--                               Configuration for Module:Documentation
--
-- Here you can set the values of the parameters and messages used in Module:Documentation to
-- localise it to your wiki and your language. Unless specified otherwise, values given here
-- should be string values.
----------------------------------------------------------------------------------------------------

local cfg = {} -- Do not edit this line.

----------------------------------------------------------------------------------------------------
-- Protection template configuration
----------------------------------------------------------------------------------------------------

-- cfg['protection-template']
-- The name of the template that displays the protection icon (a padlock on enwiki).
cfg['protection-template'] = 'pp-template'

--[[
-- cfg['protection-template-args']
-- Any arguments to send to the protection template. This should be a Lua table.
-- For example, if the protection template is "pp-template", and the wikitext template invocation
-- looks like "{{pp-template|docusage=yes}}", then this table should look like "{docusage = 'yes'}".
--]]
cfg['protection-template-args'] = {docusage = 'yes'}

--[[
----------------------------------------------------------------------------------------------------
-- Sandbox notice configuration
--
-- On sandbox pages the module can display a template notifying users that the current page is a
-- sandbox, and the location of test cases pages, etc. The module decides whether the page is a
-- sandbox or not based on the value of cfg['sandbox-subpage']. The following settings configure the
-- messages that the notices contains.
----------------------------------------------------------------------------------------------------
--]]

-- cfg['sandbox-notice-image']
-- The image displayed in the sandbox notice.
cfg['sandbox-notice-image'] = '[[Image:Sandbox.svg|50px|alt=|link=]]'

--[[
-- cfg['sandbox-notice-pagetype-template']
-- cfg['sandbox-notice-pagetype-module']
-- cfg['sandbox-notice-pagetype-other']
-- The page type of the sandbox page. The message that is displayed depends on the current subject
-- namespace. This message is used in either cfg['sandbox-notice-blurb'] or
-- cfg['sandbox-notice-diff-blurb'].
--]]
cfg['sandbox-notice-pagetype-template'] = '[[Wikipedia:Template test cases|template sandbox]] page'
cfg['sandbox-notice-pagetype-module'] = '[[Wikipedia:Template test cases|module sandbox]] page'
cfg['sandbox-notice-pagetype-other'] = 'sandbox page'

--[[
-- cfg['sandbox-notice-blurb']
-- cfg['sandbox-notice-diff-blurb']
-- cfg['sandbox-notice-diff-display']
-- Either cfg['sandbox-notice-blurb'] or cfg['sandbox-notice-diff-blurb'] is the opening sentence
-- of the sandbox notice. The latter has a diff link, but the former does not. $1 is the page
-- type, which is either cfg['sandbox-notice-pagetype-template'],
-- cfg['sandbox-notice-pagetype-module'] or cfg['sandbox-notice-pagetype-other'] depending what
-- namespace we are in. $2 is a link to the main template page, and $3 is a diff link between
-- the sandbox and the main template. The display value of the diff link is set by 
-- cfg['sandbox-notice-compare-link-display'].
--]]
cfg['sandbox-notice-blurb'] = 'This is the $1 for $2.'
cfg['sandbox-notice-diff-blurb'] = 'This is the $1 for $2 ($3).'
cfg['sandbox-notice-compare-link-display'] = 'diff'

--[[
-- cfg['sandbox-notice-testcases-blurb']
-- cfg['sandbox-notice-testcases-link-display']
-- cfg['sandbox-notice-testcases-run-blurb']
-- cfg['sandbox-notice-testcases-run-link-display']
-- cfg['sandbox-notice-testcases-blurb'] is a sentence notifying the user that there is a test cases page
-- corresponding to this sandbox that they can edit. $1 is a link to the test cases page.
-- cfg['sandbox-notice-testcases-link-display'] is the display value for that link.
-- cfg['sandbox-notice-testcases-run-blurb'] is a sentence notifying the user that there is a test cases page
-- corresponding to this sandbox that they can edit, along with a link to run it. $1 is a link to the test
-- cases page, and $2 is a link to the page to run it.
-- cfg['sandbox-notice-testcases-run-link-display'] is the display value for the link to run the test
-- cases.
--]]
cfg['sandbox-notice-testcases-blurb'] = 'See also the companion subpage for $1.'
cfg['sandbox-notice-testcases-link-display'] = 'test cases'
cfg['sandbox-notice-testcases-run-blurb'] = 'See also the companion subpage for $1 ($2).'
cfg['sandbox-notice-testcases-run-link-display'] = 'run'

-- cfg['sandbox-category']
-- A category to add to all template sandboxes.
cfg['sandbox-category'] = 'Template sandboxes'

----------------------------------------------------------------------------------------------------
-- Start box configuration
----------------------------------------------------------------------------------------------------

-- cfg['documentation-icon-wikitext']
-- The wikitext for the icon shown at the top of the template.
cfg['documentation-icon-wikitext'] = '[[File:Template-info.png|50px|link=|alt=Documentation icon]]'

-- cfg['template-namespace-heading']
-- The heading shown in the template namespace.
cfg['template-namespace-heading'] = 'Template documentation'

-- cfg['module-namespace-heading']
-- The heading shown in the module namespace.
cfg['module-namespace-heading'] = 'Module documentation'

-- cfg['file-namespace-heading']
-- The heading shown in the file namespace.
cfg['file-namespace-heading'] = 'Summary'

-- cfg['other-namespaces-heading']
-- The heading shown in other namespaces.
cfg['other-namespaces-heading'] = 'Documentation'

-- cfg['view-link-display']
-- The text to display for "view" links.
cfg['view-link-display'] = 'view'

-- cfg['edit-link-display']
-- The text to display for "edit" links.
cfg['edit-link-display'] = 'edit'

-- cfg['history-link-display']
-- The text to display for "history" links.
cfg['history-link-display'] = 'history'

-- cfg['purge-link-display']
-- The text to display for "purge" links.
cfg['purge-link-display'] = 'purge'

-- cfg['create-link-display']
-- The text to display for "create" links.
cfg['create-link-display'] = 'create'

----------------------------------------------------------------------------------------------------
-- Link box (end box) configuration
----------------------------------------------------------------------------------------------------

-- cfg['transcluded-from-blurb']
-- Notice displayed when the docs are transcluded from another page. $1 is a wikilink to that page.
cfg['transcluded-from-blurb'] = 'The above [[Wikipedia:Template documentation|documentation]] is [[Wikipedia:Transclusion|transcluded]] from $1.'

--[[
-- cfg['create-module-doc-blurb']
-- Notice displayed in the module namespace when the documentation subpage does not exist.
-- $1 is a link to create the documentation page with the preload cfg['module-preload'] and the
-- display cfg['create-link-display'].
--]]
cfg['create-module-doc-blurb'] = 'You might want to $1 a documentation page for this [[Wikipedia:Lua|Scribunto module]].'

----------------------------------------------------------------------------------------------------
-- Experiment blurb configuration
----------------------------------------------------------------------------------------------------

--[[
-- cfg['experiment-blurb-template']
-- cfg['experiment-blurb-module']
-- The experiment blurb is the text inviting editors to experiment in sandbox and test cases pages.
-- It is only shown in the template and module namespaces. With the default English settings, it
-- might look like this:
--
-- Editors can experiment in this template's sandbox (edit | diff) and testcases (edit) pages.
--
-- In this example, "sandbox", "edit", "diff", "testcases", and "edit" would all be links.
--
-- There are two versions, cfg['experiment-blurb-template'] and cfg['experiment-blurb-module'], depending
-- on what namespace we are in.
-- 
-- Parameters:
--
-- $1 is a link to the sandbox page. If the sandbox exists, it is in the following format:
--
--     cfg['sandbox-link-display'] (cfg['sandbox-edit-link-display'] | cfg['compare-link-display'])
-- 
-- If the sandbox doesn't exist, it is in the format:
--
--     cfg['sandbox-link-display'] (cfg['sandbox-create-link-display'] | cfg['mirror-link-display'])
-- 
-- The link for cfg['sandbox-create-link-display'] link preloads the page with cfg['template-sandbox-preload']
-- or cfg['module-sandbox-preload'], depending on the current namespace. The link for cfg['mirror-link-display']
-- loads a default edit summary of cfg['mirror-edit-summary'].
--
-- $2 is a link to the test cases page. If the test cases page exists, it is in the following format:
--
--     cfg['testcases-link-display'] (cfg['testcases-edit-link-display'])
--
-- If the test cases page doesn't exist, it is in the format:
-- 
--     cfg['testcases-link-display'] (cfg['testcases-create-link-display'])
--
-- If the test cases page doesn't exist, the link for cfg['testcases-create-link-display'] preloads the
-- page with cfg['template-testcases-preload'] or cfg['module-testcases-preload'], depending on the current
-- namespace.
--]]
cfg['experiment-blurb-template'] = "Editors can experiment in this template's $1 and $2 pages."
cfg['experiment-blurb-module'] = "Editors can experiment in this module's $1 and $2 pages."

----------------------------------------------------------------------------------------------------
-- Sandbox link configuration
----------------------------------------------------------------------------------------------------

-- cfg['sandbox-subpage']
-- The name of the template subpage typically used for sandboxes.
cfg['sandbox-subpage'] = 'sandbox'

-- cfg['template-sandbox-preload']
-- Preload file for template sandbox pages.
cfg['template-sandbox-preload'] = 'Template:Documentation/preload-sandbox'

-- cfg['module-sandbox-preload']
-- Preload file for Lua module sandbox pages.
cfg['module-sandbox-preload'] = 'Template:Documentation/preload-module-sandbox'

-- cfg['sandbox-link-display']
-- The text to display for "sandbox" links.
cfg['sandbox-link-display'] = 'sandbox'

-- cfg['sandbox-edit-link-display']
-- The text to display for sandbox "edit" links.
cfg['sandbox-edit-link-display'] = 'edit'

-- cfg['sandbox-create-link-display']
-- The text to display for sandbox "create" links.
cfg['sandbox-create-link-display'] = 'create'

-- cfg['compare-link-display']
-- The text to display for "compare" links.
cfg['compare-link-display'] = 'diff'

-- cfg['mirror-edit-summary']
-- The default edit summary to use when a user clicks the "mirror" link. $1 is a wikilink to the
-- template page.
cfg['mirror-edit-summary'] = 'Create sandbox version of $1'

-- cfg['mirror-link-display']
-- The text to display for "mirror" links.
cfg['mirror-link-display'] = 'mirror'

----------------------------------------------------------------------------------------------------
-- Test cases link configuration
----------------------------------------------------------------------------------------------------

-- cfg['testcases-subpage']
-- The name of the template subpage typically used for test cases.
cfg['testcases-subpage'] = 'testcases'

-- cfg['template-testcases-preload']
-- Preload file for template test cases pages.
cfg['template-testcases-preload'] = 'Template:Documentation/preload-testcases'

-- cfg['module-testcases-preload']
-- Preload file for Lua module test cases pages.
cfg['module-testcases-preload'] = 'Template:Documentation/preload-module-testcases'

-- cfg['testcases-link-display']
-- The text to display for "testcases" links.
cfg['testcases-link-display'] = 'testcases'

-- cfg['testcases-edit-link-display']
-- The text to display for test cases "edit" links.
cfg['testcases-edit-link-display'] = 'edit'

-- cfg['testcases-create-link-display']
-- The text to display for test cases "create" links.
cfg['testcases-create-link-display'] = 'create'

----------------------------------------------------------------------------------------------------
-- Add categories blurb configuration
----------------------------------------------------------------------------------------------------

--[[
-- cfg['add-categories-blurb']
-- Text to direct users to add categories to the /doc subpage. Not used if the "content" or
-- "docname fed" arguments are set, as then it is not clear where to add the categories. $1 is a
-- link to the /doc subpage with a display value of cfg['doc-link-display'].
--]]
cfg['add-categories-blurb'] = 'Please add categories to the $1 subpage.'

-- cfg['doc-link-display']
-- The text to display when linking to the /doc subpage.
cfg['doc-link-display'] = '/doc'

----------------------------------------------------------------------------------------------------
-- Subpages link configuration
----------------------------------------------------------------------------------------------------

--[[
-- cfg['subpages-blurb']
-- The "Subpages of this template" blurb. $1 is a link to the main template's subpages with a
-- display value of cfg['subpages-link-display']. In the English version this blurb is simply
-- the link followed by a period, and the link display provides the actual text.
--]]
cfg['subpages-blurb'] = '$1.'

--[[
-- cfg['subpages-link-display']
-- The text to display for the "subpages of this page" link. $1 is cfg['template-pagetype'],
-- cfg['module-pagetype'] or cfg['default-pagetype'], depending on whether the current page is in
-- the template namespace, the module namespace, or another namespace.
--]]
cfg['subpages-link-display'] = 'Subpages of this $1'

-- cfg['template-pagetype']
-- The pagetype to display for template pages.
cfg['template-pagetype'] = 'template'

-- cfg['module-pagetype']
-- The pagetype to display for Lua module pages.
cfg['module-pagetype'] = 'module'

-- cfg['default-pagetype']
-- The pagetype to display for pages other than templates or Lua modules.
cfg['default-pagetype'] = 'page'

----------------------------------------------------------------------------------------------------
-- Doc link configuration
----------------------------------------------------------------------------------------------------

-- cfg['doc-subpage']
-- The name of the subpage typically used for documentation pages.
cfg['doc-subpage'] = 'doc'

-- cfg['file-docpage-preload']
-- Preload file for documentation page in the file namespace.
cfg['file-docpage-preload'] = 'Template:Documentation/preload-filespace'

-- cfg['docpage-preload']
-- Preload file for template documentation pages in all namespaces.
cfg['docpage-preload'] = 'Template:Documentation/preload'

-- cfg['module-preload']
-- Preload file for Lua module documentation pages.
cfg['module-preload'] = 'Template:Documentation/preload-module-doc'

----------------------------------------------------------------------------------------------------
-- Print version configuration
----------------------------------------------------------------------------------------------------

-- cfg['print-subpage']
-- The name of the template subpage used for print versions.
cfg['print-subpage'] = 'Print'

-- cfg['print-link-display']
-- The text to display when linking to the /Print subpage.
cfg['print-link-display'] = '/Print'

-- cfg['print-blurb']
-- Text to display if a /Print subpage exists. $1 is a link to the subpage with a display value of cfg['print-link-display'].
cfg['print-blurb'] = 'A [[Help:Books/for experts#Improving the book layout|print version]] of this template exists at $1.'
	.. ' If you make a change to this template, please update the print version as well.'

-- cfg['display-print-category']
-- Set to true to enable output of cfg['print-category'] if a /Print subpage exists.
-- This should be a boolean value (either true or false).
cfg['display-print-category'] = true

-- cfg['print-category']
-- Category to output if cfg['display-print-category'] is set to true, and a /Print subpage exists.
cfg['print-category'] = 'Templates with print versions'

----------------------------------------------------------------------------------------------------
-- HTML and CSS configuration
----------------------------------------------------------------------------------------------------

-- cfg['main-div-id']
-- The "id" attribute of the main HTML "div" tag.
cfg['main-div-id'] = 'template-documentation'

-- cfg['main-div-classes']
-- The CSS classes added to the main HTML "div" tag.
cfg['main-div-classes'] = 'template-documentation iezoomfix'

-- cfg['start-box-linkclasses']
-- The CSS classes used for the [view][edit][history] or [create] links in the start box.
cfg['start-box-linkclasses'] = 'mw-editsection-like plainlinks'

-- cfg['start-box-link-id']
-- The HTML "id" attribute for the links in the start box.
cfg['start-box-link-id'] = 'doc_editlinks'

----------------------------------------------------------------------------------------------------
-- {{fmbox}} template configuration
----------------------------------------------------------------------------------------------------

-- cfg['fmbox-id']
-- The id sent to the "id" parameter of the {{fmbox}} template.
cfg['fmbox-id'] = 'documentation-meta-data'

-- cfg['fmbox-style']
-- The value sent to the style parameter of {{fmbox}}.
cfg['fmbox-style'] = 'background-color: #ecfcf4'

-- cfg['fmbox-textstyle']
-- The value sent to the "textstyle parameter of {{fmbox}}.
cfg['fmbox-textstyle'] = 'font-style: italic'

----------------------------------------------------------------------------------------------------
-- Tracking category configuration
----------------------------------------------------------------------------------------------------

-- cfg['display-strange-usage-category']
-- Set to true to enable output of cfg['strange-usage-category'] if the module is used on a /doc subpage
-- or a /testcases subpage. This should be a boolean value (either true or false).
cfg['display-strange-usage-category'] = true

-- cfg['strange-usage-category']
-- Category to output if cfg['display-strange-usage-category'] is set to true and the module is used on a
-- /doc subpage or a /testcases subpage.
cfg['strange-usage-category'] = 'Wikipedia pages with strange ((documentation)) usage'

--[[
----------------------------------------------------------------------------------------------------
-- End configuration
--
-- Don't edit anything below this line.
----------------------------------------------------------------------------------------------------
--]]

return cfg</text>
            <sha1>8pcmkoqt981cl157rxykfh0do2j2ej5</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:Effective protection level</title>
        <ns>828</ns>
        <id>661</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6939</id>
            <parentid>6938</parentid>
            <timestamp>2015-03-16T19:26:35Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2676">local p = {}

-- Returns the permission required to perform a given action on a given title.
-- If no title is specified, the title of the page being displayed is used.
function p._main(action, pagename)
	local title
	if type(pagename) == 'table' and pagename.prefixedText then
		title = pagename
	elseif pagename then
		title = mw.title.new(pagename)
	else
		title = mw.title.getCurrentTitle()
	end
	pagename = title.prefixedText
	if action == 'autoreview' then
		local level = mw.getCurrentFrame():callParserFunction('PENDINGCHANGELEVEL', pagename)
		if level == 'review' then
			return 'reviewer'
		elseif level ~= '' then
			return level
		else
			return nil -- not '*'. a page not being PC-protected is distinct from it being PC-protected with anyone able to review. also not '', as that would mean PC-protected but nobody can review
		end
	elseif action ~= 'edit' and action ~= 'move' and action ~= 'create' and action ~= 'upload' then
		error( 'First parameter must be one of edit, move, create, upload, autoreview', 2 )
	end
	if title.namespace == 8 then -- MediaWiki namespace
		return 'sysop'
	elseif title.namespace == 2 and title.isSubpage and ( title.contentModel == 'javascript' or title.contentModel == 'css' ) then -- user JS or CSS page
		return 'sysop'
	end
	local level = title.protectionLevels[action] and title.protectionLevels[action][1]
	if level == 'sysop' then
		return 'sysop'
	elseif title.cascadingProtection.restrictions[action] and title.cascadingProtection.restrictions[action][1] then -- used by a cascading-protected page
		return 'sysop'
	elseif level == 'templateeditor' then
		return 'templateeditor'
	elseif action == 'move' then
		local blacklistentry = mw.ext.TitleBlacklist.test('edit', pagename) -- Testing action edit is correct, since this is for the source page. The target page name gets tested with action move.
		if blacklistentry and not blacklistentry.params.autoconfirmed then
			return 'accountcreator'
		elseif title.namespace == 6 then
			return 'filemover'
		else
			return 'autoconfirmed'
		end
	end
	local blacklistentry = mw.ext.TitleBlacklist.test(action, pagename)
	if blacklistentry then
		return blacklistentry.params.autoconfirmed and 'autoconfirmed' or 'accountcreator'
	elseif level then
		return level
	elseif action == 'upload' then
		return 'autoconfirmed'
	elseif action == 'create' and title.namespace % 2 == 0 and title.namespace ~= 118 then -- You need to be registered, but not autoconfirmed, to create non-talk pages other than drafts
		return 'user'
	else
		return '*'
	end
end

setmetatable(p, { __index = function(t, k)
	return function(frame)
		return t._main(k, frame.args[1])
	end
end })

return p</text>
            <sha1>3ocllaad6v45wgdg7fyozjhjw9pw1mu</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:File link</title>
        <ns>828</ns>
        <id>662</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6941</id>
            <parentid>6940</parentid>
            <timestamp>2015-03-16T19:26:36Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="8343">-- This module provides a library for formatting file wikilinks.

local libraryUtil = require('libraryUtil')
local checkType = libraryUtil.checkType

local fileLink = {}

function fileLink.new(filename)
	checkType('fileLink.new', 1, filename, 'string', true)
	local obj, data = {}, {}
	
	local checkSelf = libraryUtil.makeCheckSelfFunction(
		'fileLink',
		'fileLink',
		obj,
		'fileLink object'
	)
	
	-- Set the filename if we were passed it as an input to fileLink.new.
	if filename then
		data.theName = filename
	end
	
	function data:name(s)
		checkSelf(self, 'name')
		checkType('fileLink:name', 1, s, 'string')
		data.theName = s
		return self
	end
	
	function data:format(s, filename)
		checkSelf(self, 'format')
		checkType('fileLink:format', 1, s, 'string', true)
		checkType('fileLink:format', 2, format, 'string', true)
		local validFormats = {
			thumb = true,
			thumbnail = true,
			frame = true,
			framed = true,
			frameless = true
		}
		if s == nil or validFormats[s] then
			data.theFormat = s
			data.theFormatFilename = filename
		else
			error(string.format(
				"bad argument #1 to 'fileLink:format' ('%s' is not a valid format)",
				s
			), 2)
		end
		return self
	end

	local function sizeError(methodName)
		-- Used for formatting duplication errors in size-related methods.
		error(string.format(
			"duplicate size argument detected in '%s'"
			.. " ('upright' cannot be used in conjunction with height or width)",
			methodName
		), 3)
	end
	
	function data:width(px)
		checkSelf(self, 'width')
		checkType('fileLink:width', 1, px, 'number', true)
		if px and data.isUpright then
			sizeError('fileLink:width')
		end
		data.theWidth = px
		return self
	end
	
	function data:height(px)
		checkSelf(self, 'height')
		checkType('fileLink:height', 1, px, 'number', true)
		if px and data.isUpright then
			sizeError('fileLink:height')
		end
		data.theHeight = px
		return self
	end
	
	function data:upright(isUpright, factor)
		checkSelf(self, 'upright')
		checkType('fileLink:upright', 1, isUpright, 'boolean', true)
		checkType('fileLink:upright', 2, factor, 'number', true)
		if isUpright and (data.theWidth or data.theHeight) then
			sizeError('fileLink:upright')
		end
		data.isUpright = isUpright
		data.uprightFactor = factor
		return self
	end
	
	function data:resetSize()
		checkSelf(self, 'resetSize')
		for i, field in ipairs{'theWidth', 'theHeight', 'isUpright', 'uprightFactor'} do
			data[field] = nil
		end
		return self
	end
	
	function data:location(s)
		checkSelf(self, 'location')
		checkType('fileLink:location', 1, s, 'string', true)
		local validLocations = {
			right = true,
			left = true,
			center = true,
			none = true
		}
		if s == nil or validLocations[s] then
			data.theLocation = s
		else
			error(string.format(
				"bad argument #1 to 'fileLink:location' ('%s' is not a valid location)",
				s
			), 2)
		end
		return self
	end
	
	function data:alignment(s)
		checkSelf(self, 'alignment')
		checkType('fileLink:alignment', 1, s, 'string', true)
		local validAlignments = {
			baseline = true,
			middle = true,
			sub = true,
			super = true,
			['text-top'] = true,
			['text-bottom'] = true,
			top = true,
			bottom = true
		}
		if s == nil or validAlignments[s] then
			data.theAlignment = s
		else
			error(string.format(
				"bad argument #1 to 'fileLink:alignment' ('%s' is not a valid alignment)",
				s
			), 2)
		end
		return self
	end
	
	function data:border(hasBorder)
		checkSelf(self, 'border')
		checkType('fileLink:border', 1, hasBorder, 'boolean', true)
		data.hasBorder = hasBorder
		return self
	end
	
	function data:link(s)
		checkSelf(self, 'link')
		checkType('fileLink:link', 1, s, 'string', true)
		data.theLink = s
		return self
	end
	
	function data:alt(s)
		checkSelf(self, 'alt')
		checkType('fileLink:alt', 1, s, 'string', true)
		data.theAlt = s
		return self
	end
	
	function data:page(num)
		checkSelf(self, 'page')
		checkType('fileLink:page', 1, num, 'number', true)
		data.thePage = s
		return self
	end
	
	function data:class(s)
		checkSelf(self, 'class')
		checkType('fileLink:class', 1, s, 'string', true)
		data.theClass = s
		return self
	end
	
	function data:lang(s)
		checkSelf(self, 'lang')
		checkType('fileLink:lang', 1, s, 'string', true)
		data.theLang = s
		return self
	end

	local function checkTypeStringOrNum(funcName, pos, arg)
		local argType = type(arg)
		if argType ~= 'nil' and argType ~= 'string' and argType ~= 'number' then
			error(string.format(
				"bad argument #%d to '%s' (string or number expected, got %s)",
				pos,
				funcName,
				argType
			), 3)
		end
	end
	
	function data:startTime(time)
		checkSelf(self, 'startTime')
		checkTypeStringOrNum('fileLink:startTime', 1, time)
		data.theStartTime = time
		return self
	end
	
	function data:endTime(time)
		checkSelf(self, 'endTime')
		checkTypeStringOrNum('fileLink:endTime', 1, time)
		data.theEndTime = time
		return self
	end
	
	function data:thumbTime(time)
		checkSelf(self, 'thumbTime')
		checkTypeStringOrNum('fileLink:thumbTime', 1, time)
		data.theThumbTime = time
		return self
	end
	
	function data:caption(s)
		checkSelf(self, 'caption')
		checkType('fileLink:caption', 1, s, 'string', true)
		data.theCaption = s
		return self
	end
	
	function data:render()
		checkSelf(self, 'render')
		local ret = {}
		
		-- Filename
		if not data.theName then
			error('fileLink:render: no filename was found')
		end
		ret[#ret + 1] = 'File:' .. data.theName
		
		-- Format
		if data.theFormat and data.theFormatFilename then
			ret[#ret + 1] = data.theFormat .. '=' .. data.theFormatFilename
		elseif data.theFormat then
			ret[#ret + 1] = data.theFormat
		end
		
		-- Border
		if data.hasBorder then
			ret[#ret + 1] = 'border'
		end
		
		-- Location
		ret[#ret + 1] = data.theLocation

		-- Alignment
		ret[#ret + 1] = data.theAlignment
		
		-- Size
		if data.isUpright and data.uprightFactor then
			ret[#ret + 1] = 'upright=' .. tostring(data.uprightFactor)
		elseif data.isUpright then
			ret[#ret + 1] = 'upright'
		elseif data.theWidth and data.theHeight then
			ret[#ret + 1] = string.format('%dx%dpx', data.theWidth, data.theHeight)
		elseif data.theWidth then
			ret[#ret + 1] = tostring(data.theWidth) .. 'px'
		elseif data.theHeight then
			ret[#ret + 1] = string.format('x%dpx', data.theHeight)
		end
		
		-- Render named parameters.
		-- That includes link, alt, page, class, lang, start, end, and thumbtime.
		do
			local namedParameters = {
				{'link', 'theLink'},
				{'alt', 'theAlt'},
				{'page', 'thePage'},
				{'class', 'theClass'},
				{'lang', 'theLang'},
				{'start', 'theStartTime'},
				{'end', 'theEndTime'},
				{'thumbtime', 'theThumbTime'}
			}
			for i, t in ipairs(namedParameters) do
				local parameter = t[1]
				local value = data[t[2]]
				if value then
					ret[#ret + 1] = parameter .. '=' .. tostring(value)
				end
			end
		end

		-- Caption
		ret[#ret + 1] = data.theCaption
		
		return string.format('[[%s]]', table.concat(ret, '|'))
	end
	
	local privateFields = {
		theName = true,
		theFormat = true,
		theFormatFilename = true,
		theWidth = true,
		theHeight = true,
		isUpright = true,
		uprightFactor = true,
		theLocation = true,
		theAlignment = true,
		hasBorder = true,
		theLink = true,
		theAlt = true,
		thePage = true,
		theClass = true,
		theLang = true,
		theCaption = true
	}
	
	local readOnlyFields = {}
	for field in pairs(data) do
		readOnlyFields[field] = true
	end
	readOnlyFields.theName = nil -- This is set if a filename is given to fileLink.new, so remove it.
	
	local function restrictedFieldError(key, restriction)
		error(string.format(
			"fileLink object field '%s' is %s",
			tostring(key),
			restriction
		), 3)
	end
	
	setmetatable(obj, {
		__index = function (t, key)
			if privateFields[key] then
				restrictedFieldError(key, 'private')
			else
				return data[key]
			end
		end,
		__newindex = function (t, key, value)
			if privateFields[key] then
				restrictedFieldError(key, 'private')
			elseif readOnlyFields[key] then
				restrictedFieldError(key, 'read-only')
			else
				data[key] = value
			end
		end,
		__tostring = function (t)
			return t:render()
		end,
		__pairs = function ()
			local temp = {}
			for k, v in pairs(data) do
				if not privateFields[k] then
					temp[k] = v
				end
			end
			return pairs(temp)
		end
	})
	
	return obj
end

return fileLink</text>
            <sha1>nginalrxy71604mh0leow5l6w0pjeg2</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:Hatnote</title>
        <ns>828</ns>
        <id>663</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6943</id>
            <parentid>6942</parentid>
            <timestamp>2015-03-16T19:26:36Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="6249">--------------------------------------------------------------------------------
--                              Module:Hatnote                                --
--                                                                            --
-- This module produces hatnote links and links to related articles. It       --
-- implements the {{hatnote}} and {{format hatnote link}} meta-templates, and --
-- includes helper functions for other Lua hatnote modules.                   --
--------------------------------------------------------------------------------

local libraryUtil = require('libraryUtil')
local checkType = libraryUtil.checkType
local mArguments -- lazily initialise [[Module:Arguments]]
local yesno -- lazily initialise [[Module:Yesno]]

local p = {}

--------------------------------------------------------------------------------
-- Helper functions
--------------------------------------------------------------------------------

local function getArgs(frame)
	-- Fetches the arguments from the parent frame. Whitespace is trimmed and
	-- blanks are removed.
	mArguments = require('Module:Arguments')
	return mArguments.getArgs(frame, {parentOnly = true})
end

local function removeInitialColon(s)
	-- Removes the initial colon from a string, if present.
	return s:match('^:?(.*)')
end

function p.findNamespaceId(link, removeColon)
	-- Finds the namespace id (namespace number) of a link or a pagename. This
	-- function will not work if the link is enclosed in double brackets. Colons
	-- are trimmed from the start of the link by default. To skip colon
	-- trimming, set the removeColon parameter to true.
	checkType('findNamespaceId', 1, link, 'string')
	checkType('findNamespaceId', 2, removeColon, 'boolean', true)
	if removeColon ~= false then
		link = removeInitialColon(link)
	end
	local namespace = link:match('^(.-):')
	if namespace then
		local nsTable = mw.site.namespaces[namespace]
		if nsTable then
			return nsTable.id
		end
	end
	return 0
end

function p.formatPages(...)
	-- Formats a list of pages using formatLink and returns it as an array. Nil
	-- values are not allowed.
	local pages = {...}
	local ret = {}
	for i, page in ipairs(pages) do
		ret[i] = p._formatLink(page)
	end
	return ret
end

function p.formatPageTables(...)
	-- Takes a list of page/display tables and returns it as a list of
	-- formatted links. Nil values are not allowed.
	local pages = {...}
	local links = {}
	for i, t in ipairs(pages) do
		checkType('formatPageTables', i, t, 'table')
		local link = t[1]
		local display = t[2]
		links[i] = p._formatLink(link, display)
	end
	return links
end

function p.makeWikitextError(msg, helpLink, addTrackingCategory)
	-- Formats an error message to be returned to wikitext. If
	-- addTrackingCategory is not false after being returned from
	-- [[Module:Yesno]], and if we are not on a talk page, a tracking category
	-- is added.
	checkType('makeWikitextError', 1, msg, 'string')
	checkType('makeWikitextError', 2, helpLink, 'string', true)
	yesno = require('Module:Yesno')
	local title = mw.title.getCurrentTitle()
	-- Make the help link text.
	local helpText
	if helpLink then
		helpText = ' ([[' .. helpLink .. '|help]])'
	else
		helpText = ''
	end
	-- Make the category text.
	local category
	if not title.isTalkPage and yesno(addTrackingCategory) ~= false then
		category = 'Hatnote templates with errors'
		category = string.format(
			'[[%s:%s]]',
			mw.site.namespaces[14].name,
			category
		)
	else
		category = ''
	end
	return string.format(
		'&lt;strong class="error"&gt;Error: %s%s.&lt;/strong&gt;%s',
		msg,
		helpText,
		category
	)
end

--------------------------------------------------------------------------------
-- Format link
--
-- Makes a wikilink from the given link and display values. Links are escaped
-- with colons if necessary, and links to sections are detected and displayed
-- with " § " as a separator rather than the standard MediaWiki "#". Used in
-- the {{format hatnote link}} template.
--------------------------------------------------------------------------------

function p.formatLink(frame)
	local args = getArgs(frame)
	local link = args[1]
	local display = args[2]
	if not link then
		return p.makeWikitextError(
			'no link specified',
			'Template:Format hatnote link#Errors',
			args.category
		)
	end
	return p._formatLink(link, display)
end

function p._formatLink(link, display)
	-- Find whether we need to use the colon trick or not. We need to use the
	-- colon trick for categories and files, as otherwise category links
	-- categorise the page and file links display the file.
	checkType('_formatLink', 1, link, 'string')
	checkType('_formatLink', 2, display, 'string', true)
	link = removeInitialColon(link)
	local namespace = p.findNamespaceId(link, false)
	local colon
	if namespace == 6 or namespace == 14 then
		colon = ':'
	else
		colon = ''
	end

	-- Find the display value.
	if not display then
		local page, section = link:match('^(.-)#(.*)$')
		if page then
			display = page .. ' § ' .. section
		end
	end

	-- Assemble the link.
	if display then
		return string.format('[[%s%s|%s]]', colon, link, display)
	else
		return string.format('[[%s%s]]', colon, link)
	end
end

--------------------------------------------------------------------------------
-- Hatnote
--
-- Produces standard hatnote text. Implements the {{hatnote}} template.
--------------------------------------------------------------------------------

function p.hatnote(frame)
	local args = getArgs(frame)
	local s = args[1]
	local options = {}
	if not s then
		return p.makeWikitextError(
			'no text specified',
			'Template:Hatnote#Errors',
			args.category
		)
	end
	options.extraclasses = args.extraclasses
	options.selfref = args.selfref
	return p._hatnote(s, options)
end

function p._hatnote(s, options)
	checkType('_hatnote', 1, s, 'string')
	checkType('_hatnote', 2, options, 'table', true)
	local classes = {'hatnote'}
	local extraclasses = options.extraclasses
	local selfref = options.selfref
	if type(extraclasses) == 'string' then
		classes[#classes + 1] = extraclasses
	end
	if selfref then
		classes[#classes + 1] = 'selfref'
	end
	return string.format(
		'&lt;div class="%s"&gt;%s&lt;/div&gt;',
		table.concat(classes, ' '),
		s
	)
end

return p</text>
            <sha1>rs2kugjq5b28kp7xtxw3izt2gqzjqc8</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:HtmlBuilder</title>
        <ns>828</ns>
        <id>664</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6945</id>
            <parentid>6944</parentid>
            <timestamp>2015-03-16T19:26:36Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="4278">-- Module for building complex HTML (e.g. infoboxes, navboxes) using a fluent interface.

local HtmlBuilder = {}

local metatable = {}

metatable.__index = function(t, key)
    local ret = rawget(t, key)
    if ret then
        return ret
    end
    
    ret = metatable[key]
    if type(ret) == 'function' then
        return function(...) 
            return ret(t, ...) 
        end 
    else
        return ret
    end
end

metatable.__tostring = function(t)
    local ret = {}
    t._build(ret)
    return table.concat(ret)
end

metatable._build = function(t, ret)
    if t.tagName then 
        table.insert(ret, '&lt;' .. t.tagName)
        for i, attr in ipairs(t.attributes) do
            table.insert(ret, ' ' .. attr.name .. '="' .. attr.val .. '"') 
        end
        if #t.styles &gt; 0 then
            table.insert(ret, ' style="')
            for i, prop in ipairs(t.styles) do
                if type(prop) == 'string' then -- added with cssText()
                    table.insert(ret, prop .. ';')
                else -- added with css()
                    table.insert(ret, prop.name .. ':' .. prop.val .. ';')
                end
            end
            table.insert(ret, '"')
        end
        if t.selfClosing then
            table.insert(ret, ' /')
        end
        table.insert(ret, '&gt;') 
    end
    for i, node in ipairs(t.nodes) do
        if node then
            if type(node) == 'table' then
                node._build(ret)
            else
                table.insert(ret, tostring(node))
            end
        end
    end
    if t.tagName and not t.unclosed and not t.selfClosing then
        table.insert(ret, '&lt;/' .. t.tagName .. '&gt;')
    end
end

metatable.node = function(t, builder)
    if builder then
        table.insert(t.nodes, builder)
    end
    return t
end

metatable.wikitext = function(t, ...) 
    local vals = {...}
    for i = 1, #vals do
        if vals[i] then
            table.insert(t.nodes, vals[i])
        end
    end
    return t
end

metatable.newline = function(t)
    table.insert(t.nodes, '\n')
    return t
end

metatable.tag = function(t, tagName, args)
    args = args or {}
    args.parent = t
    local builder = HtmlBuilder.create(tagName, args)
    table.insert(t.nodes, builder)
    return builder
end

local function getAttr(t, name)
    for i, attr in ipairs(t.attributes) do
        if attr.name == name then
            return attr
        end
    end
end

metatable.attr = function(t, name, val)
    if type(val) == 'string' or type(val) == 'number' then
        -- if caller sets the style attribute explicitly, then replace all styles previously added with css() and cssText()
        if name == 'style' then
            t.styles = {val}
            return t
        end
        
        local attr = getAttr(t, name)
        if attr then
            attr.val = val
        else
            table.insert(t.attributes, {name = name, val = val})
        end
    end
    
    return t
end

metatable.addClass = function(t, class)
    if class then
        local attr = getAttr(t, 'class')
        if attr then
            attr.val = attr.val .. ' ' .. class
        else
            t.attr('class', class)
        end
    end
    
    return t
end

metatable.css = function(t, name, val)
    if type(val) == 'string' or type(val) == 'number' then
        for i, prop in ipairs(t.styles) do
            if prop.name == name then
                prop.val = val
                return t
            end
        end
        
        table.insert(t.styles, {name = name, val = val})
    end
    
    return t
end

metatable.cssText = function(t, css)
    if css then
        table.insert(t.styles, css)
    end
    return t
end

metatable.done = function(t)
    return t.parent or t
end

metatable.allDone = function(t)
    while t.parent do
        t = t.parent
    end
    return t
end

function HtmlBuilder.create(tagName, args)
    args = args or {}
    local builder = {}
    setmetatable(builder, metatable)
    builder.nodes = {}
    builder.attributes = {}
    builder.styles = {}
    builder.tagName = tagName
    builder.parent = args.parent
    builder.unclosed = args.unclosed or false
    builder.selfClosing = args.selfClosing or false
    return builder
end

return HtmlBuilder</text>
            <sha1>ait58gp3hn4i3oyevj1ucebrzvyok1o</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:List</title>
        <ns>828</ns>
        <id>665</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6949</id>
            <parentid>6948</parentid>
            <timestamp>2015-03-16T19:26:37Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="5138">-- This module outputs different kinds of lists. At the moment, bulleted,
-- unbulleted, horizontal, ordered, and horizontal ordered lists are supported.

local libUtil = require('libraryUtil')
local checkType = libUtil.checkType
local mTableTools = require('Module:TableTools')

local p = {}

local listTypes = {
	['bulleted'] = true,
	['unbulleted'] = true,
	['horizontal'] = true,
	['ordered'] = true,
	['horizontal_ordered'] = true
}

function p.makeListData(listType, args)
	-- Constructs a data table to be passed to p.renderList.
	local data = {}

	-- Classes
	data.classes = {}
	if listType == 'horizontal' or listType == 'horizontal_ordered' then
		table.insert(data.classes, 'hlist')
	elseif listType == 'unbulleted' then
		table.insert(data.classes, 'plainlist')
	end
	table.insert(data.classes, args.class)

	-- Main div style
	data.style = args.style

	-- Indent for horizontal lists
	if listType == 'horizontal' or listType == 'horizontal_ordered' then
		local indent = tonumber(args.indent)
		indent = indent and indent * 1.6 or 0
		if indent &gt; 0 then
			data.marginLeft = indent .. 'em'
		end
	end
	
	-- List style types for ordered lists
	-- This could be "1, 2, 3", "a, b, c", or a number of others. The list style
	-- type is either set by the "type" attribute or the "list-style-type" CSS
	-- property.
	if listType == 'ordered' or listType == 'horizontal_ordered' then 
		data.listStyleType = args.list_style_type or args['list-style-type']
		data.type = args['type']

		-- Detect invalid type attributes and attempt to convert them to
		-- list-style-type CSS properties.
		if data.type 
			and not data.listStyleType
			and not tostring(data.type):find('^%s*[1AaIi]%s*$')
		then
			data.listStyleType = data.type
			data.type = nil
		end
	end
	
	-- List tag type
	if listType == 'ordered' or listType == 'horizontal_ordered' then
		data.listTag = 'ol'
	else
		data.listTag = 'ul'
	end

	-- Start number for ordered lists
	data.start = args.start
	if listType == 'horizontal_ordered' then
		-- Apply fix to get start numbers working with horizontal ordered lists.
		local startNum = tonumber(data.start)
		if startNum then
			data.counterReset = 'listitem ' .. tostring(startNum - 1)
		end
	end

	-- List style
	 -- ul_style and ol_style are included for backwards compatibility. No
	 -- distinction is made for ordered or unordered lists.
	data.listStyle = args.list_style

	-- List items
	-- li_style is included for backwards compatibility. item_style was included
	-- to be easier to understand for non-coders.
	data.itemStyle = args.item_style or args.li_style
	data.items = {}
	for i, num in ipairs(mTableTools.numKeys(args)) do
		local item = {}
		item.content = args[num]
		item.style = args['item' .. tostring(num) .. '_style']
			or args['item_style' .. tostring(num)]
		item.value = args['item' .. tostring(num) .. '_value']
			or args['item_value' .. tostring(num)]
		table.insert(data.items, item)
	end
	
	return data
end

function p.renderList(data)
	-- Renders the list HTML.
	
	-- Return the blank string if there are no list items.
	if type(data.items) ~= 'table' or #data.items &lt; 1 then
		return ''
	end
	
	-- Render the main div tag.
	local root = mw.html.create('div')
	for i, class in ipairs(data.classes or {}) do
		root:addClass(class)
	end
	root:css{['margin-left'] = data.marginLeft}
	if data.style then
		root:cssText(data.style)
	end

	-- Render the list tag.
	local list = root:tag(data.listTag or 'ul')
	list
		:attr{start = data.start, type = data.type}
		:css{
			['counter-reset'] = data.counterReset,
			['list-style-type'] = data.listStyleType
		}
	if data.listStyle then
		list:cssText(data.listStyle)
	end

	-- Render the list items
	for i, t in ipairs(data.items or {}) do
		local item = list:tag('li')
		if data.itemStyle then
			item:cssText(data.itemStyle)
		end
		if t.style then
			item:cssText(t.style)
		end
		item
			:attr{value = t.value}
			:wikitext(t.content)
	end

	return tostring(root)
end

function p.renderTrackingCategories(args)
	local isDeprecated = false -- Tracks deprecated parameters.
	for k, v in pairs(args) do
		k = tostring(k)
		if k:find('^item_style%d+$') or k:find('^item_value%d+$') then
			isDeprecated = true
			break
		end
	end
	local ret = ''
	if isDeprecated then
		ret = ret .. '[[Category:List templates with deprecated parameters]]'
	end
	return ret
end

function p.makeList(listType, args)
	if not listType or not listTypes[listType] then
		error(string.format(
			"bad argument #1 to 'makeList' ('%s' is not a valid list type)",
			tostring(listType)
		), 2)
	end
	checkType('makeList', 2, args, 'table')
	local data = p.makeListData(listType, args)
	local list = p.renderList(data)
	local trackingCategories = p.renderTrackingCategories(args)
	return list .. trackingCategories
end

for listType in pairs(listTypes) do
	p[listType] = function (frame)
		local mArguments = require('Module:Arguments')
		local origArgs = mArguments.getArgs(frame)
		-- Copy all the arguments to a new table, for faster indexing.
		local args = {}
		for k, v in pairs(origArgs) do
			args[k] = v
		end
		return p.makeList(listType, args)
	end
end

return p</text>
            <sha1>gys728jf7k7k0tacxur7d4u3ykwd6zh</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:Lua banner</title>
        <ns>828</ns>
        <id>666</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6951</id>
            <parentid>6950</parentid>
            <timestamp>2015-03-16T19:26:37Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2421">-- This module implements the {{lua}} template.

local yesno = require('Module:Yesno')
local mList = require('Module:List')
local mTableTools = require('Module:TableTools')
local mMessageBox = require('Module:Message box')

local p = {}

function p.main(frame)
	local origArgs = frame:getParent().args
	local args = {}
	for k, v in pairs(origArgs) do
		v = v:match('^%s*(.-)%s*$')
		if v ~= '' then
			args[k] = v
		end
	end
	return p._main(args)
end

function p._main(args)
	local modules = mTableTools.compressSparseArray(args)
	local box = p.renderBox(modules)
	local trackingCategories = p.renderTrackingCategories(args, modules)
	return box .. trackingCategories
end

function p.renderBox(modules)
	local boxArgs = {}
	if #modules &lt; 1 then
		boxArgs.text = '&lt;strong class="error"&gt;Error: no modules specified&lt;/strong&gt;'
	else
		local moduleLinks = {}
		for i, module in ipairs(modules) do
			moduleLinks[i] = string.format('[[:%s]]', module)
		end
		local moduleList = mList.makeList('bulleted', moduleLinks)
		boxArgs.text = 'Uses [[Wikipedia:Lua|Lua]]:\n' .. moduleList
	end
	boxArgs.type = 'notice'
	boxArgs.small = true
	boxArgs.image = '[[File:Lua-logo-nolabel.svg|30px|alt=Lua logo|link=Wikipedia:Lua]]'
	return mMessageBox.main('mbox', boxArgs)
end

function p.renderTrackingCategories(args, modules, titleObj)
	if yesno(args.nocat) then
		return ''
	end
	
	local cats = {}
	
	-- Error category
	if #modules &lt; 1 then
		cats[#cats + 1] = 'Lua templates with errors'
	end
	
	-- Lua templates category
	titleObj = titleObj or mw.title.getCurrentTitle()
	local subpageBlacklist = {
		doc = true,
		sandbox = true,
		sandbox2 = true,
		testcases = true
	}
	if titleObj.namespace == 10 
		and not subpageBlacklist[titleObj.subpageText]
	then
		local category = args.category
		if not category then
			local categories = {
				['Module:String'] = 'Lua String-based templates',
				['Module:Math'] = 'Templates based on the Math Lua module',
				['Module:BaseConvert'] = 'Templates based on the BaseConvert Lua module',
				['Module:Citation'] = 'Lua-based citation templates'
			}
			categories['Module:Citation/CS1'] = categories['Module:Citation']
			category = modules[1] and categories[modules[1]]
			category = category or 'Lua-based templates'
		end
		cats[#cats + 1] = category
	end
	
	for i, cat in ipairs(cats) do
		cats[i] = string.format('[[Category:%s]]', cat)
	end
	return table.concat(cats)
end

return p</text>
            <sha1>l8oeyvtrxsbtfip6xi5evqh3yk40lu5</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:Main</title>
        <ns>828</ns>
        <id>667</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6953</id>
            <parentid>6952</parentid>
            <timestamp>2015-03-16T19:26:37Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2451">--[[
-- This module produces a link to a main article or articles. It implements the
-- template {{main}}.
-- 
-- If the module is used in category or category talk space, it produces "The
-- main article for this category is xxx". Otherwise, it produces
-- "Main article: xxx".
--]]

local mHatnote = require('Module:Hatnote')
local mTableTools -- lazily initialise
local mArguments -- lazily initialise

local p = {}

function p.main(frame)
	mTableTools = require('Module:TableTools')
	mArguments = require('Module:Arguments')
	local args = mArguments.getArgs(frame, {parentOnly = true})
	local pages = {}
	for k, v in pairs(args) do
		if type(k) == 'number' then
			local display = args['l' .. tostring(k)]
			local page = {v, display}
			pages[k] = page
		end
	end
	pages = mTableTools.compressSparseArray(pages)
	local options = {
		selfref = args.selfref
	}
	return p._main(options, unpack(pages))
end

function p._main(options, ...)
	-- Get the list of pages. If no first page was specified we use the current
	-- page name.
	local pages = {...}
	local currentTitle = mw.title.getCurrentTitle()
	local firstPageTable = pages[1]
	local firstPage
	if firstPageTable then
		firstPage = firstPageTable[1]
	else
		firstPage = currentTitle.text
		firstPageTable = {firstPage}
		pages[1] = firstPageTable
	end

	-- Find the pagetype.
	local firstPageNs = mHatnote.findNamespaceId(firstPage)
	local pagetype = firstPageNs == 0 and 'article' or 'page'

	-- Make the formatted link text
	local links = mHatnote.formatPageTables(unpack(pages))
	links = mw.text.listToText(links)

	-- Build the text.
	local isPlural = #pages &gt; 1
	local currentNs = currentTitle.namespace
	local isCategoryNamespace = currentNs - currentNs % 2 == 14
	local stringToFormat
	if isCategoryNamespace then
		if isPlural then
			stringToFormat = 'The main %ss for this'
				.. ' [[Wikipedia:Categorization|category]] are %s'
		else
			stringToFormat = 'The main %s for this'
				.. ' [[Wikipedia:Categorization|category]] is %s'
		end
	else
		if isPlural then
			stringToFormat = 'Main %ss: %s'
		else
			stringToFormat = 'Main %s: %s'
		end
	end
	local text = string.format(stringToFormat, pagetype, links)

	-- Process the options and pass the text to the _rellink function in
	-- [[Module:Hatnote]].
	options = options or {}
	local hnOptions = {
		extraclasses = 'relarticle mainarticle',
		selfref = options.selfref
	}
	return mHatnote._hatnote(text, hnOptions)
end

return p</text>
            <sha1>bkdwlezxs2e8fulsjvq4sgamyt8moy0</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:Message box</title>
        <ns>828</ns>
        <id>668</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6955</id>
            <parentid>6954</parentid>
            <timestamp>2015-03-16T19:26:38Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="17898">-- This is a meta-module for producing message box templates, including
-- {{mbox}}, {{ambox}}, {{imbox}}, {{tmbox}}, {{ombox}}, {{cmbox}} and {{fmbox}}.

-- Require necessary modules.
local getArgs = require('Module:Arguments').getArgs
local htmlBuilder = require('Module:HtmlBuilder')
local categoryHandler = require('Module:Category handler').main
local yesno = require('Module:Yesno')

-- Load the configuration page.
local cfgTables = mw.loadData('Module:Message box/configuration')

-- Get a language object for formatDate and ucfirst.
local lang = mw.language.getContentLanguage()

-- Set aliases for often-used functions to reduce table lookups.
local format = mw.ustring.format
local tinsert = table.insert
local tconcat = table.concat
local trim = mw.text.trim

--------------------------------------------------------------------------------
-- Helper functions
--------------------------------------------------------------------------------

local function getTitleObject(page, ...)
	if type(page) == 'string' then
		-- Get the title object, passing the function through pcall 
		-- in case we are over the expensive function count limit.
		local success, title = pcall(mw.title.new, page, ...)
		if success then
			return title
		end
	end
end

local function union(t1, t2)
	-- Returns the union of two arrays.
	local vals = {}
	for i, v in ipairs(t1) do
		vals[v] = true
	end
	for i, v in ipairs(t2) do
		vals[v] = true
	end
	local ret = {}
	for k in pairs(vals) do
		tinsert(ret, k)
	end
	table.sort(ret)
	return ret
end

local function getArgNums(args, prefix)
	local nums = {}
	for k, v in pairs(args) do
		local num = mw.ustring.match(tostring(k), '^' .. prefix .. '([1-9]%d*)$')
		if num then
			tinsert(nums, tonumber(num))
		end
	end
	table.sort(nums)
	return nums
end

--------------------------------------------------------------------------------
-- Box class definition
--------------------------------------------------------------------------------

local box = {}
box.__index = box

function box.new()
	local obj = {}
	setmetatable(obj, box)
	return obj
end

function box.getNamespaceId(ns)
	if not ns then return end
	if type(ns) == 'string' then
		ns = lang:ucfirst(mw.ustring.lower(ns))
		if ns == 'Main' then
			ns = 0
		end
	end
	local nsTable = mw.site.namespaces[ns]
	if nsTable then
		return nsTable.id
	end
end

function box.getMboxType(nsid)
	-- Gets the mbox type from a namespace number.
	if nsid == 0 then
		return 'ambox' -- main namespace
	elseif nsid == 6 then
		return 'imbox' -- file namespace
	elseif nsid == 14 then
		return 'cmbox' -- category namespace
	else
		local nsTable = mw.site.namespaces[nsid]
		if nsTable and nsTable.isTalk then
			return 'tmbox' -- any talk namespace
		else
			return 'ombox' -- other namespaces or invalid input
		end
	end
end

function box:addCat(ns, cat, sort)
	if type(cat) ~= 'string' then return end
	local nsVals = {'main', 'template', 'all'}
	local tname
	for i, val in ipairs(nsVals) do
		if ns == val then
			tname = ns .. 'Cats'
		end
	end
	if not tname then
		for i, val in ipairs(nsVals) do
			nsVals[i] = format('"%s"', val)
		end
		error(
			'invalid ns parameter passed to box:addCat; valid values are '
			.. mw.text.listToText(nsVals, nil, ' or ')
		)
	end
	self[tname] = self[tname] or {}
	if type(sort) == 'string' then
		tinsert(self[tname], format('[[Category:%s|%s]]', cat, sort))
	else
		tinsert(self[tname], format('[[Category:%s]]', cat))
	end
end

function box:addClass(class)
	if type(class) ~= 'string' then return end
	self.classes = self.classes or {}
	tinsert(self.classes, class)
end

function box:addAttr(attr, val)
	if type(attr) ~= 'string' or type(val) ~= 'string' then return end
	self.attrs = self.attrs or {}
	tinsert(self.attrs, attr)
end

function box:setTitle(args)
	-- Get the title object and the namespace.
	self.pageTitle = getTitleObject(args.page ~= '' and args.page)
	self.title = self.pageTitle or mw.title.getCurrentTitle()
	self.demospace = args.demospace ~= '' and args.demospace or nil
	self.nsid = box.getNamespaceId(self.demospace) or self.title.namespace
end

function box:getConfig(boxType)
	-- Get the box config data from the data page.
	if boxType == 'mbox' then
		boxType = box.getMboxType(self.nsid)
	end
	local cfg = cfgTables[boxType]
	if not cfg then
		local boxTypes = {}
		for k, v in pairs(dataTables) do
			tinsert(boxTypes, format('"%s"', k))
		end
		tinsert(boxTypes, '"mbox"')
		error(format(
			'invalid message box type "%s"; valid types are %s',
			tostring(boxType),
			mw.text.listToText(boxTypes)
		), 2)
	end
	return cfg
end

function box:removeBlankArgs(cfg, args)
	-- Only allow blank arguments for the parameter names listed in
	-- cfg.allowBlankParams.
	local newArgs = {}
	for k, v in pairs(args) do
		if v ~= '' then
			newArgs[k] = v
		end
	end
	for i, param in ipairs(cfg.allowBlankParams or {}) do
		newArgs[param] = args[param]
	end
	return newArgs
end

function box:setBoxParameters(cfg, args)
	-- Get type data.
	self.type = args.type
	local typeData = cfg.types[self.type]
	self.invalidTypeError = cfg.showInvalidTypeError
		and self.type
		and not typeData
		and true
		or false
	typeData = typeData or cfg.types[cfg.default]
	self.typeClass = typeData.class
	self.typeImage = typeData.image

	-- Find if the box has been wrongly substituted.
	if cfg.substCheck and args.subst == 'SUBST' then
		self.isSubstituted = true
	end

	-- Find whether we are using a small message box.
	if cfg.allowSmall and (
		cfg.smallParam and args.small == cfg.smallParam
		or not cfg.smallParam and yesno(args.small)
	)
	then
		self.isSmall = true
	else
		self.isSmall = false
	end

	-- Add attributes, classes and styles.
	if cfg.allowId then
		self.id = args.id
	end
	self:addClass(
		cfg.usePlainlinksParam and yesno(args.plainlinks or true) and 'plainlinks'
	)
	for _, class in ipairs(cfg.classes or {}) do
		self:addClass(class)
	end
	if self.isSmall then
		self:addClass(cfg.smallClass or 'mbox-small')
	end
	self:addClass(self.typeClass)
	self:addClass(args.class)
	self.style = args.style
	self.attrs = args.attrs

	-- Set text style.
	self.textstyle = args.textstyle

	-- Find if we are on the template page or not. This functionality is only
	-- used if useCollapsibleTextFields is set, or if both cfg.templateCategory
	-- and cfg.templateCategoryRequireName are set.
	self.useCollapsibleTextFields = cfg.useCollapsibleTextFields
	if self.useCollapsibleTextFields
		or cfg.templateCategory
		and cfg.templateCategoryRequireName
	then
		self.name = args.name
		if self.name then
			local templateName = mw.ustring.match(
				self.name,
				'^[tT][eE][mM][pP][lL][aA][tT][eE][%s_]*:[%s_]*(.*)$'
			) or self.name
			templateName = 'Template:' .. templateName
			self.templateTitle = getTitleObject(templateName)
		end
		self.isTemplatePage = self.templateTitle
			and mw.title.equals(self.title, self.templateTitle)
			or false
	end

	-- Process data for collapsible text fields. At the moment these are only
	-- used in {{ambox}}.
	if self.useCollapsibleTextFields then
		-- Get the self.issue value.
		if self.isSmall and args.smalltext then
			self.issue = args.smalltext
		else
			local sect
			if args.sect == '' then
				sect = 'This ' .. (cfg.sectionDefault or 'page')
			elseif type(args.sect) == 'string' then
				sect = 'This ' .. args.sect
			end
			local issue = args.issue
			issue = type(issue) == 'string' and issue ~= '' and issue or nil
			local text = args.text
			text = type(text) == 'string' and text or nil
			local issues = {}
			tinsert(issues, sect)
			tinsert(issues, issue)
			tinsert(issues, text)
			self.issue = tconcat(issues, ' ')
		end

		-- Get the self.talk value.
		local talk = args.talk
		-- Show talk links on the template page or template subpages if the talk
		-- parameter is blank.
		if talk == ''
			and self.templateTitle 
			and (
				mw.title.equals(self.templateTitle, self.title)
				or self.title:isSubpageOf(self.templateTitle)
			)
		then
			talk = '#'
		elseif talk == '' then
			talk = nil
		end
		if talk then
			-- If the talk value is a talk page, make a link to that page. Else
			-- assume that it's a section heading, and make a link to the talk
			-- page of the current page with that section heading.
			local talkTitle = getTitleObject(talk)
			local talkArgIsTalkPage = true
			if not talkTitle or not talkTitle.isTalkPage then
				talkArgIsTalkPage = false
				talkTitle = getTitleObject(
					self.title.text,
					mw.site.namespaces[self.title.namespace].talk.id
				)
			end
			if talkTitle and talkTitle.exists then
				local talkText = 'Relevant discussion may be found on'
				if talkArgIsTalkPage then
					talkText = format(
						'%s [[%s|%s]].',
						talkText,
						talk,
						talkTitle.prefixedText
					)
				else
					talkText = format(
						'%s the [[%s#%s|talk page]].',
						talkText,
						talkTitle.prefixedText,
						talk
					)
				end
				self.talk = talkText
			end
		end

		-- Get other values.
		self.fix = args.fix ~= '' and args.fix or nil
		local date
		if args.date and args.date ~= '' then
			date = args.date
		elseif args.date == '' and self.isTemplatePage then
			date = lang:formatDate('F Y')
		end
		if date then
			self.date = format(" &lt;small&gt;''(%s)''&lt;/small&gt;", date)
		end
		self.info = args.info
	end

	-- Set the non-collapsible text field. At the moment this is used by all box
	-- types other than ambox, and also by ambox when small=yes.
	if self.isSmall then
		self.text = args.smalltext or args.text
	else
		self.text = args.text
	end

	-- Set the below row.
	self.below = cfg.below and args.below

	-- General image settings.
	self.imageCellDiv = not self.isSmall and cfg.imageCellDiv and true or false
	self.imageEmptyCell = cfg.imageEmptyCell
	if cfg.imageEmptyCellStyle then
		self.imageEmptyCellStyle = 'border:none;padding:0px;width:1px'
	end

	-- Left image settings.
	local imageLeft = self.isSmall and args.smallimage or args.image
	if cfg.imageCheckBlank and imageLeft ~= 'blank' and imageLeft ~= 'none'
		or not cfg.imageCheckBlank and imageLeft ~= 'none'
	then
		self.imageLeft = imageLeft
		if not imageLeft then
			local imageSize = self.isSmall
				and (cfg.imageSmallSize or '30x30px')
				or '40x40px'
			self.imageLeft = format('[[File:%s|%s|link=|alt=]]', self.typeImage
				or 'Imbox notice.png', imageSize)
		end
	end

	-- Right image settings.
	local imageRight = self.isSmall and args.smallimageright or args.imageright
	if not (cfg.imageRightNone and imageRight == 'none') then
		self.imageRight = imageRight
	end

	-- Add mainspace categories. At the moment these are only used in {{ambox}}.
	if cfg.allowMainspaceCategories then
		if args.cat then
			args.cat1 = args.cat
		end
		self.catNums = getArgNums(args, 'cat')
		if args.category then
			args.category1 = args.category
		end
		self.categoryNums = getArgNums(args, 'category')
		if args.all then
			args.all1 = args.all
		end
		self.allNums = getArgNums(args, 'all')
		self.categoryParamNums = union(self.catNums, self.categoryNums)
		self.categoryParamNums = union(self.categoryParamNums, self.allNums)
		-- The following is roughly equivalent to the old {{Ambox/category}}.
		local date = args.date
		date = type(date) == 'string' and date
		local preposition = 'from'
		for _, num in ipairs(self.categoryParamNums) do
			local mainCat = args['cat' .. tostring(num)]
				or args['category' .. tostring(num)]
			local allCat = args['all' .. tostring(num)]
			mainCat = type(mainCat) == 'string' and mainCat
			allCat = type(allCat) == 'string' and allCat
			if mainCat and date and date ~= '' then
				local catTitle = format('%s %s %s', mainCat, preposition, date)
				self:addCat('main', catTitle)
				catTitle = getTitleObject('Category:' .. catTitle)
				if not catTitle or not catTitle.exists then
					self:addCat(
						'main',
						'Articles with invalid date parameter in template'
					)
				end
			elseif mainCat and (not date or date == '') then
				self:addCat('main', mainCat)
			end
			if allCat then
				self:addCat('main', allCat)
			end
		end
	end

	-- Add template-namespace categories.
	if cfg.templateCategory then
		if cfg.templateCategoryRequireName then
			if self.isTemplatePage then
				self:addCat('template', cfg.templateCategory)
			end
		elseif not self.title.isSubpage then
			self:addCat('template', cfg.templateCategory)
		end
	end

	-- Add template error category.
	if cfg.templateErrorCategory then
		local templateErrorCategory = cfg.templateErrorCategory
		local templateCat, templateSort
		if not self.name and not self.title.isSubpage then
			templateCat = templateErrorCategory
		elseif self.isTemplatePage then
			local paramsToCheck = cfg.templateErrorParamsToCheck or {}
			local count = 0
			for i, param in ipairs(paramsToCheck) do
				if not args[param] then
					count = count + 1
				end
			end
			if count &gt; 0 then
				templateCat = templateErrorCategory
				templateSort = tostring(count)
			end
			if self.categoryNums and #self.categoryNums &gt; 0 then
				templateCat = templateErrorCategory
				templateSort = 'C'
			end
		end
		self:addCat('template', templateCat, templateSort)
	end

	-- Categories for all namespaces.
	if self.invalidTypeError then
		local allSort = (self.nsid == 0 and 'Main:' or '') .. self.title.prefixedText
		self:addCat('all', 'Wikipedia message box parameter needs fixing', allSort)
	end
	if self.isSubstituted then
		self:addCat('all', 'Pages with incorrectly substituted templates')
	end

	-- Convert category tables to strings and pass them through
	-- [[Module:Category handler]].
	self.categories = categoryHandler{
		main = tconcat(self.mainCats or {}),
		template = tconcat(self.templateCats or {}),
		all = tconcat(self.allCats or {}),
		nocat = args.nocat,
		demospace = self.demospace,
		page = self.pageTitle and self.pageTitle.prefixedText or nil
	}
end

function box:export()
	local root = htmlBuilder.create()

	-- Add the subst check error.
	if self.isSubstituted and self.name then
		root
			.tag('b')
				.addClass('error')
				.wikitext(format(
					'Template &lt;code&gt;%s[[Template:%s|%s]]%s&lt;/code&gt; has been incorrectly substituted.',
					mw.text.nowiki('{{'), self.name, self.name, mw.text.nowiki('}}')
				))
	end

	-- Create the box table.
	local boxTable = root.tag('table')
	boxTable
		.attr('id', self.id)
	for i, class in ipairs(self.classes or {}) do
		boxTable
			.addClass(class)
	end
	boxTable
		.cssText(self.style)
		.attr('role', 'presentation')
	for attr, val in pairs(self.attrs or {}) do
		boxTable
			.attr(attr, val)
	end

	-- Add the left-hand image.
	local row = boxTable.tag('tr')
	if self.imageLeft then
		local imageLeftCell = row.tag('td').addClass('mbox-image')
		if self.imageCellDiv then
			-- If we are using a div, redefine imageLeftCell so that the image
			-- is inside it. Divs use style="width: 52px;", which limits the
			-- image width to 52px. If any images in a div are wider than that,
			-- they may overlap with the text or cause other display problems.
			imageLeftCell = imageLeftCell.tag('div').css('width', '52px') 
		end
		imageLeftCell
			.wikitext(self.imageLeft)
	elseif self.imageEmptyCell then
		-- Some message boxes define an empty cell if no image is specified, and
		-- some don't. The old template code in templates where empty cells are
		-- specified gives the following hint: "No image. Cell with some width
		-- or padding necessary for text cell to have 100% width."
		row.tag('td')
			.addClass('mbox-empty-cell') 
			.cssText(self.imageEmptyCellStyle)
	end

	-- Add the text.
	local textCell = row.tag('td').addClass('mbox-text')
	if self.useCollapsibleTextFields then
		-- The message box uses advanced text parameters that allow things to be
		-- collapsible. At the moment, only ambox uses this.
		textCell
			.cssText(self.textstyle)
		local textCellSpan = textCell.tag('span')
		textCellSpan
			.addClass('mbox-text-span')
			.wikitext(self.issue)
		if not self.isSmall then
			textCellSpan
				.tag('span')
					.addClass('hide-when-compact')
					.wikitext(self.talk and ' ' .. self.talk)
					.wikitext(self.fix and ' ' .. self.fix)
		end
		textCellSpan
			.wikitext(self.date and ' ' .. self.date)
		if not self.isSmall then
			textCellSpan
				.tag('span')
				.addClass('hide-when-compact')
				.wikitext(self.info and ' ' .. self.info)
		end
	else
		-- Default text formatting - anything goes.
		textCell
			.cssText(self.textstyle)
			.wikitext(self.text)
	end

	-- Add the right-hand image.
	if self.imageRight then
		local imageRightCell = row.tag('td').addClass('mbox-imageright')
		if self.imageCellDiv then
			-- If we are using a div, redefine imageRightCell so that the image
			-- is inside it.
			imageRightCell = imageRightCell.tag('div').css('width', '52px')
		end
		imageRightCell
			.wikitext(self.imageRight)
	end

	-- Add the below row.
	if self.below then
		boxTable.tag('tr')
			.tag('td')
				.attr('colspan', self.imageRight and '3' or '2')
				.addClass('mbox-text')
				.cssText(self.textstyle)
				.wikitext(self.below)
	end

	-- Add error message for invalid type parameters.
	if self.invalidTypeError then
		root
			.tag('div')
				.css('text-align', 'center')
				.wikitext(format(
					'This message box is using an invalid "type=%s" parameter and needs fixing.',
					self.type or ''
				))
	end

	-- Add categories.
	root
		.wikitext(self.categories)

	return tostring(root)
end

local function main(boxType, args)
	local outputBox = box.new()
	outputBox:setTitle(args)
	local cfg = outputBox:getConfig(boxType)
	args = outputBox:removeBlankArgs(cfg, args)
	outputBox:setBoxParameters(cfg, args)
	return outputBox:export()
end

local function makeWrapper(boxType)
	return function (frame)
		local args = getArgs(frame, {trim = false, removeBlanks = false})
		return main(boxType, args)
	end
end

local p = {
	main = main,
	mbox = makeWrapper('mbox')
}

for boxType in pairs(cfgTables) do
	p[boxType] = makeWrapper(boxType)
end

return p</text>
            <sha1>pfxm5hq7an9zemrjcn2d276uu0xlvky</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:Message box/configuration</title>
        <ns>828</ns>
        <id>669</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6957</id>
            <parentid>6956</parentid>
            <timestamp>2015-03-16T19:26:38Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="5405">local ambox = {
	types = {
		speedy = {
			class = 'ambox-speedy',
			image = 'Ambox speedy deletion.png'
		},
		delete = {
			class = 'ambox-delete',
			image = 'Ambox deletion.png'
		},
		content = {
			class = 'ambox-content',
			image = 'Ambox content.png'
		},
		style = {
			class = 'ambox-style',
			image = 'Edit-clear.svg'
		},
		move = {
			class = 'ambox-move',
			image = 'Ambox move.png'
		},
		protection = {
			class = 'ambox-protection',
			image = 'Ambox protection.png'
		},
		notice = {
			class = 'ambox-notice',
			image = 'Ambox notice.png'
		}
	},
	default                     = 'notice',
	allowBlankParams            = {'talk', 'sect', 'date', 'issue', 'fix', 'subst', 'hidden'},
	allowSmall                  = true,
	smallParam                  = 'left',
	smallClass                  = 'mbox-small-left',
	substCheck                  = true,
	classes                     = {'metadata', 'plainlinks', 'ambox'},
	imageEmptyCell              = true,
	imageCheckBlank             = true,
	imageSmallSize              = '20x20px',
	imageCellDiv                = true,
	useCollapsibleTextFields    = true,
	imageRightNone              = true,
	sectionDefault              = 'article',
	allowMainspaceCategories    = true,
	templateCategory            = 'Article message templates',
        templateCategoryRequireName = true,
	templateErrorCategory       = 'Article message templates with missing parameters',
	templateErrorParamsToCheck  = {'issue', 'fix', 'subst'}
}

local cmbox = {
	types = {
		speedy = {
			class = 'cmbox-speedy',
			image = 'Cmbox deletion.png'
		},
		delete = {
			class = 'cmbox-delete',
			image = 'Cmbox deletion.png'
		},
		content = {
			class = 'cmbox-content',
			image = 'Cmbox content.png'
		},
		style = {
			class = 'cmbox-style',
			image = 'Edit-clear.svg'
		},
		move = {
			class = 'cmbox-move',
			image = 'Cmbox move.png'
		},
		protection = {
			class = 'cmbox-protection',
			image = 'Cmbox protection.png'
		},
		notice = {
			class = 'cmbox-notice',
			image = 'Cmbox notice.png'
		}
	},
	default              = 'notice',
	showInvalidTypeError = true,
	classes              = {'plainlinks', 'cmbox'},
	imageEmptyCell       = true
}

local fmbox = {
	types = {
		warning = {
			class = 'fmbox-warning',
			image = 'Cmbox deletion.png'
		},
		editnotice = {
			class = 'fmbox-editnotice',
			image = 'Imbox notice.png'
		},
		system = {
			class = 'fmbox-system',
			image = 'Imbox notice.png'
		}
	},
	default              = 'system',
	showInvalidTypeError = true,
	allowId                = true,
	classes              = {'plainlinks', 'fmbox'},
	imageEmptyCell       = false,
	imageRightNone       = false
}

local imbox = {
	types = {
		speedy = {
			class = 'imbox-speedy',
			image = 'Imbox speedy deletion.png'
		},
		delete = {
			class = 'imbox-delete',
			image = 'Imbox deletion.png'
		},
		content = {
			class = 'imbox-content',
			image = 'Imbox content.png'
		},
		style = {
			class = 'imbox-style',
			image = 'Edit-clear.svg'
		},
		move = {
			class = 'imbox-move',
			image = 'Imbox move.png'
		},
		protection = {
			class = 'imbox-protection',
			image = 'Imbox protection.png'
		},
		license = {
			class = 'imbox-license',
			image = 'Imbox license.png'
		},
		featured = {
			class = 'imbox-featured',
			image = 'Imbox featured.png'
		},
		notice = {
			class = 'imbox-notice',
			image = 'Imbox notice.png'
		}
	},
	default              = 'notice',
	showInvalidTypeError = true,
	classes              = {'imbox'},
	usePlainlinksParam   = true,
	imageEmptyCell       = true,
	below                = true,
	templateCategory     = 'File message boxes'
}

local ombox = {
	types = {
		speedy = {
			class = 'ombox-speedy',
			image = 'Imbox speedy deletion.png'
		},
		delete = {
			class = 'ombox-delete',
			image = 'Imbox deletion.png'
		},
		content = {
			class = 'ombox-content',
			image = 'Imbox content.png'
		},
		style = {
			class = 'ombox-style',
			image = 'Edit-clear.svg'
		},
		move = {
			class = 'ombox-move',
			image = 'Imbox move.png'
		},
		protection = {
			class = 'ombox-protection',
			image = 'Imbox protection.png'
		},
		notice = {
			class = 'ombox-notice',
			image = 'Imbox notice.png'
		}
	},
	default              = 'notice',
	showInvalidTypeError = true,
	classes              = {'plainlinks', 'ombox'},
	allowSmall           = true,
	imageEmptyCell       = true,
	imageRightNone       = true
}

local tmbox = {
	types = {
		speedy = {
			class = 'tmbox-speedy',
			image = 'Imbox speedy deletion.png'
		},
		delete = {
			class = 'tmbox-delete',
			image = 'Imbox deletion.png'
		},
		content = {
			class = 'tmbox-content',
			image = 'Imbox content.png'
		},
		style = {
			class = 'tmbox-style',
			image = 'Edit-clear.svg '
		},
		move = {
			class = 'tmbox-move',
			image = 'Imbox move.png'
		},
		protection = {
			class = 'tmbox-protection',
			image = 'Imbox protection.png'
		},
		notice = {
			class = 'tmbox-notice',
			image = 'Imbox notice.png'
		}
	},
	default              = 'notice',
	showInvalidTypeError = true,
	classes              = {'plainlinks', 'tmbox'},
	allowId              = true,
	allowSmall           = true,
	imageRightNone       = true,
	imageEmptyCell       = true,
	imageEmptyCellStyle  = true,
	templateCategory     = 'Talk message boxes'
}

return {
	ambox = ambox,
	cmbox = cmbox,
	fmbox = fmbox,
	imbox = imbox,
	ombox = ombox,
	tmbox = tmbox
}</text>
            <sha1>hw6xn0k5hxmx22jmgmith42r5ccwspz</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:Namespace detect</title>
        <ns>828</ns>
        <id>670</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6959</id>
            <parentid>6958</parentid>
            <timestamp>2015-03-16T19:26:38Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="5992">--[[
--------------------------------------------------------------------------------
--                                                                            --
--                            NAMESPACE DETECT                                --
--                                                                            --
-- This module implements the {{namespace detect}} template in Lua, with a    --
-- few improvements: all namespaces and all namespace aliases are supported,  --
-- and namespace names are detected automatically for the local wiki. The     --
-- module can also use the corresponding subject namespace value if it is     --
-- used on a talk page. Parameter names can be configured for different wikis --
-- by altering the values in the "cfg" table in                               --
-- Module:Namespace detect/config.                                            --
--                                                                            --
--------------------------------------------------------------------------------
--]]

local data = mw.loadData('Module:Namespace detect/data')
local argKeys = data.argKeys
local cfg = data.cfg
local mappings = data.mappings

local yesno = require('Module:Yesno')
local mArguments -- Lazily initialise Module:Arguments
local mTableTools -- Lazily initilalise Module:TableTools
local ustringLower = mw.ustring.lower

local p = {}

local function fetchValue(t1, t2)
	-- Fetches a value from the table t1 for the first key in array t2 where
	-- a non-nil value of t1 exists.
	for i, key in ipairs(t2) do
		local value = t1[key]
		if value ~= nil then
			return value
		end
	end
	return nil
end

local function equalsArrayValue(t, value)
	-- Returns true if value equals a value in the array t. Otherwise
	-- returns false.
	for i, arrayValue in ipairs(t) do
		if value == arrayValue then
			return true
		end
	end
	return false
end

function p.getPageObject(page)
	-- Get the page object, passing the function through pcall in case of
	-- errors, e.g. being over the expensive function count limit.
	if page then
		local success, pageObject = pcall(mw.title.new, page)
		if success then
			return pageObject
		else
			return nil
		end
	else
		return mw.title.getCurrentTitle()
	end
end

-- Provided for backward compatibility with other modules
function p.getParamMappings()
	return mappings
end

local function getNamespace(args)
	-- This function gets the namespace name from the page object.
	local page = fetchValue(args, argKeys.demopage)
	if page == '' then
		page = nil
	end
	local demospace = fetchValue(args, argKeys.demospace)
	if demospace == '' then
		demospace = nil
	end
	local subjectns = fetchValue(args, argKeys.subjectns)
	local ret
	if demospace then
		-- Handle "demospace = main" properly.
		if equalsArrayValue(argKeys.main, ustringLower(demospace)) then
			ret = mw.site.namespaces[0].name
		else
			ret = demospace
		end
	else
		local pageObject = p.getPageObject(page)
		if pageObject then
			if pageObject.isTalkPage then
				-- Get the subject namespace if the option is set,
				-- otherwise use "talk".
				if yesno(subjectns) then
					ret = mw.site.namespaces[pageObject.namespace].subject.name
				else
					ret = 'talk'
				end
			else
				ret = pageObject.nsText
			end
		else
			return nil -- return nil if the page object doesn't exist.
		end
	end
	ret = ret:gsub('_', ' ')
	return ustringLower(ret)
end

function p._main(args)
	-- Check the parameters stored in the mappings table for any matches.
	local namespace = getNamespace(args) or 'other' -- "other" avoids nil table keys
	local params = mappings[namespace] or {}
	local ret = fetchValue(args, params)
	--[[
	-- If there were no matches, return parameters for other namespaces.
	-- This happens if there was no text specified for the namespace that
	-- was detected or if the demospace parameter is not a valid
	-- namespace. Note that the parameter for the detected namespace must be
	-- completely absent for this to happen, not merely blank.
	--]]
	if ret == nil then
		ret = fetchValue(args, argKeys.other)
	end
	return ret
end

function p.main(frame)
	mArguments = require('Module:Arguments')
	local args = mArguments.getArgs(frame, {removeBlanks = false})
	local ret = p._main(args)
	return ret or ''
end

function p.table(frame)
	--[[
	-- Create a wikitable of all subject namespace parameters, for
	-- documentation purposes. The talk parameter is optional, in case it
	-- needs to be excluded in the documentation.
	--]]
	
	-- Load modules and initialise variables.
	mTableTools = require('Module:TableTools')
	local namespaces = mw.site.namespaces
	local cfg = data.cfg
	local useTalk = type(frame) == 'table' 
		and type(frame.args) == 'table' 
		and yesno(frame.args.talk) -- Whether to use the talk parameter.
	
	-- Get the header names.
	local function checkValue(value, default)
		if type(value) == 'string' then
			return value
		else
			return default
		end
	end
	local nsHeader = checkValue(cfg.wikitableNamespaceHeader, 'Namespace')
	local aliasesHeader = checkValue(cfg.wikitableAliasesHeader, 'Aliases')

	-- Put the namespaces in order.
	local mappingsOrdered = {}
	for nsname, params in pairs(mappings) do
		if useTalk or nsname ~= 'talk' then
			local nsid = namespaces[nsname].id
			-- Add 1, as the array must start with 1; nsid 0 would be lost otherwise.
			nsid = nsid + 1 
			mappingsOrdered[nsid] = params
		end
	end
	mappingsOrdered = mTableTools.compressSparseArray(mappingsOrdered)

	-- Build the table.
	local ret = '{| class="wikitable"'
		.. '\n|-'
		.. '\n! ' .. nsHeader
		.. '\n! ' .. aliasesHeader
	for i, params in ipairs(mappingsOrdered) do
		for j, param in ipairs(params) do
			if j == 1 then
				ret = ret .. '\n|-'
					.. '\n| &lt;code&gt;' .. param .. '&lt;/code&gt;'
					.. '\n| '
			elseif j == 2 then
				ret = ret .. '&lt;code&gt;' .. param .. '&lt;/code&gt;'
			else
				ret = ret .. ', &lt;code&gt;' .. param .. '&lt;/code&gt;'
			end
		end
	end
	ret = ret .. '\n|-'
		.. '\n|}'
	return ret
end

return p</text>
            <sha1>j7kygz1y56jpz4doq0m2c6x1td5d8ar</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:Namespace detect/config</title>
        <ns>828</ns>
        <id>671</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6961</id>
            <parentid>6960</parentid>
            <timestamp>2015-03-16T19:26:38Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="3545">--------------------------------------------------------------------------------
--                    Namespace detect configuration data                     --
--                                                                            --
-- This module stores configuration data for Module:Namespace detect. Here    --
-- you can localise the module to your wiki's language.                       --
--                                                                            --
-- To activate a configuration item, you need to uncomment it. This means     --
-- that you need to remove the text "-- " at the start of the line.           --
--------------------------------------------------------------------------------

local cfg = {} -- Don't edit this line.

--------------------------------------------------------------------------------
--                              Parameter names                               --
-- These configuration items specify custom parameter names. Values added     --
-- here will work in addition to the default English parameter names.         --
-- To add one extra name, you can use this format:                            --
--                                                                            --
-- cfg.foo = 'parameter name'                                                 --
--                                                                            --
-- To add multiple names, you can use this format:                            --
--                                                                            --
-- cfg.foo = {'parameter name 1', 'parameter name 2', 'parameter name 3'}     --
--------------------------------------------------------------------------------

---- This parameter displays content for the main namespace:
-- cfg.main = 'main'

---- This parameter displays in talk namespaces:
-- cfg.talk = 'talk'

---- This parameter displays content for "other" namespaces (namespaces for which
---- parameters have not been specified):
-- cfg.other = 'other'

---- This parameter makes talk pages behave as though they are the corresponding
---- subject namespace. Note that this parameter is used with [[Module:Yesno]].
---- Edit that module to change the default values of "yes", "no", etc.
-- cfg.subjectns = 'subjectns'

---- This parameter sets a demonstration namespace:
-- cfg.demospace = 'demospace'

---- This parameter sets a specific page to compare:
cfg.demopage = 'page'

--------------------------------------------------------------------------------
--                           Table configuration                              --
-- These configuration items allow customisation of the "table" function,     --
-- used to generate a table of possible parameters in the module              --
-- documentation.                                                             --
--------------------------------------------------------------------------------

---- The header for the namespace column in the wikitable containing the list of
---- possible subject-space parameters.
-- cfg.wikitableNamespaceHeader = 'Namespace'

---- The header for the wikitable containing the list of possible subject-space
---- parameters.
-- cfg.wikitableAliasesHeader = 'Aliases'

--------------------------------------------------------------------------------
--                        End of configuration data                           --
--------------------------------------------------------------------------------

return cfg -- Don't edit this line.</text>
            <sha1>1o6ozz56i8q0xgyl6xa41n2v7kelhli</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:Namespace detect/data</title>
        <ns>828</ns>
        <id>672</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6963</id>
            <parentid>6962</parentid>
            <timestamp>2015-03-16T19:26:39Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2569">--------------------------------------------------------------------------------
--                          Namespace detect data                             --
-- This module holds data for [[Module:Namespace detect]] to be loaded per    --
-- page, rather than per #invoke, for performance reasons.                    --
--------------------------------------------------------------------------------

local cfg = require('Module:Namespace detect/config')

local function addKey(t, key, defaultKey)
	if key ~= defaultKey then
		t[#t + 1] = key
	end
end

-- Get a table of parameters to query for each default parameter name.
-- This allows wikis to customise parameter names in the cfg table while
-- ensuring that default parameter names will always work. The cfg table
-- values can be added as a string, or as an array of strings.

local defaultKeys = {
	'main',
	'talk',
	'other',
	'subjectns',
	'demospace',
	'demopage'
}

local argKeys = {}
for i, defaultKey in ipairs(defaultKeys) do
	argKeys[defaultKey] = {defaultKey}
end

for defaultKey, t in pairs(argKeys) do
	local cfgValue = cfg[defaultKey]
	local cfgValueType = type(cfgValue)
	if cfgValueType == 'string' then
		addKey(t, cfgValue, defaultKey)
	elseif cfgValueType == 'table' then
		for i, key in ipairs(cfgValue) do
			addKey(t, key, defaultKey)
		end
	end
	cfg[defaultKey] = nil -- Free the cfg value as we don't need it any more.
end

local function getParamMappings()
	--[[
	-- Returns a table of how parameter names map to namespace names. The keys
	-- are the actual namespace names, in lower case, and the values are the
	-- possible parameter names for that namespace, also in lower case. The
	-- table entries are structured like this:
	-- {
	--   [''] = {'main'},
	--   ['wikipedia'] = {'wikipedia', 'project', 'wp'},
	--   ...
	-- }
	--]]
	local mappings = {}
	local mainNsName = mw.site.subjectNamespaces[0].name
	mainNsName = mw.ustring.lower(mainNsName)
	mappings[mainNsName] = mw.clone(argKeys.main)
	mappings['talk'] = mw.clone(argKeys.talk)
	for nsid, ns in pairs(mw.site.subjectNamespaces) do
		if nsid ~= 0 then -- Exclude main namespace.
			local nsname = mw.ustring.lower(ns.name)
			local canonicalName = mw.ustring.lower(ns.canonicalName)
			mappings[nsname] = {nsname}
			if canonicalName ~= nsname then
				table.insert(mappings[nsname], canonicalName)
			end
			for _, alias in ipairs(ns.aliases) do
				table.insert(mappings[nsname], mw.ustring.lower(alias))
			end
		end
	end
	return mappings
end

return {
	argKeys = argKeys,
	cfg = cfg,
	mappings = getParamMappings()
}</text>
            <sha1>ojp6d3pc8mql5nufaqdg576c9so3479</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:Navbar</title>
        <ns>828</ns>
        <id>673</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6965</id>
            <parentid>6964</parentid>
            <timestamp>2015-03-16T19:26:39Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="3378">local p = {}

local getArgs
local HtmlBuilder = require('Module:HtmlBuilder')

local function trim(s)
	return mw.ustring.match(s, "^%s*(.-)%s*$")
end

local function htmlError(s)
	local span = HtmlBuilder.create('span')

	span
		.addClass('error')
		.css('float', 'left')
		.css('white-space', 'nowrap')
		.wikitext('Error: ' .. s)

	return tostring(span)
end

local function getTitle(pageName)
	pageName = trim(pageName);
	local page_title, talk_page_title;

	if mw.ustring.sub(pageName, 1, 1) == ':' then
		page_title = mw.title.new( mw.ustring.sub(pageName, 2));
	else
		page_title = mw.title.new(pageName, 'Template');
	end

	if page_title then
		talk_page_title = page_title.talkPageTitle;
	else
		talk_page_title = nil;
	end

	return page_title, talk_page_title;
end

function p._navbar(args)
	local good, title, talk_title;
	local titleArg = 1
	
	if args.collapsible then
		titleArg = 2
		if not args.plain then
			args.mini = 1
		end
		if args.fontcolor then
			args.fontstyle = 'color:' .. args.fontcolor .. ';'
		end
		args.style = 'float:left; text-align:left; width:6em;'
	end
	
	good, title, talk_title = pcall(getTitle, args[titleArg] or (':' .. mw.getCurrentFrame():getParent():getTitle()));
	if not good then
		return htmlError(title);
	end

	if not title then
		return htmlError('Page does not exist')
	end

	local mainpage = title.fullText;
	local talkpage = talk_title and talk_title.fullText or ''
	local editurl = title:fullUrl('action=edit');

	local viewLink, talkLink, editLink = 'view', 'talk', 'edit'
	if args.mini then
		viewLink, talkLink, editLink = 'v', 't', 'e'
	end

	local div = HtmlBuilder.create().tag('div')
	div
		.addClass('plainlinks')
		.addClass('hlist')
		.addClass('navbar')
		.cssText(args.style)

	if args.mini then div.addClass('mini') end

	if not (args.mini or args.plain) then
		div
			.tag('span')
				.css('word-spacing', 0)
				.cssText(args.fontstyle)
				.wikitext(args.text or 'This box:')
				.wikitext(' ')
	end

	if args.brackets then
		div
			.tag('span')
				.css('margin-right', '-0.125em')
				.cssText(args.fontstyle)
				.wikitext('&amp;#91;')
				.newline();
	end

	local ul = div.tag('ul');

	ul
		.tag('li')
			.addClass('nv-view')
			.wikitext('[[' .. mainpage .. '|')
			.tag('span')
				.attr('title', 'View this template')
				.cssText(args.fontstyle or '')
				.wikitext(viewLink)
				.done()
			.wikitext(']]')
			.done()
		.tag('li')
			.addClass('nv-talk')
			.wikitext('[[' .. talkpage .. '|')
			.tag('span')
				.attr('title', 'Discuss this template')
				.cssText(args.fontstyle or '')
				.wikitext(talkLink)
				.done()
			.wikitext(']]');

	if not args.noedit then
		ul
			.tag('li')
				.addClass('nv-edit')
				.wikitext('[' .. editurl .. ' ')
				.tag('span')
					.attr('title', 'Edit this template')
					.cssText(args.fontstyle or '')
					.wikitext(editLink)
					.done()
				.wikitext(']');
	end

	if args.brackets then
		div
			.tag('span')
				.css('margin-left', '-0.125em')
				.cssText( args.fontstyle or '')
				.wikitext('&amp;#93;')
				.newline();
	end
	
	if args.collapsible then
		div
			.done()
		.tag('span')
			.css('font-size', '110%')
			.cssText(args.fontstyle or '')
			.wikitext(args[1])
	end

	return tostring(div.allDone())
end

function p.navbar(frame)
	if not getArgs then
		getArgs = require('Module:Arguments').getArgs
	end
	return p._navbar(getArgs(frame))
end

return p</text>
            <sha1>j7p5dh2bvjhjjc8ldrudu3mm19xz9q6</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:Navbox</title>
        <ns>828</ns>
        <id>674</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6967</id>
            <parentid>6966</parentid>
            <timestamp>2015-03-16T19:26:39Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="11905">--
-- This module will implement {{Navbox}}
--
 
local p = {}
 
local HtmlBuilder = require('Module:HtmlBuilder')
local navbar = require('Module:Navbar')._navbar
local getArgs -- lazily initialized

local args
local tableRowAdded = false
local border
local listnums = {}
 
local function trim(s)
    return (mw.ustring.gsub(s, "^%s*(.-)%s*$", "%1"))
end

local function addNewline(s)
    if s:match('^[*:;#]') or s:match('^{|') then
        return '\n' .. s ..'\n'
    else
        return s
    end
end

local function addTableRow(tbl)
    -- If any other rows have already been added, then we add a 2px gutter row.
    if tableRowAdded then
        tbl
            .tag('tr')
                .css('height', '2px')
                .tag('td')
                	.attr('colspan',2)
    end
    
    tableRowAdded = true
    
    return tbl.tag('tr')
end

local function renderNavBar(titleCell)
    -- Depending on the presence of the navbar and/or show/hide link, we may need to add a spacer div on the left
    -- or right to keep the title centered.
    local spacerSide = nil

    if args.navbar == 'off' then
        -- No navbar, and client wants no spacer, i.e. wants the title to be shifted to the left. If there's
        -- also no show/hide link, then we need a spacer on the right to achieve the left shift.
        if args.state == 'plain' then spacerSide = 'right' end
    elseif args.navbar == 'plain' or (not args.name and mw.getCurrentFrame():getParent():getTitle() == 'Template:Navbox' and (border == 'subgroup' or border == 'child' or border == 'none')) then
        -- No navbar. Need a spacer on the left to balance out the width of the show/hide link.
        if args.state ~= 'plain' then spacerSide = 'left' end
    else
        -- Will render navbar (or error message). If there's no show/hide link, need a spacer on the right
        -- to balance out the width of the navbar.
        if args.state == 'plain' then spacerSide = 'right' end

        titleCell.wikitext(navbar{ 
            args.name, 
            mini = 1, 
            fontstyle = (args.basestyle or '') .. ';' .. (args.titlestyle or '') ..  ';background:none transparent;border:none;'
        })
    end
    
    -- Render the spacer div.
    if spacerSide then
        titleCell
            .tag('span')
                .css('float', spacerSide)
                .css('width', '6em')
                .wikitext('&amp;nbsp;')
    end
end

--
--   Title row
--
local function renderTitleRow(tbl)
    if not args.title then return end
 
    local titleRow = addTableRow(tbl)
     
    if args.titlegroup then
        titleRow
            .tag('th')
                .attr('scope', 'row')
                .addClass('navbox-group')
                .addClass(args.titlegroupclass)
                .cssText(args.basestyle)
                .cssText(args.groupstyle)
                .cssText(args.titlegroupstyle)
                .wikitext(args.titlegroup)
    end
    
    local titleCell = titleRow.tag('th').attr('scope', 'col')
            
    if args.titlegroup then
        titleCell
            .css('border-left', '2px solid #fdfdfd')
            .css('width', '100%')
    end
    
    local titleColspan = 2
    if args.imageleft then titleColspan = titleColspan + 1 end
    if args.image then titleColspan = titleColspan + 1 end
    if args.titlegroup then titleColspan = titleColspan - 1 end
    
    titleCell
        .cssText(args.basestyle)
        .cssText(args.titlestyle)
        .addClass('navbox-title')
        .attr('colspan', titleColspan)
 
    renderNavBar(titleCell)

    titleCell
         .tag('div')
             .addClass(args.titleclass)
             .css('font-size', '110%')
             .wikitext(addNewline(args.title))
end

--
--   Above/Below rows
--

local function getAboveBelowColspan()
    local ret = 2
    if args.imageleft then ret = ret + 1 end
    if args.image then ret = ret + 1 end
    return ret
end

local function renderAboveRow(tbl)
    if not args.above then return end

    addTableRow(tbl)
        .tag('td')
            .addClass('navbox-abovebelow')
            .addClass(args.aboveclass)
            .cssText(args.basestyle)
            .cssText(args.abovestyle)
            .attr('colspan', getAboveBelowColspan())
            .tag('div')
                .wikitext(addNewline(args.above))
end

local function renderBelowRow(tbl)
    if not args.below then return end

    addTableRow(tbl)
        .tag('td')
            .addClass('navbox-abovebelow')
            .addClass(args.belowclass)
            .cssText(args.basestyle)
            .cssText(args.belowstyle)
            .attr('colspan', getAboveBelowColspan())
            .tag('div')
                .wikitext(addNewline(args.below))
end
 
--
--   List rows
--
local function renderListRow(tbl, listnum)
    local row = addTableRow(tbl)
    
    if listnum == 1 and args.imageleft then
        row
            .tag('td')
                .addClass('navbox-image')
                .addClass(args.imageclass)
                .css('width', '0%')
                .css('padding', '0px 2px 0px 0px')
                .cssText(args.imageleftstyle)
                .attr('rowspan', 2 * #listnums - 1)
                .tag('div')
                    .wikitext(addNewline(args.imageleft))
    end
 
    if args['group' .. listnum] then
        local groupCell = row.tag('th')
        
        groupCell
               .attr('scope', 'row')
               .addClass('navbox-group')
               .addClass(args.groupclass)
               .cssText(args.basestyle)
               
        if args.groupwidth then
            groupCell.css('width', args.groupwidth)
        end
           
        groupCell
            .cssText(args.groupstyle)
            .cssText(args['group' .. listnum .. 'style'])
            .wikitext(args['group' .. listnum])
    end
    
    local listCell = row.tag('td')

    if args['group' .. listnum] then
        listCell
            .css('text-align', 'left')
            .css('border-left-width', '2px')
            .css('border-left-style', 'solid')
    else
        listCell.attr('colspan', 2)
    end
    
    if not args.groupwidth then 
        listCell.css('width', '100%')
    end
    
    local isOdd = (listnum % 2) == 1
    local rowstyle = args.evenstyle
    if isOdd then rowstyle = args.oddstyle end
 
    local evenOdd
    if args.evenodd == 'swap' then
        if isOdd then evenOdd = 'even' else evenOdd = 'odd' end
    else
        if isOdd then evenOdd = args.evenodd or 'odd' else evenOdd = args.evenodd or 'even' end
    end

    listCell
        .css('padding', '0px')
        .cssText(args.liststyle)
        .cssText(rowstyle)
        .cssText(args['list' .. listnum .. 'style'])
        .addClass('navbox-list')
        .addClass('navbox-' .. evenOdd)
        .addClass(args.listclass)
        .tag('div')
            .css('padding', (listnum == 1 and args.list1padding) or args.listpadding or '0em 0.25em')
            .wikitext(addNewline(args['list' .. listnum]))

    if listnum == 1 and args.image then
        row
            .tag('td')
                .addClass('navbox-image')
                .addClass(args.imageclass)
                .css('width', '0%')
                .css('padding', '0px 0px 0px 2px')
                .cssText(args.imagestyle)
                .attr('rowspan', 2 * #listnums - 1)
                .tag('div')
                    .wikitext(addNewline(args.image))
    end
end


--
--   Tracking categories
--

local function needsHorizontalLists()
    if border == 'child' or border == 'subgroup'  or args.tracking == 'no' then return false end
    
    local listClasses = {'plainlist', 'hlist', 'hlist hnum', 'hlist hwrap', 'hlist vcard', 'vcard hlist', 'hlist vevent'}
    for i, cls in ipairs(listClasses) do
        if args.listclass == cls or args.bodyclass == cls then
            return false
        end
    end

    return true
end

local function hasBackgroundColors()
    return mw.ustring.match(args.titlestyle or '','background') or mw.ustring.match(args.groupstyle or '','background') or mw.ustring.match(args.basestyle or '','background')
end

local function getTrackingCategories()
    local cats = {}
    if needsHorizontalLists() then table.insert(cats, 'Navigational boxes without horizontal lists') end
    if hasBackgroundColors() then table.insert(cats, 'Navboxes using background colours') end
    return cats
end

local function renderTrackingCategories(builder)
    local title = mw.title.getCurrentTitle()
    if title.namespace ~= 10 then return end -- not in template space
    local subpage = title.subpageText
    if subpage == 'doc' or subpage == 'sandbox' or subpage == 'testcases' then return end
    
    for i, cat in ipairs(getTrackingCategories()) do
        builder.wikitext('[[Category:' .. cat .. ']]') 
    end
end

--
--   Main navbox tables
--
local function renderMainTable()
    local tbl = HtmlBuilder.create('table')
        .attr('cellspacing', 0)
        .addClass('nowraplinks')
        .addClass(args.bodyclass)
             
    if args.title and (args.state ~= 'plain' and args.state ~= 'off') then
        tbl
            .addClass('collapsible')
            .addClass(args.state or 'autocollapse')
    end
 
    tbl.css('border-spacing', 0)
    if border == 'subgroup' or border == 'child' or border == 'none' then
        tbl
            .addClass('navbox-subgroup')
            .cssText(args.bodystyle)
            .cssText(args.style)
    else -- regular navobx - bodystyle and style will be applied to the wrapper table
        tbl
            .addClass('navbox-inner')
            .css('background', 'transparent')
            .css('color', 'inherit')
    end
    tbl.cssText(args.innerstyle)
 
    renderTitleRow(tbl)
    renderAboveRow(tbl)
    for i, listnum in ipairs(listnums) do
        renderListRow(tbl, listnum) 
    end
    renderBelowRow(tbl)
    
    return tbl
end

function p._navbox(navboxArgs)
    args = navboxArgs
    
    for k, v in pairs(args) do
        local listnum = ('' .. k):match('^list(%d+)$')
        if listnum then table.insert(listnums, tonumber(listnum)) end
    end
    table.sort(listnums)
 
    border = trim(args.border or args[1] or '')

    -- render the main body of the navbox
    local tbl = renderMainTable()

    -- render the appropriate wrapper around the navbox, depending on the border param
    local res = HtmlBuilder.create()
    if border == 'none' then
        res.node(tbl)
    elseif border == 'subgroup' or border == 'child' then
        -- We assume that this navbox is being rendered in a list cell of a parent navbox, and is
        -- therefore inside a div with padding:0em 0.25em. We start with a &lt;/div&gt; to avoid the
        -- padding being applied, and at the end add a &lt;div&gt; to balance out the parent's &lt;/div&gt;
        res
            .tag('/div', {unclosed = true})
                .done()
            .node(tbl)
            .tag('div', {unclosed = true})
    else
        res
            .tag('table')
                .attr('cellspacing', 0)
                .addClass('navbox')
                .css('border-spacing', 0)
                .cssText(args.bodystyle)
                .cssText(args.style)
                .tag('tr')
                    .tag('td')
                        .css('padding', '2px')
                        .node(tbl)
    end
 
    renderTrackingCategories(res)
 
    return tostring(res)
end
 
function p.navbox(frame)
    if not getArgs then
    	getArgs = require('Module:Arguments').getArgs
    end
    args = getArgs(frame, {wrappers = 'Template:Navbox'})

    -- Read the arguments in the order they'll be output in, to make references number in the right order.
    local _
    _ = args.title
    _ = args.above
    for i = 1, 20 do
        _ = args["group" .. tostring(i)]
        _ = args["list" .. tostring(i)]
    end    
    _ = args.below

    return p._navbox(args)
end
 
return p</text>
            <sha1>ffjbkwfc97nn52m7mejsnxq0yr2xod5</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:No globals</title>
        <ns>828</ns>
        <id>675</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6969</id>
            <parentid>6968</parentid>
            <timestamp>2015-03-16T19:26:40Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="307">local mt = getmetatable(_G) or {}
function mt.__index (t, k)
	if k ~= 'arg' then
		error('Tried to read nil global ' .. tostring(k), 2)
	end
	return nil
end
function mt.__newindex(t, k, v)
	if k ~= 'arg' then
		error('Tried to write global ' .. tostring(k), 2)
	end
	rawset(t, k, v)
end
setmetatable(_G, mt)</text>
            <sha1>gggsv54pq7f94l3up48hr91qtxnskdm</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:Protection banner</title>
        <ns>828</ns>
        <id>676</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6971</id>
            <parentid>6970</parentid>
            <timestamp>2015-03-16T19:26:40Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="26704">-- This module implements {{pp-meta}} and its daughter templates such as
-- {{pp-dispute}}, {{pp-vandalism}} and {{pp-sock}}.

-- Initialise necessary modules.
require('Module:No globals')
local newFileLink = require('Module:File link').new
local effectiveProtectionLevel = require('Module:Effective protection level')._main
local yesno = require('Module:Yesno')

-- Lazily initialise modules and objects we don't always need.
local getArgs, makeMessageBox, lang

-- Set constants.
local CONFIG_MODULE = 'Module:Protection banner/config'

--------------------------------------------------------------------------------
-- Helper functions
--------------------------------------------------------------------------------

local function makeCategoryLink(cat, sort)
	local nsText = mw.site.namespaces[14].name
	if cat and sort then
		return string.format(
			'[[%s:%s|%s]]',
			nsText,
			cat,
			sort
		)
	elseif cat then
		return string.format(
			'[[%s:%s]]',
			nsText,
			cat
		)
	else
		return ''
	end
end

-- Validation function for the expiry and the protection date
local function validateDate(dateString, dateType)
	lang = lang or mw.language.getContentLanguage()
	local success, result = pcall(lang.formatDate, lang, 'U', dateString)
	if success then
		result = tonumber(result)
		if result then
			return result
		end
	end
	error(string.format(
		'invalid %s ("%s")',
		dateType,
		tostring(dateString)
	), 0)
end

local function makeFullUrl(page, query, display)
	return string.format(
		'[%s %s]',
		tostring(mw.uri.fullUrl(page, query)),
		display
	)
end

local function toTableEnd(t, pos)
	-- Sends the value at position pos to the end of array t, and shifts the
	-- other items down accordingly.
	return table.insert(t, table.remove(t, pos))
end

local function walkHierarchy(hierarchy, start)
	local toWalk, retval = {[start] = true}, {}
	while true do
		-- Can't use pairs() since we're adding and removing things as we're iterating
		local k = next(toWalk)
		if k == nil then break end
		toWalk[k] = nil
		retval[k] = true
		for _,v in ipairs(hierarchy[k]) do
			if not retval[v] then
				toWalk[v] = true
			end
		end
	end
	return retval
end

--------------------------------------------------------------------------------
-- Protection class
--------------------------------------------------------------------------------

local Protection = {}
Protection.__index = Protection

Protection.supportedActions = {
	edit = true,
	move = true,
	autoreview = true
}

Protection.bannerConfigFields = {
	'text',
	'explanation',
	'tooltip',
	'alt',
	'link',
	'image'
}

function Protection.new(args, cfg, title)
	local obj = {}
	obj._cfg = cfg
	obj.title = title or mw.title.getCurrentTitle()

	-- Set action
	if not args.action then
		obj.action = 'edit'
	elseif Protection.supportedActions[args.action] then
		obj.action = args.action
	else
		error(string.format(
			'invalid action ("%s")',
			tostring(args.action)
		), 0)
	end

	-- Set level
	obj.level = effectiveProtectionLevel(obj.action, obj.title)
	if obj.level == 'accountcreator' then
		-- Lump titleblacklisted pages in with template-protected pages,
		-- since templateeditors can do both.
		obj.level = 'templateeditor'
	elseif not obj.level or (obj.action == 'move' and obj.level == 'autoconfirmed') then
		-- Users need to be autoconfirmed to move pages anyway, so treat
		-- semi-move-protected pages as unprotected.
		obj.level = '*'
	end

	-- Set expiry
	if args.expiry then
		if cfg.indefStrings[args.expiry] then
			obj.expiry = 'indef'
		elseif type(args.expiry) == 'number' then
			obj.expiry = args.expiry
		else
			obj.expiry = validateDate(args.expiry, 'expiry date')
		end
	end

	-- Set reason
	if args[1] then
		obj.reason = mw.ustring.lower(args[1])
		if obj.reason:find('|') then
			error('reasons cannot contain the pipe character ("|")', 0)
		end
	end

	-- Set protection date
	if args.date then
		obj.protectionDate = validateDate(args.date, 'protection date')
	end
	
	-- Set banner config
	do
		obj.bannerConfig = {}
		local configTables = {}
		if cfg.banners[obj.action] then
			configTables[#configTables + 1] = cfg.banners[obj.action][obj.reason]
		end
		if cfg.defaultBanners[obj.action] then
			configTables[#configTables + 1] = cfg.defaultBanners[obj.action][obj.level]
			configTables[#configTables + 1] = cfg.defaultBanners[obj.action].default
		end
		configTables[#configTables + 1] = cfg.masterBanner
		for i, field in ipairs(Protection.bannerConfigFields) do
			for j, t in ipairs(configTables) do
				if t[field] then
					obj.bannerConfig[field] = t[field]
					break
				end
			end
		end
	end
	return setmetatable(obj, Protection)
end

function Protection:isProtected()
	return self.level ~= '*'
end

function Protection:isTemporary()
	return type(self.expiry) == 'number'
end

function Protection:makeProtectionCategory()
	local cfg = self._cfg
	local title = self.title
	
	-- Exit if the page is not protected.
	if not self:isProtected() then
		return ''
	end
	
	-- Get the expiry key fragment.
	local expiryFragment
	if self.expiry == 'indef' then
		expiryFragment = self.expiry
	elseif type(self.expiry) == 'number' then
		expiryFragment = 'temp'
	end

	-- Get the namespace key fragment.
	local namespaceFragment
	do
		namespaceFragment = cfg.categoryNamespaceKeys[title.namespace]
		if not namespaceFragment and title.namespace % 2 == 1 then
				namespaceFragment = 'talk'
		end
	end
 
	-- Define the order that key fragments are tested in. This is done with an
	-- array of tables containing the value to be tested, along with its
	-- position in the cfg.protectionCategories table.
	local order = {
		{val = expiryFragment,    keypos = 1},
		{val = namespaceFragment, keypos = 2},
		{val = self.reason,       keypos = 3},
		{val = self.level,        keypos = 4},
		{val = self.action,       keypos = 5}
	}

	--[[
	-- The old protection templates used an ad-hoc protection category system,
	-- with some templates prioritising namespaces in their categories, and
	-- others prioritising the protection reason. To emulate this in this module
	-- we use the config table cfg.reasonsWithNamespacePriority to set the
	-- reasons for which namespaces have priority over protection reason.
	-- If we are dealing with one of those reasons, move the namespace table to
	-- the end of the order table, i.e. give it highest priority. If not, the
	-- reason should have highest priority, so move that to the end of the table
	-- instead.
	--]]
	if self.reason and cfg.reasonsWithNamespacePriority[self.reason] then
		-- table.insert(order, 3, table.remove(order, 2))
		toTableEnd(order, 2)
	else
		toTableEnd(order, 3)
	end
 
	--[[
	-- Define the attempt order. Inactive subtables (subtables with nil "value"
	-- fields) are moved to the end, where they will later be given the key
	-- "all". This is to cut down on the number of table lookups in
	-- cfg.protectionCategories, which grows exponentially with the number of
	-- non-nil keys. We keep track of the number of active subtables with the
	-- noActive parameter.
	--]]
	local noActive, attemptOrder
	do
		local active, inactive = {}, {}
		for i, t in ipairs(order) do
			if t.val then
				active[#active + 1] = t
			else
				inactive[#inactive + 1] = t
			end
		end
		noActive = #active
		attemptOrder = active
		for i, t in ipairs(inactive) do
			attemptOrder[#attemptOrder + 1] = t
		end
	end
 
	--[[
	-- Check increasingly generic key combinations until we find a match. If a
	-- specific category exists for the combination of key fragments we are
	-- given, that match will be found first. If not, we keep trying different
	-- key fragment combinations until we match using the key
	-- "all-all-all-all-all".
	--
	-- To generate the keys, we index the key subtables using a binary matrix
	-- with indexes i and j. j is only calculated up to the number of active
	-- subtables. For example, if there were three active subtables, the matrix
	-- would look like this, with 0 corresponding to the key fragment "all", and
	-- 1 corresponding to other key fragments.
	-- 
	--   j 1  2  3
	-- i  
	-- 1   1  1  1
	-- 2   0  1  1
	-- 3   1  0  1
	-- 4   0  0  1
	-- 5   1  1  0
	-- 6   0  1  0
	-- 7   1  0  0
	-- 8   0  0  0
	-- 
	-- Values of j higher than the number of active subtables are set
	-- to the string "all".
	--
	-- A key for cfg.protectionCategories is constructed for each value of i.
	-- The position of the value in the key is determined by the keypos field in
	-- each subtable.
	--]]
	local cats = cfg.protectionCategories
	for i = 1, 2^noActive do
		local key = {}
		for j, t in ipairs(attemptOrder) do
			if j &gt; noActive then
				key[t.keypos] = 'all'
			else
				local quotient = i / 2 ^ (j - 1)
				quotient = math.ceil(quotient)
				if quotient % 2 == 1 then
					key[t.keypos] = t.val
				else
					key[t.keypos] = 'all'
				end
			end
		end
		key = table.concat(key, '|')
		local attempt = cats[key]
		if attempt then
			return makeCategoryLink(attempt, title.text)
		end
	end
	return ''
end

function Protection:needsExpiry()
	local cfg = self._cfg
	local actionNeedsCheck = cfg.expiryCheckActions[self.action]
	return not self.expiry and (
		actionNeedsCheck or (
			actionNeedsCheck == nil
			and self.reason -- the old {{pp-protected}} didn't check for expiry
			and not cfg.reasonsWithoutExpiryCheck[self.reason]
		)
	)
end

function Protection:isIncorrect()
	local expiry = self.expiry
	return not self:isProtected()
		or type(expiry) == 'number' and expiry &lt; os.time()
end

function Protection:isTemplateProtectedNonTemplate()
	local action, namespace = self.action, self.title.namespace
	return self.level == 'templateeditor'
		and (
			(action ~= 'edit' and action ~= 'move')
			or (namespace ~= 10 and namespace ~= 828)
		)
end

function Protection:makeCategoryLinks()
	local msg = self._cfg.msg
	local ret = { self:makeProtectionCategory() }
	if self:needsExpiry() then
		ret[#ret + 1] = makeCategoryLink(
			msg['tracking-category-expiry'],
			self.title.text
		)
	end
	if self:isIncorrect() then
		ret[#ret + 1] = makeCategoryLink(
			msg['tracking-category-incorrect'],
			self.title.text
		)
	end
	if self:isTemplateProtectedNonTemplate() then
		ret[#ret + 1] = makeCategoryLink(
			msg['tracking-category-template'],
			self.title.text
		)
	end
	return table.concat(ret)
end

--------------------------------------------------------------------------------
-- Blurb class
--------------------------------------------------------------------------------

local Blurb = {}
Blurb.__index = Blurb

Blurb.bannerTextFields = {
	text = true,
	explanation = true,
	tooltip = true,
	alt = true,
	link = true
}

function Blurb.new(protectionObj, args, cfg)
	return setmetatable({
		_cfg = cfg,
		_protectionObj = protectionObj,
		_args = args
	}, Blurb)
end

-- Private methods --

function Blurb:_formatDate(num)
	-- Formats a Unix timestamp into dd Month, YYYY format.
	lang = lang or mw.language.getContentLanguage()
	local success, date = pcall(
		lang.formatDate,
		lang,
		self._cfg.msg['expiry-date-format'] or 'j F Y',
		'@' .. tostring(num)
	)
	if success then
		return date
	end
end

function Blurb:_getExpandedMessage(msgKey)
	return self:_substituteParameters(self._cfg.msg[msgKey])
end

function Blurb:_substituteParameters(msg)
	if not self._params then
		local parameterFuncs = {}

		parameterFuncs.CURRENTVERSION     = self._makeCurrentVersionParameter
		parameterFuncs.EDITREQUEST        = self._makeEditRequestParameter
		parameterFuncs.EXPIRY             = self._makeExpiryParameter
		parameterFuncs.EXPLANATIONBLURB   = self._makeExplanationBlurbParameter
		parameterFuncs.IMAGELINK          = self._makeImageLinkParameter
		parameterFuncs.INTROBLURB         = self._makeIntroBlurbParameter
		parameterFuncs.INTROFRAGMENT      = self._makeIntroFragmentParameter
		parameterFuncs.PAGETYPE           = self._makePagetypeParameter
		parameterFuncs.PROTECTIONBLURB    = self._makeProtectionBlurbParameter
		parameterFuncs.PROTECTIONDATE     = self._makeProtectionDateParameter
		parameterFuncs.PROTECTIONLEVEL    = self._makeProtectionLevelParameter
		parameterFuncs.PROTECTIONLOG      = self._makeProtectionLogParameter
		parameterFuncs.TALKPAGE           = self._makeTalkPageParameter
		parameterFuncs.TOOLTIPBLURB       = self._makeTooltipBlurbParameter
		parameterFuncs.TOOLTIPFRAGMENT    = self._makeTooltipFragmentParameter
		parameterFuncs.VANDAL             = self._makeVandalTemplateParameter
		
		self._params = setmetatable({}, {
			__index = function (t, k)
				local param
				if parameterFuncs[k] then
					param = parameterFuncs[k](self)
				end
				param = param or ''
				t[k] = param
				return param
			end
		})
	end
	
	msg = msg:gsub('${(%u+)}', self._params)
	return msg
end

function Blurb:_makeCurrentVersionParameter()
	-- A link to the page history or the move log, depending on the kind of
	-- protection.
	local pagename = self._protectionObj.title.prefixedText
	if self._protectionObj.action == 'move' then
		-- We need the move log link.
		return makeFullUrl(
			'Special:Log',
			{type = 'move', page = pagename},
			self:_getExpandedMessage('current-version-move-display')
		)
	else
		-- We need the history link.
		return makeFullUrl(
			pagename,
			{action = 'history'},
			self:_getExpandedMessage('current-version-edit-display')
		)
	end
end

function Blurb:_makeEditRequestParameter()
	local mEditRequest = require('Module:Submit an edit request')
	local action = self._protectionObj.action
	local level = self._protectionObj.level
	
	-- Get the edit request type.
	local requestType
	if action == 'edit' then
		if level == 'autoconfirmed' then
			requestType = 'semi'
		elseif level == 'templateeditor' then
			requestType = 'template'
		end
	end
	requestType = requestType or 'full'
	
	-- Get the display value.
	local display = self:_getExpandedMessage('edit-request-display')

	return mEditRequest._link{type = requestType, display = display}
end

function Blurb:_makeExpiryParameter()
	local expiry = self._protectionObj.expiry
	if type(expiry) == 'number' then
		return self:_formatDate(expiry)
	else
		return expiry
	end
end

function Blurb:_makeExplanationBlurbParameter()
	-- Cover special cases first.
	if self._protectionObj.title.namespace == 8 then
		-- MediaWiki namespace
		return self:_getExpandedMessage('explanation-blurb-nounprotect')
	end

	-- Get explanation blurb table keys
	local action = self._protectionObj.action
	local level = self._protectionObj.level
	local talkKey = self._protectionObj.title.isTalkPage and 'talk' or 'subject'

	-- Find the message in the explanation blurb table and substitute any
	-- parameters.
	local explanations = self._cfg.explanationBlurbs
	local msg
	if explanations[action][level] and explanations[action][level][talkKey] then
		msg = explanations[action][level][talkKey]
	elseif explanations[action][level] and explanations[action][level].default then
		msg = explanations[action][level].default
	elseif explanations[action].default and explanations[action].default[talkKey] then
		msg = explanations[action].default[talkKey]
	elseif explanations[action].default and explanations[action].default.default then
		msg = explanations[action].default.default
	else
		error(string.format(
			'could not find explanation blurb for action "%s", level "%s" and talk key "%s"',
			action,
			level,
			talkKey
		))
	end
	return self:_substituteParameters(msg)
end

function Blurb:_makeImageLinkParameter()
	local imageLinks = self._cfg.imageLinks
	local action = self._protectionObj.action
	local level = self._protectionObj.level
	local msg
	if imageLinks[action][level] then
		msg = imageLinks[action][level]
	elseif imageLinks[action].default then
		msg = imageLinks[action].default
	else
		msg = imageLinks.edit.default
	end
	return self:_substituteParameters(msg)
end

function Blurb:_makeIntroBlurbParameter()
	if self._protectionObj:isTemporary() then
		return self:_getExpandedMessage('intro-blurb-expiry')
	else
		return self:_getExpandedMessage('intro-blurb-noexpiry')
	end
end

function Blurb:_makeIntroFragmentParameter()
	if self._protectionObj:isTemporary() then
		return self:_getExpandedMessage('intro-fragment-expiry')
	else
		return self:_getExpandedMessage('intro-fragment-noexpiry')
	end
end

function Blurb:_makePagetypeParameter()
	local pagetypes = self._cfg.pagetypes
	return pagetypes[self._protectionObj.title.namespace]
		or pagetypes.default
		or error('no default pagetype defined')
end

function Blurb:_makeProtectionBlurbParameter()
	local protectionBlurbs = self._cfg.protectionBlurbs
	local action = self._protectionObj.action
	local level = self._protectionObj.level
	local msg
	if protectionBlurbs[action][level] then
		msg = protectionBlurbs[action][level]
	elseif protectionBlurbs[action].default then
		msg = protectionBlurbs[action].default
	elseif protectionBlurbs.edit.default then
		msg = protectionBlurbs.edit.default
	else
		error('no protection blurb defined for protectionBlurbs.edit.default')
	end
	return self:_substituteParameters(msg)
end

function Blurb:_makeProtectionDateParameter()
	local protectionDate = self._protectionObj.protectionDate
	if type(protectionDate) == 'number' then
		return self:_formatDate(protectionDate)
	else
		return protectionDate
	end
end

function Blurb:_makeProtectionLevelParameter()
	local protectionLevels = self._cfg.protectionLevels
	local action = self._protectionObj.action
	local level = self._protectionObj.level
	local msg
	if protectionLevels[action][level] then
		msg = protectionLevels[action][level]
	elseif protectionLevels[action].default then
		msg = protectionLevels[action].default
	elseif protectionLevels.edit.default then
		msg = protectionLevels.edit.default
	else
		error('no protection level defined for protectionLevels.edit.default')
	end
	return self:_substituteParameters(msg)
end

function Blurb:_makeProtectionLogParameter()
	local pagename = self._protectionObj.title.prefixedText
	if self._protectionObj.action == 'autoreview' then
		-- We need the pending changes log.
		return makeFullUrl(
			'Special:Log',
			{type = 'stable', page = pagename},
			self:_getExpandedMessage('pc-log-display')
		)
	else
		-- We need the protection log.
		return makeFullUrl(
			'Special:Log',
			{type = 'protect', page = pagename},
			self:_getExpandedMessage('protection-log-display')
		)
	end
end

function Blurb:_makeTalkPageParameter()
	return string.format(
		'[[%s:%s#%s|%s]]',
		mw.site.namespaces[self._protectionObj.title.namespace].talk.name,
		self._protectionObj.title.text,
		self._args.section or 'top',
		self:_getExpandedMessage('talk-page-link-display')
	)
end

function Blurb:_makeTooltipBlurbParameter()
	if self._protectionObj:isTemporary() then
		return self:_getExpandedMessage('tooltip-blurb-expiry')
	else
		return self:_getExpandedMessage('tooltip-blurb-noexpiry')
	end
end

function Blurb:_makeTooltipFragmentParameter()
	if self._protectionObj:isTemporary() then
		return self:_getExpandedMessage('tooltip-fragment-expiry')
	else
		return self:_getExpandedMessage('tooltip-fragment-noexpiry')
	end
end

function Blurb:_makeVandalTemplateParameter()
	return require('Module:Vandal-m')._main{
		self._args.user or self._protectionObj.title.baseText
	}
end

-- Public methods --

function Blurb:makeBannerText(key)
	-- Validate input.
	if not key or not Blurb.bannerTextFields[key] then
		error(string.format(
			'"%s" is not a valid banner config field',
			tostring(key)
		), 2)
	end

	-- Generate the text.
	local msg = self._protectionObj.bannerConfig[key]
	if type(msg) == 'string' then
		return self:_substituteParameters(msg)
	elseif type(msg) == 'function' then
		msg = msg(self._protectionObj, self._args)
		if type(msg) ~= 'string' then
			error(string.format(
				'bad output from banner config function with key "%s"'
					.. ' (expected string, got %s)',
				tostring(key),
				type(msg)
			))
		end
		return self:_substituteParameters(msg)
	end
end

--------------------------------------------------------------------------------
-- BannerTemplate class
--------------------------------------------------------------------------------

local BannerTemplate = {}
BannerTemplate.__index = BannerTemplate

function BannerTemplate.new(protectionObj, cfg)
	local obj = {}
	obj._cfg = cfg

	-- Set the image filename.
	local imageFilename = protectionObj.bannerConfig.image
	if imageFilename then
		obj._imageFilename = imageFilename
	else
		-- If an image filename isn't specified explicitly in the banner config,
		-- generate it from the protection status and the namespace.
		local action = protectionObj.action
		local level = protectionObj.level
		local namespace = protectionObj.title.namespace
		local reason = protectionObj.reason
		
		-- Deal with special cases first.
		if (
			namespace == 10
			or namespace == 828
			or reason and obj._cfg.indefImageReasons[reason]
			)
			and action == 'edit'
			and level == 'sysop'
			and not protectionObj:isTemporary()
		then
			-- Fully protected modules and templates get the special red "indef"
			-- padlock.
			obj._imageFilename = obj._cfg.msg['image-filename-indef']
		else
			-- Deal with regular protection types.
			local images = obj._cfg.images
			if images[action] then
				if images[action][level] then
					obj._imageFilename = images[action][level]
				elseif images[action].default then
					obj._imageFilename = images[action].default
				end
			end
		end
	end
	return setmetatable(obj, BannerTemplate)
end

function BannerTemplate:setImageWidth(width)
	self._imageWidth = width
end

function BannerTemplate:setImageTooltip(tooltip)
	self._imageCaption = tooltip
end

function BannerTemplate:renderImage()
	local filename = self._imageFilename
		or self._cfg.msg['image-filename-default']
		or 'Transparent.gif'
	return newFileLink(filename)
		:width(self._imageWidth or 20)
		:alt(self._imageAlt)
		:link(self._imageLink)
		:caption(self._imageCaption)
		:render()
end

--------------------------------------------------------------------------------
-- Banner class
--------------------------------------------------------------------------------

local Banner = setmetatable({}, BannerTemplate)
Banner.__index = Banner

function Banner.new(protectionObj, blurbObj, cfg)
	local obj = BannerTemplate.new(protectionObj, cfg) -- This doesn't need the blurb.
	obj:setImageWidth(40)
	obj:setImageTooltip(blurbObj:makeBannerText('alt')) -- Large banners use the alt text for the tooltip.
	obj._reasonText = blurbObj:makeBannerText('text')
	obj._explanationText = blurbObj:makeBannerText('explanation')
	obj._page = protectionObj.title.prefixedText -- Only makes a difference in testing.
	return setmetatable(obj, Banner)
end

function Banner:__tostring()
	-- Renders the banner.
	makeMessageBox = makeMessageBox or require('Module:Message box').main
	local reasonText = self._reasonText or error('no reason text set')
	local explanationText = self._explanationText
	local mbargs = {
		page = self._page,
		type = 'protection',
		image = self:renderImage(),
		text = string.format(
			"'''%s'''%s",
			reasonText,
			explanationText and '&lt;br /&gt;' .. explanationText or ''
		)
	}
	return makeMessageBox('mbox', mbargs)
end

--------------------------------------------------------------------------------
-- Padlock class
--------------------------------------------------------------------------------

local Padlock = setmetatable({}, BannerTemplate)
Padlock.__index = Padlock

function Padlock.new(protectionObj, blurbObj, cfg)
	local obj = BannerTemplate.new(protectionObj, cfg) -- This doesn't need the blurb.
	obj:setImageWidth(20)
	obj:setImageTooltip(blurbObj:makeBannerText('tooltip'))
	obj._imageAlt = blurbObj:makeBannerText('alt')
	obj._imageLink = blurbObj:makeBannerText('link')
	obj._right = cfg.padlockPositions[protectionObj.action]
		or cfg.padlockPositions.default
		or '55px'
	return setmetatable(obj, Padlock)
end

function Padlock:__tostring()
	local root = mw.html.create('div')
	root
		:addClass('metadata topicon nopopups')
		:attr('id', 'protected-icon')
		:css{display = 'none', right = self._right}
		:wikitext(self:renderImage())
	return tostring(root)
end

--------------------------------------------------------------------------------
-- Exports
--------------------------------------------------------------------------------

local p = {}

function p._exportClasses()
	-- This is used for testing purposes.
	return {
		Protection = Protection,
		Blurb = Blurb,
		BannerTemplate = BannerTemplate,
		Banner = Banner,
		Padlock = Padlock,
	}
end

function p._main(args, cfg, title)
	args = args or {}
	cfg = cfg or require(CONFIG_MODULE)

	-- Initialise the protection object and check for errors
	local protectionObjCreated, protectionObj = pcall(
		Protection.new,
		args,
		cfg,
		title
	)
	if not protectionObjCreated then
		local errorBlurb = cfg.msg['error-message-blurb'] or 'Error: $1.'
		local errorText = mw.message.newRawMessage(errorBlurb)
			:params(protectionObj) -- protectionObj is the error message
			:plain()
		return string.format(
			'&lt;strong class="error"&gt;%s&lt;/strong&gt;%s',
			errorText,
			makeCategoryLink(
				cfg.msg['tracking-category-incorrect'],
				title and title.text or mw.title.getCurrentTitle().text
			)
		)
	end

	local ret = {}

	-- If a page's edit protection is equally or more restrictive than its protection from some other action,
	-- then don't bother displaying anything for the other action (except categories).
	if protectionObj.action == 'edit' or not walkHierarchy(cfg.hierarchy, protectionObj.level)[effectiveProtectionLevel('edit', protectionObj.title)] then
		-- Initialise the blurb object
		local blurbObj = Blurb.new(protectionObj, args, cfg)
	
		-- Render the banner
		if protectionObj:isProtected() then
			ret[#ret + 1] = tostring(
				(yesno(args.small) and Padlock or Banner)
				.new(protectionObj, blurbObj, cfg)
			)
		end
	end

	-- Render the categories
	if yesno(args.category) ~= false then
		ret[#ret + 1] = protectionObj:makeCategoryLinks()
	end
	
	return table.concat(ret)	
end

function p.main(frame, cfg)
	cfg = cfg or require(CONFIG_MODULE)

	-- Find default args, if any.
	local parent = frame.getParent and frame:getParent()
	local defaultArgs = parent and cfg.wrappers[parent:getTitle():gsub('/sandbox$', '')] or {}

	-- Find user args, and use the parent frame if we are being called from a
	-- wrapper template.
	getArgs = getArgs or require('Module:Arguments').getArgs
	local userArgs = getArgs(frame, {
		parentOnly = defaultArgs,
		frameOnly = not defaultArgs
	})

	-- Build the args table. User-specified args overwrite default args.
	local args = {}
	for k, v in pairs(defaultArgs) do
		args[k] = v
	end
	for k, v in pairs(userArgs) do
		args[k] = v
	end
	return p._main(args, cfg)
end

return p</text>
            <sha1>3rt907i01lot202xsr2tp4x7mujiw0s</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:Protection banner/config</title>
        <ns>828</ns>
        <id>677</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6973</id>
            <parentid>6972</parentid>
            <timestamp>2015-03-16T19:26:40Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="44335">-- This module provides configuration data for [[Module:Protection banner]].

return {

--------------------------------------------------------------------------------
--
--                                BANNER DATA
--
--------------------------------------------------------------------------------

--[[
-- Banner data consists of six fields:
-- * text - the main protection text that appears at the top of protection
--   banners.
-- * explanation - the text that appears below the main protection text, used
--   to explain the details of the protection.
-- * tooltip - the tooltip text you see when you move the mouse over a small
--   padlock icon.
-- * link - the page that the small padlock icon links to.
-- * alt - the alt text for the small padlock icon. This is also used as tooltip
--   text for the large protection banners.
-- * image - the padlock image used in both protection banners and small padlock
--   icons.
--
-- The module checks in three separate tables to find a value for each field.
-- First it checks the banners table, which has values specific to the reason
-- for the page being protected. Then the module checks the defaultBanners
-- table, which has values specific to each protection level. Finally, the
-- module checks the masterBanner table, which holds data for protection
-- templates to use if no data has been found in the previous two tables.
--
-- The values in the banner data can take parameters. These are specified
-- using ${TEXTLIKETHIS} (a dollar sign preceding a parameter name
-- enclosed in curly braces).
--
--                          Available parameters:
--
-- ${CURRENTVERSION} - a link to the page history or the move log, with the
-- display message "current-version-edit-display" or
-- "current-version-move-display".
--
-- ${EDITREQUEST} - a link to create an edit request for the current page.
--
-- ${EXPIRY} - the protection expiry date in the format DD Month YYYY. If
-- protection is indefinite or is not set, this is the blank string.
--
-- ${EXPLANATIONBLURB} - an explanation blurb, e.g. "Please discuss any changes
-- on the talk page; you may submit a request to ask an administrator to make
-- an edit if it is minor or supported by consensus."
--
-- ${IMAGELINK} - a link to set the image to, depending on the protection
-- action and protection level.
--
-- ${INTROBLURB} - the PROTECTIONBLURB parameter, plus the expiry if an expiry
-- is set. E.g. "Editing of this page by new or unregistered users is currently 
-- disabled until dd Month YYYY."
--
-- ${INTROFRAGMENT} - the same as ${INTROBLURB}, but without final punctuation
-- so that it can be used in run-on sentences.
--
-- ${PAGETYPE} - the type of the page, e.g. "article" or "template".
-- Defined in the cfg.pagetypes table.
--
-- ${PROTECTIONBLURB} - a blurb explaining the protection level of the page, e.g.
-- "Editing of this page by new or unregistered users is currently disabled"
--
-- ${PROTECTIONDATE} - the protection date, if it has been supplied to the
-- template.
--
-- ${PROTECTIONLEVEL} - the protection level, e.g. "fully protected" or
-- "semi-protected".
--
-- ${PROTECTIONLOG} - a link to the protection log or the pending changes log,
-- depending on the protection action.
--
-- ${TALKPAGE} - a link to the talk page. If a section is specified, links
-- straight to that talk page section.
--
-- ${TOOLTIPBLURB} - uses the PAGETYPE, PROTECTIONTYPE and EXPIRY parameters to
-- create a blurb like "This template is semi-protected", or "This article is
-- move-protected until DD Month YYYY".
--
-- ${VANDAL} - links for the specified username (or the root page name)
-- using Module:Vandal-m.
--
--                                 Functions
--
-- For advanced users, it is possible to use Lua functions instead of strings
-- in the banner config tables. Using functions gives flexibility that is not
-- possible just by using parameters. Functions take two arguments, the
-- protection object and the template arguments, and they must output a string.
--
-- For example:
--
-- text = function (protectionObj, args)
--     if protectionObj.level == 'autoconfirmed' then
--         return 'foo'
--     else
--         return 'bar'
--     end
-- end
--
-- Some protection object properties and methods that may be useful:
-- protectionObj.action - the protection action
-- protectionObj.level - the protection level
-- protectionObj.reason - the protection reason
-- protectionObj.expiry - the expiry. Nil if unset, the string "indef" if set
--     to indefinite, and the protection time in unix time if temporary.
-- protectionObj.protectionDate - the protection date in unix time, or nil if
--     unspecified.
-- protectionObj.bannerConfig - the banner config found by the module. Beware
--     of editing the config field used by the function, as it could create an
--     infinite loop.
-- protectionObj:isProtected - returns a boolean showing whether the page is
--     protected.
-- protectionObj:isTemporary - returns a boolean showing whether the expiry is
--     temporary.
-- protectionObj:isIncorrect - returns a boolean showing whether the protection
--     template is incorrect.
--]]

-- The master banner data, used if no values have been found in banners or
-- defaultBanners.
masterBanner = {
	text = '${INTROBLURB}',
	explanation = '${EXPLANATIONBLURB}',
	tooltip = '${TOOLTIPBLURB}',
	link = '${IMAGELINK}',
	alt = 'Page ${PROTECTIONLEVEL}'
},

-- The default banner data. This holds banner data for different protection
-- levels.
-- *required* - this table needs edit, move, and autoreview subtables.
defaultBanners = {
	edit = {},
	move = {},
	autoreview = {
		autoconfirmed = {
			alt = 'Page protected with pending changes level 1',
			tooltip = 'All edits by unregistered and new users are subject to review',
			image = 'Padlock-silver-light.svg'
		},
		default = {
			alt = 'Page protected with pending changes level 2',
			tooltip = 'All edits by users who are not reviewers or administrators are'
				.. ' subject to review',
		}
	}
},

-- The banner data. This holds banner data for different protection reasons.
-- In fact, the reasons specified in this table control which reasons are
-- valid inputs to the first positional parameter.
--
-- There is also a non-standard "description" field that can be used for items
-- in this table. This is a description of the protection reason for use in the
-- module documentation.
--
-- *required* - this table needs edit, move, and autoreview subtables.
banners = {
	edit = {
		blp = {
			description = 'For pages protected to promote compliance with the'
				.. ' [[Wikipedia:Biographies of living persons'
				.. '|biographies of living persons]] policy.',
			text = '${INTROFRAGMENT} to promote compliance with'
				.. ' [[Wikipedia:Biographies of living persons'
				.. "|Wikipedia's&amp;nbsp;policy on&amp;nbsp;the&amp;nbsp;biographies"
				.. ' of&amp;nbsp;living&amp;nbsp;people]].',
			tooltip = '${TOOLTIPFRAGMENT} to promote compliance with the policy on'
				.. ' biographies of living people',
		},
		dmca = {
			description = 'For pages protected by the Wikimedia Foundation'
				.. ' due to Digital Millennium Copyright Act takedown requests.',
			explanation = function (protectionObj, args)
				local ret = 'Pursuant to a rights owner notice under the Digital'
					.. ' Millennium Copyright Act (DMCA) regarding some content'
					.. ' in this article, the Wikimedia Foundation acted under'
					.. ' applicable law and took down and restricted the content'
					.. ' in question.'
				if args.notice then
					ret = ret .. ' A copy of the received notice can be found here: '
						.. args.notice .. '.'
				end
				ret = ret .. ' For more information, including websites discussing'
					.. ' how to file a counter-notice, please see'
					.. " [[Wikipedia:Office actions]] and the article's ${TALKPAGE}."
					.. "'''Do not remove this template from the article until the"
					.. " restrictions are withdrawn'''."
				return ret
			end,
			image = 'Padlock-black.svg',
		},
		dispute = {
			description = 'For pages protected due to editing disputes.',
			text = function (protectionObj, args)
				-- Find the value of "disputes".
				local display = 'disputes'
				local disputes
				if args.section then
					disputes = string.format(
						'[[%s:%s#%s|%s]]',
						mw.site.namespaces[protectionObj.title.namespace].talk.name,
						protectionObj.title.text,
						args.section,
						display
					)
				else
					disputes = display
				end

				-- Make the blurb, depending on the expiry.
				local msg
				if type(protectionObj.expiry) == 'number' then
					msg = '${INTROFRAGMENT} or until editing %s have been resolved.'
				else
					msg = '${INTROFRAGMENT} until editing %s have been resolved.'
				end
				return string.format(msg, disputes)
			end,
			explanation = "This protection is '''not''' an endorsement of the"
				.. ' ${CURRENTVERSION}. ${EXPLANATIONBLURB}',
			tooltip = '${TOOLTIPFRAGMENT} due to editing disputes',
		},
		mainpage = {
			description = 'For pages protected for being displayed on the [[Main Page]].',
			text = 'This file is currently'
				.. ' [[Wikipedia:This page is protected|protected]] from'
				.. ' editing because it is currently or will soon be displayed'
				.. ' on the [[Main Page]].',
			explanation = 'Images on the Main Page are protected due to their high'
				.. ' visibility. Please discuss any necessary changes on the ${TALKPAGE}.'
				.. '&lt;br /&gt;&lt;span style="font-size:90%;"&gt;'
				.. "'''Administrators:''' Once this image is definitely off the Main Page,"
				.. ' please unprotect this file, or reduce to semi-protection,'
				.. ' as appropriate.&lt;/span&gt;',
		},
		office = {
			description = 'For pages protected by the Wikimedia Foundation.',
			text = function (protectionObj, args)
				local ret = 'This ${PAGETYPE} is currently under the'
					.. ' scrutiny of the'
					.. ' [[Wikipedia:Office actions|Wikimedia Foundation Office]]'
					.. ' and is protected.'
				if protectionObj.protectionDate then
					ret = ret .. ' It has been protected since ${PROTECTIONDATE}.'
				end
				return ret
			end,
			explanation = "If you can edit this page, please discuss all changes and"
				.. " additions on the ${TALKPAGE} first. '''Do not remove protection from this"
				.. " page unless you are authorized by the Wikimedia Foundation to do"
				.. " so.'''",
			image = 'Padlock-black.svg',
		},
		reset = {
			description = 'For pages protected by the Wikimedia Foundation and'
				.. ' "reset" to a bare-bones version.',
 			text = 'This ${PAGETYPE} is currently under the'
					.. ' scrutiny of the'
					.. ' [[Wikipedia:Office actions|Wikimedia Foundation Office]]'
					.. ' and is protected.',
			explanation = function (protectionObj, args)
				local ret = ''
				if protectionObj.protectionDate then
					ret = ret .. 'On ${PROTECTIONDATE} this ${PAGETYPE} was'
				else
					ret = ret .. 'This ${PAGETYPE} has been'
				end
				ret = ret .. ' reduced to a'
				.. ' simplified, "bare bones" version so that it may be completely'
				.. ' rewritten to ensure it meets the policies of'
				.. ' [[WP:NPOV|Neutral Point of View]] and [[WP:V|Verifiability]].'
				.. ' Standard Wikipedia policies will apply to its rewriting—which'
				.. ' will eventually be open to all editors—and will be strictly'
				.. ' enforced. The ${PAGETYPE} has been ${PROTECTIONLEVEL} while'
				.. ' it is being rebuilt.\n\n'
				.. 'Any insertion of material directly from'
				.. ' pre-protection revisions of the ${PAGETYPE} will be removed, as'
				.. ' will any material added to the ${PAGETYPE} that is not properly'
				.. ' sourced. The associated talk page(s) were also cleared on the'
				.. " same date.\n\n"
				.. "If you can edit this page, please discuss all changes and"
				.. " additions on the ${TALKPAGE} first. '''Do not override"
				.. " this action, and do not remove protection from this page,"
				.. " unless you are authorized by the Wikimedia Foundation"
				.. " to do so. No editor may remove this notice.'''"

				return ret
			end,
			image = 'Padlock-black.svg',
		},
		sock = {
			description = 'For pages protected due to'
				.. ' [[Wikipedia:Sock puppetry|sock puppetry]].',
			text = '${INTROFRAGMENT} to prevent [[Wikipedia:Sock puppetry|sock puppets]] of'
				.. ' [[Wikipedia:Blocking policy|blocked]] or'
				.. ' [[Wikipedia:List of banned users|banned users]]'
				.. ' from editing it.',
			tooltip = '${TOOLTIPFRAGMENT} to prevent sock puppets of blocked or banned users from'
				.. ' editing it',
		},
		template = {
			description = 'For [[Wikipedia:High-risk templates|high-risk]]'
				.. ' templates and Lua modules.',
			text = 'This is a permanently [[Help:Protection|protected]] ${PAGETYPE},'
				.. ' as it is [[Wikipedia:High-risk templates|high-risk]].',
			explanation = 'Please discuss any changes on the ${TALKPAGE}; you may'
				.. ' ${EDITREQUEST} to ask an'
				.. ' [[Wikipedia:Administrators|administrator]] or'
				.. ' [[Wikipedia:Template editor|template editor]] to make an edit if'
				.. ' it is [[Help:Minor edit#When to mark an edit as a minor edit'
				.. '|uncontroversial]] or supported by'
				.. ' [[Wikipedia:Consensus|consensus]]. You can also'
				.. ' [[Wikipedia:Requests for page protection|request]] that the page be'
				.. ' unprotected.',
			tooltip = 'This high-risk ${PAGETYPE} is permanently ${PROTECTIONLEVEL}'
				.. ' to prevent vandalism',
			alt = 'Permanently protected ${PAGETYPE}',
		},
		usertalk = {
			description = 'For pages protected against disruptive edits by a'
				.. ' particular user.',
			text = '${INTROFRAGMENT} to prevent ${VANDAL} from using it to make disruptive edits,'
				.. ' such as abusing the'
				.. ' &amp;#123;&amp;#123;[[Template:unblock|unblock]]&amp;#125;&amp;#125; template.',
			explanation = 'If you cannot edit this user talk page and you need to'
				.. ' make a change or leave a message, you can'
				.. ' [[Wikipedia:Requests for page protection'
				.. '#Current requests for edits to a protected page'
				.. '|request an edit]],'
				.. ' [[Wikipedia:Requests for page protection'
				.. '#Current requests for reduction in protection level'
				.. '|request unprotection]],'
				.. ' [[Special:Userlogin|log in]],'
				.. ' or [[Special:UserLogin/signup|create an account]].',
		},
		vandalism = {
			description = 'For pages protected against'
				.. ' [[Wikipedia:Vandalism|vandalism]].',
			text = '${INTROFRAGMENT} due to [[Wikipedia:Vandalism|vandalism]].',
			explanation = function (protectionObj, args)
				local ret = ''
				if protectionObj.level == 'sysop' then
					ret = ret .. "This protection is '''not''' an endorsement of the"
						.. ' ${CURRENTVERSION}. '
				end
				return ret .. '${EXPLANATIONBLURB}'
			end,
			tooltip = '${TOOLTIPFRAGMENT} due to vandalism',
		}
	},
	move = {
		dispute = {
			description = 'For pages protected against page moves due to'
				.. ' disputes over the page title.',
			explanation = "This protection is '''not''' an endorsement of the"
				.. ' ${CURRENTVERSION}. ${EXPLANATIONBLURB}',
			image = 'Padlock-olive.svg'
		},
		vandalism = {
			description = 'For pages protected against'
				.. ' [[Wikipedia:Vandalism#Page-move vandalism'
				.. ' |page-move vandalism]].'
		}
	},
	autoreview = {}
},

--------------------------------------------------------------------------------
--
--                            GENERAL DATA TABLES
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Protection blurbs
--------------------------------------------------------------------------------

-- This table produces the protection blurbs available with the
-- ${PROTECTIONBLURB} parameter. It is sorted by protection action and
-- protection level, and is checked by the module in the following order:
-- 1. page's protection action, page's protection level
-- 2. page's protection action, default protection level
-- 3. "edit" protection action, default protection level
--
-- It is possible to use banner parameters inside this table.
-- *required* - this table needs edit, move, and autoreview subtables.
protectionBlurbs = {
	edit = {
		default = 'This ${PAGETYPE} is currently [[Help:Protection|'
			.. 'protected]] from editing',
		autoconfirmed = 'Editing of this ${PAGETYPE} by [[Wikipedia:User access'
			.. ' levels#New users|new]] or [[Wikipedia:User access levels#Unregistered'
			.. ' users|unregistered]] users is currently [[Help:Protection|disabled]]'
	},
	move = {
		default = 'This ${PAGETYPE} is currently [[Help:Protection|protected]]'
			.. ' from [[Help:Moving a page|page moves]]'
	},
	autoreview = {
		autoconfirmed = 'All edits made to this ${PAGETYPE} by'
			.. ' [[Wikipedia:User access levels#New users|new]] or'
			.. ' [[Wikipedia:User access levels#Unregistered users|unregistered]]'
			.. ' users are currently'
			.. ' [[Wikipedia:Pending changes|subject to review]]',
		default = 'All edits made to this ${PAGETYPE} by users who are not'
			.. ' [[Wikipedia:Reviewing|reviewers]] or'
			.. ' [[Wikipedia:Administrators|administrators]] are currently'
			.. ' [[Wikipedia:Pending changes|subject to review]]'
	}
},


--------------------------------------------------------------------------------
-- Explanation blurbs
--------------------------------------------------------------------------------

-- This table produces the explanation blurbs available with the
-- ${EXPLANATIONBLURB} parameter. It is sorted by protection action,
-- protection level, and whether the page is a talk page or not. If the page is
-- a talk page it will have a talk key of "talk"; otherwise it will have a talk
-- key of "subject". The table is checked in the following order:
-- 1. page's protection action, page's protection level, page's talk key
-- 2. page's protection action, page's protection level, default talk key
-- 3. page's protection action, default protection level, page's talk key
-- 4. page's protection action, default protection level, default talk key
--
-- It is possible to use banner parameters inside this table.
-- *required* - this table needs edit, move, and autoreview subtables.
explanationBlurbs = {
	edit = {
		autoconfirmed = {
			subject = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details. If you'
				.. ' cannot edit this ${PAGETYPE} and you wish to make a change, you can'
				.. ' ${EDITREQUEST}, discuss changes on the ${TALKPAGE},'
				.. ' [[Wikipedia:Requests for page protection'
				.. '#Current requests for reduction in protection level'
				.. '|request unprotection]], [[Special:Userlogin|log in]], or'
				.. ' [[Special:UserLogin/signup|create an account]].',
			default = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details. If you'
				.. ' cannot edit this ${PAGETYPE} and you wish to make a change, you can'
				.. ' [[Wikipedia:Requests for page protection'
				.. '#Current requests for reduction in protection level'
				.. '|request unprotection]], [[Special:Userlogin|log in]], or'
				.. ' [[Special:UserLogin/signup|create an account]].',
		},
		default = {
			subject = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' Please discuss any changes on the ${TALKPAGE}; you'
				.. ' may ${EDITREQUEST} to ask an'
				.. ' [[Wikipedia:Administrators|administrator]] to make an edit if it'
				.. ' is [[Help:Minor edit#When to mark an edit as a minor edit'
				.. '|uncontroversial]] or supported by [[Wikipedia:Consensus'
				.. '|consensus]]. You may also [[Wikipedia:Requests for'
				.. ' page protection#Current requests for reduction in protection level'
				.. '|request]] that this page be unprotected.',
			default = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' You may [[Wikipedia:Requests for page'
				.. ' protection#Current requests for edits to a protected page|request an'
				.. ' edit]] to this page, or [[Wikipedia:Requests for'
				.. ' page protection#Current requests for reduction in protection level'
				.. '|ask]] for it to be unprotected.'
		}
	},
	move = {
		default = {
			subject = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' The page may still be edited but cannot be moved'
				.. ' until unprotected. Please discuss any suggested moves on the'
				.. ' ${TALKPAGE} or at [[Wikipedia:Requested moves]]. You can also'
				.. ' [[Wikipedia:Requests for page protection|request]] that the page be'
				.. ' unprotected.',
			default = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' The page may still be edited but cannot be moved'
				.. ' until unprotected. Please discuss any suggested moves at'
				.. ' [[Wikipedia:Requested moves]]. You can also'
				.. ' [[Wikipedia:Requests for page protection|request]] that the page be'
				.. ' unprotected.'
		}
	},
	autoreview = {
		default = {
			reviewer = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' Edits to this ${PAGETYPE} will not be visible to readers'
				.. ' until they are accepted by a reviewer or an administrator.'
				.. ' To avoid the need for your edits to be reviewed, you may'
				.. ' [[Wikipedia:Requests for page protection'
				.. '#Current requests for reduction in protection level'
				.. '|request unprotection]]. Experienced editors may also'
				.. ' request the [[Wikipedia:Reviewing|reviewer user right]].',
			default = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' Edits to this ${PAGETYPE} by new and unregistered users'
				.. ' will not be visible to readers until they are accepted by'
				.. ' a reviewer. To avoid the need for your edits to be'
				.. ' reviewed, you may'
				.. ' [[Wikipedia:Requests for page protection'
				.. '#Current requests for reduction in protection level'
				.. '|request unprotection]], [[Special:Userlogin|log in]], or'
				.. ' [[Special:UserLogin/signup|create an account]].'
		},
	}
},

--------------------------------------------------------------------------------
-- Protection levels
--------------------------------------------------------------------------------

-- This table provides the data for the ${PROTECTIONLEVEL} parameter, which
-- produces a short label for different protection levels. It is sorted by
-- protection action and proteciton level, and is checked in the following
-- order:
-- 1. page's protection action, page's protection level
-- 2. page's protection action, default protection level
-- 3. "edit" protection action, default protection level
--
-- It is possible to use banner parameters inside this table.
-- *required* - this table needs edit, move, and autoreview subtables.
protectionLevels = {
	edit = {
		default = 'protected',
		templateeditor = 'template-protected',
		autoconfirmed = 'semi-protected',
	},
	move = {
		default = 'move-protected'
	},
	autoreview = {
	}
},

--------------------------------------------------------------------------------
-- Images
--------------------------------------------------------------------------------

-- This table lists different padlock images for each protection action and
-- protection level. It is used if an image is not specified in any of the
-- banner data tables, and if the page does not satisfy the conditions for using
-- the ['image-filename-indef'] image. It is checked in the following order:
-- 1. page's protection action, page's protection level
-- 2. page's protection action, default protection level
images = {
	edit = {
		default = 'Padlock.svg',
		templateeditor = 'Padlock-pink.svg',
		autoconfirmed = 'Padlock-silver.svg'
	},
	move = {
		default = 'Padlock-olive.svg',
	},
	autoreview = {
		autoconfirmed = 'Padlock-silver-light.svg',
		default = 'Padlock-orange.svg'
	}
},

-- Pages with a reason specified in this table will show the special "indef"
-- padlock, defined in the 'image-filename-indef' message, if no expiry is set.
indefImageReasons = {
	template = true
},

--------------------------------------------------------------------------------
-- Image links
--------------------------------------------------------------------------------

-- This table provides the data for the ${IMAGELINK} parameter, which gets
-- the image link for small padlock icons based on the page's protection action
-- and protection level. It is checked in the following order:
-- 1. page's protection action, page's protection level
-- 2. page's protection action, default protection level
-- 3. "edit" protection action, default protection level
--
-- It is possible to use banner parameters inside this table.
-- *required* - this table needs edit, move, and autoreview subtables.
imageLinks = {
	edit = {
		default = 'Wikipedia:Protection policy#full',
		templateeditor = 'Wikipedia:Protection policy#template',
		autoconfirmed = 'Wikipedia:Protection policy#semi'
	},
	move = {
		default = 'Wikipedia:Protection policy#move'
	},
	autoreview = {
		autoconfirmed = 'Wikipedia:Protection policy#pc1',
		reviewer = 'Wikipedia:Protection policy#pc2'
	}
},

--------------------------------------------------------------------------------
-- Padlock positions
--------------------------------------------------------------------------------

-- This table provides the data for the "right" CSS property for small padlock
-- icons, which determines where the icon appears on the top bar among the other
-- top icons. The data is stored by protection action. If no value is found for
-- the action, the default field is used.
padlockPositions = {
	autoreview = '85px',
	default = '55px'
},

--------------------------------------------------------------------------------
-- Protection categories
--------------------------------------------------------------------------------

--[[
-- The protection categories are stored in the protectionCategories table.
-- Keys to this table are made up of the following strings:
--
-- 1. the expiry date
-- 2. the namespace
-- 3. the protection reason (e.g. "dispute" or "vandalism")
-- 4. the protection level (e.g. "sysop" or "autoconfirmed")
-- 5. the action (e.g. "edit" or "move")
-- 
-- When the module looks up a category in the table, first it will will check to
-- see a key exists that corresponds to all five parameters. For example, a
-- user page semi-protected from vandalism for two weeks would have the key
-- "temp-user-vandalism-autoconfirmed-edit". If no match is found, the module
-- changes the first part of the key to "all" and checks the table again. It
-- keeps checking increasingly generic key combinations until it finds the
-- field, or until it reaches the key "all-all-all-all-all".
--
-- The module uses a binary matrix to determine the order in which to search.
-- This is best demonstrated by a table. In this table, the "0" values
-- represent "all", and the "1" values represent the original data (e.g.
-- "indef" or "file" or "vandalism").
--
--        expiry    namespace reason   level     action
-- order
-- 1      1         1         1        1         1
-- 2      0         1         1        1         1
-- 3      1         0         1        1         1
-- 4      0         0         1        1         1
-- 5      1         1         0        1         1
-- 6      0         1         0        1         1
-- 7      1         0         0        1         1
-- 8      0         0         0        1         1
-- 9      1         1         1        0         1
-- 10     0         1         1        0         1
-- 11     1         0         1        0         1
-- 12     0         0         1        0         1
-- 13     1         1         0        0         1
-- 14     0         1         0        0         1
-- 15     1         0         0        0         1
-- 16     0         0         0        0         1
-- 17     1         1         1        1         0
-- 18     0         1         1        1         0
-- 19     1         0         1        1         0
-- 20     0         0         1        1         0
-- 21     1         1         0        1         0
-- 22     0         1         0        1         0
-- 23     1         0         0        1         0
-- 24     0         0         0        1         0
-- 25     1         1         1        0         0
-- 26     0         1         1        0         0
-- 27     1         0         1        0         0
-- 28     0         0         1        0         0
-- 29     1         1         0        0         0
-- 30     0         1         0        0         0
-- 31     1         0         0        0         0
-- 32     0         0         0        0         0
--
-- In this scheme the action has the highest priority, as it is the last
-- to change, and the expiry has the least priority, as it changes the most.
-- The priorities of the expiry, the protection level and the action are
-- fixed, but the priorities of the reason and the namespace can be swapped
-- through the use of the cfg.bannerDataNamespaceHasPriority table.
--]]

-- If the reason specified to the template is listed in this table,
-- namespace data will take priority over reason data in the protectionCategories
-- table.
reasonsWithNamespacePriority = {
	vandalism = true,
},

-- The string to use as a namespace key for the protectionCategories table for each
-- namespace number.
categoryNamespaceKeys = {
	[  2] = 'user',
	[  3] = 'user',
	[  4] = 'project',
	[  6] = 'file',
	[  8] = 'mediawiki',
	[ 10] = 'template',
	[ 12] = 'project',
	[ 14] = 'category',
	[100] = 'portal',
},

protectionCategories = {
	['all|all|all|all|all']                  = 'Wikipedia protected pages',
	['all|all|office|all|all']               = 'Wikipedia Office-protected pages',
	['all|all|reset|all|all']                = 'Wikipedia Office-protected pages',
	['all|all|dmca|all|all']                 = 'Wikipedia Office-protected pages',
	['all|all|mainpage|all|all']             = 'Protected main page images',
	['all|template|all|all|edit']            = 'Wikipedia protected templates',
	['all|all|all|autoconfirmed|edit']       = 'Wikipedia semi-protected pages',
	['indef|all|all|autoconfirmed|edit']     = 'Wikipedia indefinitely semi-protected pages',
	['all|all|blp|autoconfirmed|edit']       = 'Wikipedia indefinitely semi-protected biographies of living people',
	['temp|all|blp|autoconfirmed|edit']      = 'Wikipedia temporarily semi-protected biographies of living people',
	['all|all|dispute|autoconfirmed|edit']   = 'Wikipedia pages semi-protected due to dispute',
	['all|all|sock|autoconfirmed|edit']      = 'Wikipedia pages semi-protected from banned users',
	['all|all|vandalism|autoconfirmed|edit'] = 'Wikipedia pages semi-protected against vandalism',
	['all|category|all|autoconfirmed|edit']  = 'Wikipedia semi-protected categories',
	['all|file|all|autoconfirmed|edit']      = 'Semi-protected images',
	['all|portal|all|autoconfirmed|edit']    = 'Semi-protected portals',
	['all|project|all|autoconfirmed|edit']   = 'Semi-protected project pages',
	['all|talk|all|autoconfirmed|edit']      = 'Semi-protected talk pages',
	['all|template|all|autoconfirmed|edit']  = 'Wikipedia semi-protected templates',
	['all|template|all|autoconfirmed|edit']  = 'Wikipedia semi-protected templates',
	['all|user|all|autoconfirmed|edit']      = 'Wikipedia semi-protected user and user talk pages',
	['all|all|blp|sysop|edit']               = 'Wikipedia indefinitely protected biographies of living people',
	['temp|all|blp|sysop|edit']              = 'Wikipedia temporarily protected biographies of living people',
	['all|all|dispute|sysop|edit']           = 'Wikipedia pages protected due to dispute',
	['all|all|sock|sysop|edit']              = 'Wikipedia pages protected from banned users',
	['all|all|vandalism|sysop|edit']         = 'Wikipedia pages protected against vandalism',
	['all|category|all|sysop|edit']          = 'Wikipedia protected categories',
	['all|file|all|sysop|edit']              = 'Protected images',
	['all|project|all|sysop|edit']           = 'Protected project pages',
	['all|talk|all|sysop|edit']              = 'Protected talk pages',
	['all|template|all|sysop|edit']          = 'Wikipedia protected templates',
	['all|user|all|sysop|edit']              = 'Wikipedia protected user and user talk pages',
	['all|all|all|sysop|move']               = 'Wikipedia move-protected pages',
	['indef|all|all|sysop|move']             = 'Wikipedia indefinitely move-protected pages',
	['all|all|dispute|sysop|move']           = 'Wikipedia pages move-protected due to dispute',
	['all|all|vandalism|sysop|move']         = 'Wikipedia pages move-protected due to vandalism',
	['all|portal|all|sysop|move']            = 'Wikipedia move-protected portals',
	['all|portal|all|sysop|move']            = 'Wikipedia move-protected portals',
	['all|project|all|sysop|move']           = 'Wikipedia move-protected project pages',
	['all|talk|all|sysop|move']              = 'Wikipedia move-protected talk pages',
	['all|template|all|sysop|move']          = 'Wikipedia move-protected templates',
	['all|user|all|sysop|move']              = 'Wikipedia move-protected user and user talk pages',
	['all|all|all|autoconfirmed|autoreview'] = 'Wikipedia pending changes protected pages (level 1)',
	['all|all|all|reviewer|autoreview']      = 'Wikipedia pending changes protected pages (level 2)',
},

--------------------------------------------------------------------------------
-- Expiry category config
--------------------------------------------------------------------------------

-- This table configures the expiry category behaviour for each protection
-- action.
-- * If set to true, setting that action will always categorise the page if
--   an expiry parameter is not set.
-- * If set to false, setting that action will never categorise the page.
-- * If set to nil, the module will categorise the page if:
--   1) an expiry parameter is not set, and
--   2) a reason is provided, and
--   3) the specified reason is not blacklisted in the reasonsWithoutExpiryCheck
--      table.

expiryCheckActions = {
	edit = nil,
	move = false,
	autoreview = true
},

reasonsWithoutExpiryCheck = {
	blp = true,
	template = true,
},

--------------------------------------------------------------------------------
-- Pagetypes
--------------------------------------------------------------------------------

-- This table produces the page types available with the ${PAGETYPE} parameter.
-- Keys are namespace numbers, or the string "default" for the default value.
pagetypes = {
	[0] = 'article',
	[6] = 'file',
	[10] = 'template',
	[14] = 'category',
	[828] = 'module',
	default = 'page'
},

--------------------------------------------------------------------------------
-- Strings marking indefinite protection
--------------------------------------------------------------------------------

-- This table contains values passed to the expiry parameter that mean the page
-- is protected indefinitely.
indefStrings = {
	['indef'] = true,
	['indefinite'] = true,
	['indefinitely'] = true,
	['infinite'] = true,
},

--------------------------------------------------------------------------------
-- Group hierarchy
--------------------------------------------------------------------------------

-- This table maps each group to all groups that have a superset of the original
-- group's page editing permissions.
hierarchy = {
	sysop = {},
	reviewer = {'sysop'},
	filemover = {'sysop'},
	templateeditor = {'sysop'},
	accountcreator = {'templateeditor'},
	autoconfirmed = {'reviewer', 'filemover', 'accountcreator'},
	user = {'autoconfirmed'},
	['*'] = {'user'}
},

--------------------------------------------------------------------------------
-- Wrapper templates and their default arguments
--------------------------------------------------------------------------------

-- This table contains wrapper templates used with the module, and their
-- default arguments. Templates specified in this table should contain the
-- following invocation, and no other template content:
--
-- {{#invoke:Protection banner|main}}
--
-- If other content is desired, it can be added between
-- &lt;noinclude&gt;...&lt;/noinclude&gt; tags.
--
-- When a user calls one of these wrapper templates, they will use the
-- default arguments automatically. The arguments cannot be overwritten by the
-- user.
wrappers = {
	['Template:Pp']                         = {},
	['Template:Pp-blp']                     = {'blp'},
	-- we don't need Template:Pp-create
	['Template:Pp-dispute']                 = {'dispute'},
	['Template:Pp-main-page']                = {'mainpage'},
	['Template:Pp-move']                    = {action = 'move'},
	['Template:Pp-move-dispute']            = {'dispute', action = 'move'},
	-- we don't need Template:Pp-move-indef
	['Template:Pp-move-vandalism']          = {'vandalism', action = 'move'},
	['Template:Pp-office']                  = {'office'},
	['Template:Pp-office-dmca']             = {'dmca'},
	['Template:Pp-pc1']                     = {action = 'autoreview', small = true},
	['Template:Pp-pc2']                     = {action = 'autoreview', small = true},
	['Template:Pp-reset']                   = {'reset'},
	['Template:Pp-semi-indef']              = {expiry = 'indef', small = true},
	['Template:Pp-sock']                    = {'sock'},
	['Template:Pp-template']                = {'template', small = true},
	['Template:Pp-usertalk']                = {'usertalk'},
	['Template:Pp-vandalism']               = {'vandalism'},
},

--------------------------------------------------------------------------------
-- 
--                                 MESSAGES
-- 
--------------------------------------------------------------------------------

msg = {

--------------------------------------------------------------------------------
-- Intro blurb and intro fragment
--------------------------------------------------------------------------------

-- These messages specify what is produced by the ${INTROBLURB} and
-- ${INTROFRAGMENT} parameters. If the protection is temporary they use the
-- intro-blurb-expiry or intro-fragment-expiry, and if not they use
-- intro-blurb-noexpiry or intro-fragment-noexpiry.
-- It is possible to use banner parameters in these messages.
['intro-blurb-expiry'] = '${PROTECTIONBLURB} until ${EXPIRY}.',
['intro-blurb-noexpiry'] = '${PROTECTIONBLURB}.',
['intro-fragment-expiry'] = '${PROTECTIONBLURB} until ${EXPIRY},',
['intro-fragment-noexpiry'] = '${PROTECTIONBLURB}',

--------------------------------------------------------------------------------
-- Tooltip blurb
--------------------------------------------------------------------------------

-- These messages specify what is produced by the ${TOOLTIPBLURB} parameter.
-- If the protection is temporary the tooltip-blurb-expiry message is used, and
-- if not the tooltip-blurb-noexpiry message is used.
-- It is possible to use banner parameters in these messages.
['tooltip-blurb-expiry'] = 'This ${PAGETYPE} is ${PROTECTIONLEVEL} until ${EXPIRY}.',
['tooltip-blurb-noexpiry'] = 'This ${PAGETYPE} is ${PROTECTIONLEVEL}.',
['tooltip-fragment-expiry'] = 'This ${PAGETYPE} is ${PROTECTIONLEVEL} until ${EXPIRY},',
['tooltip-fragment-noexpiry'] = 'This ${PAGETYPE} is ${PROTECTIONLEVEL}',

--------------------------------------------------------------------------------
-- Special explanation blurb
--------------------------------------------------------------------------------

-- An explanation blurb for pages that cannot be unprotected, e.g. for pages
-- in the MediaWiki namespace.
-- It is possible to use banner parameters in this message.
['explanation-blurb-nounprotect'] = 'See the [[Wikipedia:Protection policy|'
	.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
	.. ' Please discuss any changes on the ${TALKPAGE}; you'
	.. ' may ${EDITREQUEST} to ask an'
	.. ' [[Wikipedia:Administrators|administrator]] to make an edit if it'
	.. ' is [[Help:Minor edit#When to mark an edit as a minor edit'
	.. '|uncontroversial]] or supported by [[Wikipedia:Consensus'
	.. '|consensus]].',

--------------------------------------------------------------------------------
-- Protection log display values
--------------------------------------------------------------------------------

-- These messages determine the display values for the protection log link
-- or the pending changes log link produced by the ${PROTECTIONLOG} parameter.
-- It is possible to use banner parameters in these messages.
['protection-log-display'] = 'protection log',
['pc-log-display'] = 'pending changes log',

--------------------------------------------------------------------------------
-- Current version display values
--------------------------------------------------------------------------------

-- These messages determine the display values for the page history link
-- or the move log link produced by the ${CURRENTVERSION} parameter.
-- It is possible to use banner parameters in these messages.
['current-version-move-display'] = 'current title',
['current-version-edit-display'] = 'current version',

--------------------------------------------------------------------------------
-- Talk page
--------------------------------------------------------------------------------

-- This message determines the display value of the talk page link produced
-- with the ${TALKPAGE} parameter.
-- It is possible to use banner parameters in this message.
['talk-page-link-display'] = 'talk page',

--------------------------------------------------------------------------------
-- Edit requests
--------------------------------------------------------------------------------

-- This message determines the display value of the edit request link produced
-- with the ${EDITREQUEST} parameter.
-- It is possible to use banner parameters in this message.
['edit-request-display'] = 'submit an edit request',

--------------------------------------------------------------------------------
-- Expiry date format
--------------------------------------------------------------------------------

-- This is the format for the blurb expiry date. It should be valid input for
-- the first parameter of the #time parser function.
['expiry-date-format'] = 'F j, Y',

--------------------------------------------------------------------------------
-- Tracking categories
--------------------------------------------------------------------------------

-- These messages determine which tracking categories the module outputs.
['tracking-category-incorrect'] = 'Wikipedia pages with incorrect protection templates',
['tracking-category-expiry'] = 'Wikipedia protected pages without expiry',
['tracking-category-template'] = 'Wikipedia template-protected pages other than templates and modules',

--------------------------------------------------------------------------------
-- Images
--------------------------------------------------------------------------------

-- These are images that are not defined by their protection action and protection level.
['image-filename-indef'] = 'Padlock-red.svg',
['image-filename-default'] = 'Transparent.gif',

--------------------------------------------------------------------------------
-- Error message blurb
--------------------------------------------------------------------------------

-- This is the blurb that is outputted with error messages produced by the
-- module. $1 is replaced with the error message text. The whole message is
-- turned into a large red error message, so there is no need to add HTML
-- styling.
['error-message-blurb'] = 'Error: $1 ([[Module:Protection banner#Errors|help]])'

--------------------------------------------------------------------------------
-- End messages
--------------------------------------------------------------------------------
}

--------------------------------------------------------------------------------
-- End configuration
--------------------------------------------------------------------------------
}</text>
            <sha1>m8hjxrhtz1scvqz707hxvortaz4oj8a</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:Sidebar</title>
        <ns>828</ns>
        <id>678</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6975</id>
            <parentid>6974</parentid>
            <timestamp>2015-03-16T19:26:41Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="7721">--
-- This module implements {{Sidebar}}
--
 
local p = {}
 
local getArgs
local HtmlBuilder = require('Module:HtmlBuilder')
local navbar = require('Module:Navbar')._navbar
 
local function trimAndAddAutomaticNewline(s)
	-- For compatibility with the original {{sidebar with collapsible lists}} 
	-- implementation, which passed some parameters through {{#if}} to trim
	-- their whitespace. This also triggered the automatic newline behavior.
	-- ([[meta:Help:Newlines and spaces#Automatic newline]])
	s = mw.ustring.gsub(s, "^%s*(.-)%s*$", "%1")
	if mw.ustring.find(s, '^[#*:;]') or mw.ustring.find(s, '^{|') then
		return '\n' .. s
	else
		return s
	end
end

local function _sidebar(args)
	local root = HtmlBuilder.create()
	local child = args.child and mw.text.trim(args.child) == 'yes'
	
	if not child then
		root = root
			.tag('table')
			.addClass('vertical-navbox')
			.addClass(args.wraplinks ~= 'true' and 'nowraplinks')
			.addClass(args.bodyclass or args.class)
			.attr('cellspacing', args.cellspacing or 5)
			.attr('cellpadding', args.cellpadding or 0)
			.css('float', args.float or 'right')
			.css('clear', (args.float == 'none' and 'both') or args.float or 'right')
			.css('width', args.width or '22.0em')
			.css('margin', args.float == 'left' and '0 1.0em 1.0em 0' or '0 0 1.0em 1.0em')
			.css('background', '#f9f9f9')
			.css('border', '1px solid #aaa')
			.css('padding', '0.2em')
			.css('border-spacing', '0.4em 0')
			.css('text-align', 'center')
			.css('line-height', '1.4em')
			.css('font-size', '88%')
			.cssText(args.bodystyle or args.style)
	
		if args.outertitle then
			root
				.tag('caption')
					.addClass(args.outertitleclass)
					.css('padding-bottom', '0.2em')
					.css('font-size', '125%')
					.css('line-height', '1.2em')
					.css('font-weight', 'bold')
					.cssText(args.outertitlestyle)
					.wikitext(args.outertitle)
		end
	
		if args.topimage then
			local imageCell = root.tag('tr').tag('td')
			
			imageCell
				.addClass(args.topimageclass)
				.css('padding', '0.4em 0')
				.cssText(args.topimagestyle)
				.wikitext(args.topimage)
			
			if args.topcaption then
				imageCell
					.tag('div')
						.css('padding-top', '0.2em')
						.css('line-height', '1.2em')
						.cssText(args.topcaptionstyle)
						.wikitext(args.topcaption)
			end
		end
		
		if args.pretitle then
			root
				.tag('tr')
					.tag('td')
						.addClass(args.pretitleclass)
						.cssText(args.basestyle)
						.css('padding-top', args.topimage and '0.2em' or '0.4em')
						.css('line-height', '1.2em')
						.cssText(args.pretitlestyle)
						.wikitext(args.pretitle)
		end

	end

	if args.title then
		if child then
			root
				.wikitext(args.title)
				.tag('/th', {unclosed = true})
				.tag('/tr', {unclosed = true})
		else
			root
				.tag('tr')
					.tag('th')
						.addClass(args.titleclass)
						.cssText(args.basestyle)
						.css('padding', '0.2em 0.4em 0.2em')
						.css('padding-top', args.pretitle and 0)
						.css('font-size', '145%')
						.css('line-height', '1.2em')
						.cssText(args.titlestyle)
						.wikitext(args.title)
		end
	end

	if args.image then
		local imageCell = root.tag('tr').tag('td')
		
		imageCell
			.addClass(args.imageclass)
			.css('padding', '0.2em 0 0.4em')
			.cssText(args.imagestyle)
			.wikitext(args.image)
			
		if args.caption then
			imageCell
				.tag('div')
					.css('padding-top', '0.2em')
					.css('line-height', '1.2em')
					.cssText(args.captionstyle)
					.wikitext(args.caption)
		end
	end
	
	if args.above then
		root
			.tag('tr')
				.tag('td')
					.addClass(args.aboveclass)
					.css('padding', '0.3em 0.4em 0.3em')
					.css('font-weight', 'bold')
					.cssText(args.abovestyle)
					.newline()	  -- newline required for bullet-points to work
					.wikitext(args.above)
	end

	local rowNums = {}
	for k, v in pairs(args) do
		k = '' .. k
		local num = k:match('^heading(%d+)$') or k:match('^content(%d+)$')
		if num then table.insert(rowNums, tonumber(num)) end
	end
	table.sort(rowNums)
	-- remove duplicates from the list (e.g. 3 will be duplicated if both heading3 and content3 are specified)
	for i = #rowNums, 1, -1 do
		if rowNums[i] == rowNums[i - 1] then
			table.remove(rowNums, i)
		end
	end

	for i, num in ipairs(rowNums) do
		local heading = args['heading' .. num]
		if heading then
			root
				.tag('tr')
					.tag('th')
						.addClass(args.headingclass)
						.css('padding', '0.1em')
						.cssText(args.basestyle)
						.cssText(args.headingstyle)
						.cssText(args['heading' .. num .. 'style'])
						.newline()
						.wikitext(heading)
		end
		
		local content = args['content' .. num]
		if content then
			root
				.tag('tr')
					.tag('td')
						.addClass(args.contentclass)
						.css('padding', '0 0.1em 0.4em')
						.cssText(args.contentstyle)
						.cssText(args['content' .. num .. 'style'])
						.newline()
						.wikitext(content)
						.done()
					.newline()  -- Without a linebreak after the &lt;/td&gt;, a nested list like "* {{hlist| ...}}" doesn't parse correctly.
		end
	end

	if args.below then
		root
			.tag('tr')
				.tag('td')
					.addClass(args.belowclass)
					.css('padding', '0.3em 0.4em 0.3em')
					.css('font-weight', 'bold')
					.cssText(args.belowstyle)
					.newline()
					.wikitext(args.below)
	end

	if not child then
		local navbarArg = args.navbar or args.tnavbar
		if navbarArg ~= 'none' and navbarArg ~= 'off' then
			root
				.tag('tr')
					.tag('td')
						.css('text-align', 'right')
						.css('font-size', '115%')
						.cssText(args.navbarstyle or args.tnavbarstyle)
						.wikitext(navbar{
							args.name,
							mini = 1,
							fontstyle = args.navbarfontstyle or args.tnavbarfontstyle
						})
		end
	end

	return tostring(root)
end

function _collapsibleSidebar(args)
	args.abovestyle = 'border-top: 1px solid #aaa; border-bottom: 1px solid #aaa;' .. (args.abovestyle or '')
	args.belowstyle = 'border-top: 1px solid #aaa; border-bottom: 1px solid #aaa;' .. (args.belowstyle or '')
	args.navbarstyle = 'padding-top: 0.6em;' .. (args.navbarstyle or args.tnavbarstyle or '')
	
	local contentArgs = {}
	
	for k, v in pairs(args) do
		local num = ('' .. k):match('^list(%d+)$')
		if num then 
			local expand = args.expanded and (args.expanded == 'all' or args.expanded == args['list' .. num .. 'name'])
			
			local row = HtmlBuilder.create('div')
			row
				.addClass('NavFrame')
				.addClass((not expand) and 'collapsed')
				.css('border', 'none')
				.css('padding', 0)
				.cssText(args.listframestyle)
				.cssText(args['list' .. num .. 'framestyle'])
				.tag('div')
					.addClass('NavHead')
					.addClass(args.listtitleclass)
					.css('font-size', '105%')
					.css('background', 'transparent')
					.css('text-align', 'left')
					.cssText(args.basestyle)
					.cssText(args.listtitlestyle)
					.cssText(args['list' .. num .. 'titlestyle'])
					.wikitext(trimAndAddAutomaticNewline(args['list' .. num .. 'title'] or 'List'))
					.done()
				.tag('div')
					.addClass('NavContent')
					.addClass(args.listclass)
					.addClass(args['list' .. num .. 'class'])
					.css('font-size', '105%')
					.css('padding', '0.2em 0 0.4em')
					.css('text-align', 'center')
					.cssText(args.liststyle)
					.cssText(args['list' .. num .. 'style'])
					.wikitext(trimAndAddAutomaticNewline(args['list' .. num]))
					
			contentArgs['content' .. num] = tostring(row)
		end
	end

	for k, v in pairs(contentArgs) do
		args[k] = v
	end
	
	return _sidebar(args)
end
					  
function makeWrapper(func)
	return function(frame)
		if not getArgs then
			getArgs = require('Module:Arguments').getArgs
		end
		return func(getArgs(frame))
	end
end

return {
	sidebar = makeWrapper(_sidebar),
	collapsible = makeWrapper(_collapsibleSidebar)
}</text>
            <sha1>19dboglobxwcreawwy1h09t2lprmohh</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:String</title>
        <ns>828</ns>
        <id>679</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6977</id>
            <parentid>6976</parentid>
            <timestamp>2015-03-16T19:26:41Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="15731">--[[  

This module is intended to provide access to basic string functions.

Most of the functions provided here can be invoked with named parameters, 
unnamed parameters, or a mixture.  If named parameters are used, Mediawiki will 
automatically remove any leading or trailing whitespace from the parameter.  
Depending on the intended use, it may be advantageous to either preserve or
remove such whitespace.

Global options
    ignore_errors: If set to 'true' or 1, any error condition will result in 
        an empty string being returned rather than an error message.  
        
    error_category: If an error occurs, specifies the name of a category to 
        include with the error message.  The default category is  
        [Category:Errors reported by Module String].
        
    no_category: If set to 'true' or 1, no category will be added if an error
        is generated.
        
Unit tests for this module are available at Module:String/tests.
]]

local str = {}

--[[
len

This function returns the length of the target string.

Usage:
{{#invoke:String|len|target_string|}}
OR
{{#invoke:String|len|s=target_string}}

Parameters
    s: The string whose length to report

If invoked using named parameters, Mediawiki will automatically remove any leading or
trailing whitespace from the target string.  
]]
function str.len( frame )
    local new_args = str._getParameters( frame.args, {'s'} );
    local s = new_args['s'] or '';
    return mw.ustring.len( s )
end

--[[
sub

This function returns a substring of the target string at specified indices.

Usage:
{{#invoke:String|sub|target_string|start_index|end_index}}
OR
{{#invoke:String|sub|s=target_string|i=start_index|j=end_index}}

Parameters
    s: The string to return a subset of
    i: The fist index of the substring to return, defaults to 1.
    j: The last index of the string to return, defaults to the last character.
    
The first character of the string is assigned an index of 1.  If either i or j
is a negative value, it is interpreted the same as selecting a character by 
counting from the end of the string.  Hence, a value of -1 is the same as 
selecting the last character of the string.

If the requested indices are out of range for the given string, an error is 
reported.
]]
function str.sub( frame )
    local new_args = str._getParameters( frame.args, { 's', 'i', 'j' } );
    local s = new_args['s'] or '';
    local i = tonumber( new_args['i'] ) or 1;
    local j = tonumber( new_args['j'] ) or -1;
    
    local len = mw.ustring.len( s );

    -- Convert negatives for range checking
    if i &lt; 0 then
        i = len + i + 1;
    end
    if j &lt; 0 then
        j = len + j + 1;
    end
    
    if i &gt; len or j &gt; len or i &lt; 1 or j &lt; 1 then
        return str._error( 'String subset index out of range' );
    end
    if j &lt; i then
        return str._error( 'String subset indices out of order' );
    end
    
    return mw.ustring.sub( s, i, j )
end

--[[
This function implements that features of {{str sub old}} and is kept in order
to maintain these older templates.
]]
function str.sublength( frame )
    local i = tonumber( frame.args.i ) or 0
    local len = tonumber( frame.args.len )
    return mw.ustring.sub( frame.args.s, i + 1, len and ( i + len ) )
end

--[[
match

This function returns a substring from the source string that matches a 
specified pattern.

Usage:
{{#invoke:String|match|source_string|pattern_string|start_index|match_number|plain_flag|nomatch_output}}
OR
{{#invoke:String|pos|s=source_string|pattern=pattern_string|start=start_index
    |match=match_number|plain=plain_flag|nomatch=nomatch_output}}

Parameters
    s: The string to search
    pattern: The pattern or string to find within the string
    start: The index within the source string to start the search.  The first
        character of the string has index 1.  Defaults to 1.
    match: In some cases it may be possible to make multiple matches on a single 
        string.  This specifies which match to return, where the first match is 
        match= 1.  If a negative number is specified then a match is returned 
        counting from the last match.  Hence match = -1 is the same as requesting
        the last match.  Defaults to 1.
    plain: A flag indicating that the pattern should be understood as plain
        text.  Defaults to false.
    nomatch: If no match is found, output the "nomatch" value rather than an error.

If invoked using named parameters, Mediawiki will automatically remove any leading or
trailing whitespace from each string.  In some circumstances this is desirable, in 
other cases one may want to preserve the whitespace.

If the match_number or start_index are out of range for the string being queried, then
this function generates an error.  An error is also generated if no match is found.
If one adds the parameter ignore_errors=true, then the error will be suppressed and 
an empty string will be returned on any failure.

For information on constructing Lua patterns, a form of [regular expression], see:

* http://www.lua.org/manual/5.1/manual.html#5.4.1
* http://www.mediawiki.org/wiki/Extension:Scribunto/Lua_reference_manual#Patterns
* http://www.mediawiki.org/wiki/Extension:Scribunto/Lua_reference_manual#Ustring_patterns

]]
function str.match( frame )
    local new_args = str._getParameters( frame.args, {'s', 'pattern', 'start', 'match', 'plain', 'nomatch'} );
    local s = new_args['s'] or '';
    local start = tonumber( new_args['start'] ) or 1;
    local plain_flag = str._getBoolean( new_args['plain'] or false );
    local pattern = new_args['pattern'] or '';
    local match_index = math.floor( tonumber(new_args['match']) or 1 );
    local nomatch = new_args['nomatch'];
    
    if s == '' then
        return str._error( 'Target string is empty' );
    end
    if pattern == '' then
        return str._error( 'Pattern string is empty' );
    end
    if math.abs(start) &lt; 1 or math.abs(start) &gt; mw.ustring.len( s ) then
        return str._error( 'Requested start is out of range' );
    end
    if match_index == 0 then
        return str._error( 'Match index is out of range' );
    end
    if plain_flag then
        pattern = str._escapePattern( pattern );
    end
    
    local result
    if match_index == 1 then
        -- Find first match is simple case
        result = mw.ustring.match( s, pattern, start )
    else
        if start &gt; 1 then
            s = mw.ustring.sub( s, start );
        end
        
        local iterator = mw.ustring.gmatch(s, pattern);
        if match_index &gt; 0 then
            -- Forward search
            for w in iterator do
                match_index = match_index - 1;
                if match_index == 0 then
                    result = w;
                    break;
                end
            end    
        else
            -- Reverse search
            local result_table = {};
            local count = 1;
            for w in iterator do
                result_table[count] = w;
                count = count + 1;
            end
            
            result = result_table[ count + match_index ];            
        end
    end        
    
    if result == nil then
        if nomatch == nil then
            return str._error( 'Match not found' );
        else
            return nomatch;
        end
    else
        return result;
    end
end

--[[
pos

This function returns a single character from the target string at position pos.

Usage:
{{#invoke:String|pos|target_string|index_value}}
OR
{{#invoke:String|pos|target=target_string|pos=index_value}}

Parameters
    target: The string to search
    pos: The index for the character to return

If invoked using named parameters, Mediawiki will automatically remove any leading or
trailing whitespace from the target string.  In some circumstances this is desirable, in 
other cases one may want to preserve the whitespace.

The first character has an index value of 1.

If one requests a negative value, this function will select a character by counting backwards 
from the end of the string.  In other words pos = -1 is the same as asking for the last character.

A requested value of zero, or a value greater than the length of the string returns an error.
]]
function str.pos( frame )
    local new_args = str._getParameters( frame.args, {'target', 'pos'} );
    local target_str = new_args['target'] or '';
    local pos = tonumber( new_args['pos'] ) or 0;

    if pos == 0 or math.abs(pos) &gt; mw.ustring.len( target_str ) then
        return str._error( 'String index out of range' );
    end    
    
    return mw.ustring.sub( target_str, pos, pos );
end

--[[
str_find

This function duplicates the behavior of {{str_find}}, including all of its quirks.
This is provided in order to support existing templates, but is NOT RECOMMENDED for 
new code and templates.  New code is recommended to use the "find" function instead.

Returns the first index in "source" that is a match to "target".  Indexing is 1-based,
and the function returns -1 if the "target" string is not present in "source".

Important Note: If the "target" string is empty / missing, this function returns a
value of "1", which is generally unexpected behavior, and must be accounted for
separatetly.
]]
function str.str_find( frame )
    local new_args = str._getParameters( frame.args, {'source', 'target'} );
    local source_str = new_args['source'] or '';
    local target_str = new_args['target'] or '';

    if target_str == '' then
        return 1;
    end    
    
    local start = mw.ustring.find( source_str, target_str, 1, true )
    if start == nil then
        start = -1
    end
    
    return start
end

--[[
find

This function allows one to search for a target string or pattern within another
string.

Usage:
{{#invoke:String|find|source_str|target_string|start_index|plain_flag}}
OR
{{#invoke:String|find|source=source_str|target=target_str|start=start_index|plain=plain_flag}}

Parameters
    source: The string to search
    target: The string or pattern to find within source
    start: The index within the source string to start the search, defaults to 1
    plain: Boolean flag indicating that target should be understood as plain
        text and not as a Lua style regular expression, defaults to true

If invoked using named parameters, Mediawiki will automatically remove any leading or
trailing whitespace from the parameter.  In some circumstances this is desirable, in 
other cases one may want to preserve the whitespace.

This function returns the first index &gt;= "start" where "target" can be found 
within "source".  Indices are 1-based.  If "target" is not found, then this 
function returns 0.  If either "source" or "target" are missing / empty, this
function also returns 0.

This function should be safe for UTF-8 strings.
]]
function str.find( frame )
    local new_args = str._getParameters( frame.args, {'source', 'target', 'start', 'plain' } ); 
    local source_str = new_args['source'] or '';
    local pattern = new_args['target'] or '';
    local start_pos = tonumber(new_args['start']) or 1;
    local plain = new_args['plain'] or true;
        
    if source_str == '' or pattern == '' then
        return 0;
    end    
    
    plain = str._getBoolean( plain );

    local start = mw.ustring.find( source_str, pattern, start_pos, plain )
    if start == nil then
        start = 0
    end
    
    return start
end

--[[
replace

This function allows one to replace a target string or pattern within another
string.

Usage:
{{#invoke:String|replace|source_str|pattern_string|replace_string|replacement_count|plain_flag}}
OR
{{#invoke:String|replace|source=source_string|pattern=pattern_string|replace=replace_string|
   count=replacement_count|plain=plain_flag}}

Parameters
    source: The string to search
    pattern: The string or pattern to find within source
    replace: The replacement text
    count: The number of occurences to replace, defaults to all.
    plain: Boolean flag indicating that pattern should be understood as plain
        text and not as a Lua style regular expression, defaults to true 
]]
function str.replace( frame )
    local new_args = str._getParameters( frame.args, {'source', 'pattern', 'replace', 'count', 'plain' } ); 
    local source_str = new_args['source'] or '';
    local pattern = new_args['pattern'] or '';
    local replace = new_args['replace'] or '';
    local count = tonumber( new_args['count'] );
    local plain = new_args['plain'] or true;
        
    if source_str == '' or pattern == '' then
        return source_str;
    end    
    plain = str._getBoolean( plain );

    if plain then
        pattern = str._escapePattern( pattern );
        replace = mw.ustring.gsub( replace, "%%", "%%%%" ); --Only need to escape replacement sequences.
    end
    
    local result;

    if count ~= nil then
        result = mw.ustring.gsub( source_str, pattern, replace, count );
    else
        result = mw.ustring.gsub( source_str, pattern, replace );
    end        

    return result;
end

--[[ 
    simple function to pipe string.rep to templates.
]]

function str.rep( frame )
    local repetitions = tonumber( frame.args[2] )
    if not repetitions then 
        return str._error( 'function rep expects a number as second parameter, received "' .. ( frame.args[2] or '' ) .. '"' )
    end
    return string.rep( frame.args[1] or '', repetitions )
end

--[[
Helper function that populates the argument list given that user may need to use a mix of
named and unnamed parameters.  This is relevant because named parameters are not
identical to unnamed parameters due to string trimming, and when dealing with strings
we sometimes want to either preserve or remove that whitespace depending on the application.
]]
function str._getParameters( frame_args, arg_list )
    local new_args = {};
    local index = 1;
    local value;
    
    for i,arg in ipairs( arg_list ) do
        value = frame_args[arg]
        if value == nil then
            value = frame_args[index];
            index = index + 1;
        end
        new_args[arg] = value;
    end
    
    return new_args;
end        

--[[
Helper function to handle error messages.
]]
function str._error( error_str )
    local frame = mw.getCurrentFrame();
    local error_category = frame.args.error_category or 'Errors reported by Module String';
    local ignore_errors = frame.args.ignore_errors or false;
    local no_category = frame.args.no_category or false;
    
    if str._getBoolean(ignore_errors) then
        return '';
    end
    
    local error_str = '&lt;strong class="error"&gt;String Module Error: ' .. error_str .. '&lt;/strong&gt;';
    if error_category ~= '' and not str._getBoolean( no_category ) then
        error_str = '[[Category:' .. error_category .. ']]' .. error_str;
    end        
    
    return error_str;
end

--[[
Helper Function to interpret boolean strings
]]
function str._getBoolean( boolean_str )
    local boolean_value;
    
    if type( boolean_str ) == 'string' then
        boolean_str = boolean_str:lower();
        if boolean_str == 'false' or boolean_str == 'no' or boolean_str == '0' 
                or boolean_str == '' then
            boolean_value = false;
        else
            boolean_value = true;
        end    
    elseif type( boolean_str ) == 'boolean' then
        boolean_value = boolean_str;
    else
        error( 'No boolean value found' );
    end    
    return boolean_value
end

--[[
Helper function that escapes all pattern characters so that they will be treated 
as plain text.
]]
function str._escapePattern( pattern_str )
    return mw.ustring.gsub( pattern_str, "([%(%)%.%%%+%-%*%?%[%^%$%]])", "%%%1" );
end

return str</text>
            <sha1>l0shz7fzxb1bq626nihqwbptk7dfqd5</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:TableTools</title>
        <ns>828</ns>
        <id>680</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6979</id>
            <parentid>6978</parentid>
            <timestamp>2015-03-16T19:26:41Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="8030">--[[
------------------------------------------------------------------------------------
--                               TableTools                                       --
--                                                                                --
-- This module includes a number of functions for dealing with Lua tables.        --
-- It is a meta-module, meant to be called from other Lua modules, and should     --
-- not be called directly from #invoke.                                           --
------------------------------------------------------------------------------------
--]]

local libraryUtil = require('libraryUtil')

local p = {}

-- Define often-used variables and functions.
local floor = math.floor
local infinity = math.huge
local checkType = libraryUtil.checkType

--[[
------------------------------------------------------------------------------------
-- isPositiveInteger
--
-- This function returns true if the given value is a positive integer, and false
-- if not. Although it doesn't operate on tables, it is included here as it is
-- useful for determining whether a given table key is in the array part or the
-- hash part of a table.
------------------------------------------------------------------------------------
--]]
function p.isPositiveInteger(v)
	if type(v) == 'number' and v &gt;= 1 and floor(v) == v and v &lt; infinity then
		return true
	else
		return false
	end
end

--[[
------------------------------------------------------------------------------------
-- isNan
--
-- This function returns true if the given number is a NaN value, and false
-- if not. Although it doesn't operate on tables, it is included here as it is
-- useful for determining whether a value can be a valid table key. Lua will
-- generate an error if a NaN is used as a table key.
------------------------------------------------------------------------------------
--]]
function p.isNan(v)
	if type(v) == 'number' and tostring(v) == '-nan' then
		return true
	else
		return false
	end
end

--[[
------------------------------------------------------------------------------------
-- shallowClone
--
-- This returns a clone of a table. The value returned is a new table, but all
-- subtables and functions are shared. Metamethods are respected, but the returned
-- table will have no metatable of its own.
------------------------------------------------------------------------------------
--]]
function p.shallowClone(t)
	local ret = {}
	for k, v in pairs(t) do
		ret[k] = v
	end
	return ret
end

--[[
------------------------------------------------------------------------------------
-- removeDuplicates
--
-- This removes duplicate values from an array. Non-positive-integer keys are
-- ignored. The earliest value is kept, and all subsequent duplicate values are
-- removed, but otherwise the array order is unchanged.
------------------------------------------------------------------------------------
--]]
function p.removeDuplicates(t)
	checkType('removeDuplicates', 1, t, 'table')
	local isNan = p.isNan
	local ret, exists = {}, {}
	for i, v in ipairs(t) do
		if isNan(v) then
			-- NaNs can't be table keys, and they are also unique, so we don't need to check existence.
			ret[#ret + 1] = v
		else
			if not exists[v] then
				ret[#ret + 1] = v
				exists[v] = true
			end
		end	
	end
	return ret
end			

--[[
------------------------------------------------------------------------------------
-- numKeys
--
-- This takes a table and returns an array containing the numbers of any numerical
-- keys that have non-nil values, sorted in numerical order.
------------------------------------------------------------------------------------
--]]
function p.numKeys(t)
	checkType('numKeys', 1, t, 'table')
	local isPositiveInteger = p.isPositiveInteger
	local nums = {}
	for k, v in pairs(t) do
		if isPositiveInteger(k) then
			nums[#nums + 1] = k
		end
	end
	table.sort(nums)
	return nums
end

--[[
------------------------------------------------------------------------------------
-- affixNums
--
-- This takes a table and returns an array containing the numbers of keys with the
-- specified prefix and suffix. For example, for the table
-- {a1 = 'foo', a3 = 'bar', a6 = 'baz'} and the prefix "a", affixNums will
-- return {1, 3, 6}.
------------------------------------------------------------------------------------
--]]
function p.affixNums(t, prefix, suffix)
	checkType('affixNums', 1, t, 'table')
	checkType('affixNums', 2, prefix, 'string', true)
	checkType('affixNums', 3, suffix, 'string', true)

	local function cleanPattern(s)
		-- Cleans a pattern so that the magic characters ()%.[]*+-?^$ are interpreted literally.
		s = s:gsub('([%(%)%%%.%[%]%*%+%-%?%^%$])', '%%%1')
		return s
	end

	prefix = prefix or ''
	suffix = suffix or ''
	prefix = cleanPattern(prefix)
	suffix = cleanPattern(suffix)
	local pattern = '^' .. prefix .. '([1-9]%d*)' .. suffix .. '$'

	local nums = {}
	for k, v in pairs(t) do
		if type(k) == 'string' then			
			local num = mw.ustring.match(k, pattern)
			if num then
				nums[#nums + 1] = tonumber(num)
			end
		end
	end
	table.sort(nums)
	return nums
end

--[[
------------------------------------------------------------------------------------
-- numData
--
-- Given a table with keys like ("foo1", "bar1", "foo2", "baz2"), returns a table
-- of subtables in the format 
-- { [1] = {foo = 'text', bar = 'text'}, [2] = {foo = 'text', baz = 'text'} }
-- Keys that don't end with an integer are stored in a subtable named "other".
-- The compress option compresses the table so that it can be iterated over with
-- ipairs.
------------------------------------------------------------------------------------
--]]
function p.numData(t, compress)
	checkType('numData', 1, t, 'table')
	checkType('numData', 2, compress, 'boolean', true)
	local ret = {}
	for k, v in pairs(t) do
		local prefix, num = mw.ustring.match(tostring(k), '^([^0-9]*)([1-9][0-9]*)$')
		if num then
			num = tonumber(num)
			local subtable = ret[num] or {}
			if prefix == '' then
				-- Positional parameters match the blank string; put them at the start of the subtable instead.
				prefix = 1
			end
			subtable[prefix] = v
			ret[num] = subtable
		else
			local subtable = ret.other or {}
			subtable[k] = v
			ret.other = subtable
		end
	end
	if compress then
		local other = ret.other
		ret = p.compressSparseArray(ret)
		ret.other = other
	end
	return ret
end

--[[
------------------------------------------------------------------------------------
-- compressSparseArray
--
-- This takes an array with one or more nil values, and removes the nil values
-- while preserving the order, so that the array can be safely traversed with
-- ipairs.
------------------------------------------------------------------------------------
--]]
function p.compressSparseArray(t)
	checkType('compressSparseArray', 1, t, 'table')
	local ret = {}
	local nums = p.numKeys(t)
	for _, num in ipairs(nums) do
		ret[#ret + 1] = t[num]
	end
	return ret
end

--[[
------------------------------------------------------------------------------------
-- sparseIpairs
--
-- This is an iterator for sparse arrays. It can be used like ipairs, but can
-- handle nil values.
------------------------------------------------------------------------------------
--]]
function p.sparseIpairs(t)
	checkType('sparseIpairs', 1, t, 'table')
	local nums = p.numKeys(t)
	local i = 0
	local lim = #nums
	return function ()
		i = i + 1
		if i &lt;= lim then
			local key = nums[i]
			return key, t[key]
		else
			return nil, nil
		end
	end
end

--[[
------------------------------------------------------------------------------------
-- size
--
-- This returns the size of a key/value pair table. It will also work on arrays,
-- but for arrays it is more efficient to use the # operator.
------------------------------------------------------------------------------------
--]]
function p.size(t)
	checkType('size', 1, t, 'table')
	local i = 0
	for k in pairs(t) do
		i = i + 1
	end
	return i
end

return p</text>
            <sha1>k1omc17qij757n8hd68yihcqxo4biqi</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:Unsubst</title>
        <ns>828</ns>
        <id>681</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6981</id>
            <parentid>6980</parentid>
            <timestamp>2015-03-16T19:26:42Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1803">local p = {}

local specialParams = {
	['$N'] = 'template name', -- Deprecated, but keeping until it is removed from transcluding templates
	['$B'] = 'template content',
}

p[''] = function ( frame )
	if not frame:getParent() then
		error( '{{#invoke:Unsubst|}} makes no sense without a parent frame' )
	end
	if not frame.args['$B'] then
		error( '{{#invoke:Unsubst|}} requires parameter $B (template content)' )
	end
	
	if mw.isSubsting() then
		---- substing
		-- Combine passed args with passed defaults
		local args = {}
		for k, v in pairs( frame.args ) do
			if not specialParams[k] then
				if v == '__DATE__' then
					v = mw.getContentLanguage():formatDate( 'F Y' )
				end
				args[k] = v
			end
		end
		for k, v in pairs( frame:getParent().args ) do
			args[k] = v
		end

		-- Build an equivalent template invocation
		-- First, find the title to use
		local titleobj = mw.title.new(frame:getParent():getTitle())
		local title
		if titleobj.namespace == 10 then -- NS_TEMPLATE
			title = titleobj.text
		elseif titleobj.namespace == 0 then -- NS_MAIN
			title = ':' .. titleobj.text
		else
			title = titleobj.prefixedText
		end

		-- Build the invocation body with numbered args first, then named
		local ret = '{{' .. title
		for k, v in ipairs( args ) do
			if string.find( v, '=', 1, true ) then
				-- likely something like 1=foo=bar, we need to do it as a named arg
				break
			end
			ret = ret .. '|' .. v
			args[k] = nil
		end
		for k, v in pairs( args ) do
			ret = ret .. '|' .. k .. '=' .. v
		end
		
		return ret .. '}}'
	else
		---- Not substing
		-- Just return the "body"
		return frame.args['$B'] .. (frame.args['$N'] and frame:getParent():getTitle() == mw.title.getCurrentTitle().prefixedText and '[[Category:Calls to Module:Unsubst that use $N]]' or '')
	end
end

return p</text>
            <sha1>fdjjtjtthk6em9exzsl6061n0mrq7o3</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:Yesno</title>
        <ns>828</ns>
        <id>682</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6983</id>
            <parentid>6982</parentid>
            <timestamp>2015-03-16T19:26:42Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>Scribunto</model>
            <format>text/plain</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="678">-- Function allowing for consistent treatment of boolean-like wikitext input.
-- It works similarly to the template {{yesno}}.

return function (val, default)
	-- If your wiki uses non-ascii characters for any of "yes", "no", etc., you
	-- should replace "val:lower()" with "mw.ustring.lower(val)" in the
	-- following line.
	val = type(val) == 'string' and val:lower() or val
	if val == nil then
		return nil
	elseif val == true 
		or val == 'yes'
		or val == 'y'
		or val == 'true'
		or tonumber(val) == 1
	then
		return true
	elseif val == false
		or val == 'no'
		or val == 'n'
		or val == 'false'
		or tonumber(val) == 0
	then
		return false
	else
		return default
	end
end</text>
            <sha1>ew4l88ll7bbgr20npia5rfyblzqhgyg</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Analytic Instantiation/doc</title>
        <ns>10</ns>
        <id>683</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>9763</id>
            <parentid>9674</parentid>
            <timestamp>2016-03-25T02:53:44Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="802">This template generates SMW internal objects for Instantiations, which are typically created from [[:Form:Analytic]].
In order to function properly, instantiations only properly function when on the same page as an [[:Template:Analytic|Analytic]].
The SMW internal objects are rendered back again when retrieved, using [[:Template:AnalyticInstantiationDetail]].

It should be called in the following format:

&lt;pre&gt;
{{Analytic Instantiation
|Instantiation Id=
|Lead Developer=
|Other Developers=
|Performance Notes=
|Instantiation Notes=
|Platform=
|Maturity Level=
|Certainty Probability=
|Programming Language=
|Files=&lt;File1;File2;...&gt;
&lt;/pre&gt;
Remaining fields dynamically generated from Splunk data (via background script):
&lt;pre&gt;
|Example Query=
|Query Link=
|Output Command=
|Output Format=
}}
&lt;/pre&gt;</text>
            <sha1>llra2himjf6kxukcqynpevod4ckg9ak</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Analytic/doc</title>
        <ns>10</ns>
        <id>684</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>9769</id>
            <parentid>9353</parentid>
            <timestamp>2016-03-25T03:27:26Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="810">
This template generates the Analytics that are typically created from [[:Form:Analytic]].
It works in conjunction with [[:Template:Analytic Instantiation]] [[:Template:ATTACK Reference]] and [[:Template:Analytic Unit Test]]
It should be called in the following format:

&lt;pre&gt;
{{Analytic
|ShortSummary=
|Hypothesis=
|Description=
|LessonsLearned=
|AnalyticNotes=
|OutputDataDescription=
|SubmissionDate=
|AnalyticType=
|InformationDomain=
|HostSubtypes=
|ExternalSubtypes=
|NetworkSubtypes=
|NetworkProtocols=
|AnalyticUploadFile=
|Status=
|MelioraStatus=
|UnitTests={{Analytic Unit Test|...}}{{Analytic Unit Test|...}}
|Instantiations={{Analytic Instantiation|...}}{{Analytic Instantiation|...}}
|ATTACK References={{ATTACK Reference|...}}{{ATTACK Reference|...}}
}}
&lt;/pre&gt;
[[Category:Template documentation]]</text>
            <sha1>anwni717rvv5r3jh9b41e19ajdxg5om</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:!!</title>
        <ns>10</ns>
        <id>685</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6991</id>
            <timestamp>2015-03-16T20:05:59Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2">||</text>
            <sha1>n66zfqwd55pyl9cyuu0swb54k74hgm3</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:AnalyticInstantiationDetail/doc</title>
        <ns>10</ns>
        <id>686</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>9677</id>
            <parentid>7589</parentid>
            <timestamp>2016-03-24T23:34:12Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1387">This template aids in rendering the [[:Template:Analytic Instantiation|Analytic Instantiations]], which are normally only Semantic Internal Objects. This means that instantiations do not have their own pages, but rather live as entries in the SMW database. 

The &lt;code&gt;#ask&lt;/code&gt; function retrieves expectations, and passes the data into this template, using
&lt;pre&gt;
|format=template
|template=AnalyticInstantiationDetail
|named args=yes
|link=none
&lt;/pre&gt;

An example for retrieving the analytics for a single page (and used in [[:Template:Analytic]]) is

&lt;pre&gt;{{#ask: [[Is Analytic Instantiation Of::{{PAGENAME}}]]
|default=None
|format=template
|template=AnalyticInstantiationDetail
|named args=yes
|link=none
|sort=Has Instantiation Name
|?Has Lead Developer
|?Has Instantiation Name
|?Has Instantiation Id
|?Has Platform
|?Has Platform Other
|?Has Maturity Level
|?Has a Certainty Probability
|?Has Programming Language
|?Has Programming Language Other
|?Has Input Data Format
|?Has Output Data Format
|?Has Other Developers
|?Has Instantiation Notes
|?Has Example Query
|?Has Query Link
|?Has Performance Notes
&lt;!--
|?Has Pipeline Element Name
|?Has Pipeline Element Type
|?Has Pipeline Element Link
|?Has Pipeline Element Description
|?Has Pipeline Input From
|?Has Pipeline Dependency On
|?Has Required Field
--&gt;
|?Has Upload Files
|?Has Output Format
|?Has Output Command
}}&lt;/pre&gt;</text>
            <sha1>6kns6ngihejtb2pa26jqa9pzqq747m4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Operator/doc</title>
        <ns>10</ns>
        <id>687</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7000</id>
            <timestamp>2015-03-16T20:14:45Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="237">This is the "Operator" template. It is typically created from [[Form:Operator]]
It should be called in the following format:
&lt;pre&gt;
{{Operator
|OperatorType=
|InputLines=
|Object=
|ShortSummary=
|Fields=
|Criteria=
|Description=
}}
&lt;/pre&gt;</text>
            <sha1>6kwzogcg1zkl1wauw4tx651uqa2at59</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:ATTACK Coverage/doc</title>
        <ns>10</ns>
        <id>690</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>8383</id>
            <parentid>7006</parentid>
            <timestamp>2015-07-10T17:37:38Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="35">[[Category:Template documentation]]</text>
            <sha1>qwr4vqzquf4arnc8povtf6tjgmsa6cr</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:ATTACK Reference/doc</title>
        <ns>10</ns>
        <id>691</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>9955</id>
            <parentid>7235</parentid>
            <timestamp>2016-03-25T04:31:43Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="436">Works with [[:Template:Analytic]] to create a subobject for SMW. The subobject points to the page via [[Property:Is ATTACK Reference For]].

The subobject has the following properties
* [[Property:Is ATTACK Reference For]] - ''set to the value of the current page
* [[Property:Has ATTACK Technique]]
* [[Property:Has ATTACK Tactic]]
* [[Property:Has ATTACK Coverage]]

&lt;pre&gt;
{{ATTACK Reference
|Method=
|Categories=
|Coverage=
}}
&lt;/pre&gt;</text>
            <sha1>5v8pxuzz2eu4gzumpsjuhbtkkwbo4he</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Abstraction Object/doc</title>
        <ns>10</ns>
        <id>692</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7010</id>
            <timestamp>2015-03-16T20:21:21Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="615">This template is used in the data model in order to integrate it with CybOX. Analytics are event-driven, and an event is an action that occurs on an object, such as its creation, modification, deletion, etc. Each object also has a set of associated fields, as defined in CybOX.

In CAR, these are implemented as two dimensions to an object. As an event is generated and logged, a selection of fields and their values are reported. Any analytic is only possible if all of the required object-&gt;action-&gt;field combinations in its pipeline are met.

&lt;pre&gt;{{Abstraction Object
|Name
|Actions
|Fields
|Description
}}&lt;/pre&gt;</text>
            <sha1>0mg0co0t6qymaxr8vvg2atdr4xllj6c</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:AnalyticQuery/doc</title>
        <ns>10</ns>
        <id>693</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7012</id>
            <timestamp>2015-03-16T20:21:57Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="0"/>
            <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Article Link/doc</title>
        <ns>10</ns>
        <id>694</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7014</id>
            <timestamp>2015-03-16T20:22:36Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="0"/>
            <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:PipelineLink/doc</title>
        <ns>10</ns>
        <id>696</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7166</id>
            <parentid>7018</parentid>
            <timestamp>2015-03-17T09:23:02Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="407">Takes a pipeline element by name, looks up the link, and wraps the original text in a link. Creates the MW markup: &lt;code&gt;&lt;nowiki&gt;[[&lt;Link&gt;|&lt;Name&gt;: &lt;Description&gt;]]&lt;/nowiki&gt;&lt;/code&gt;

Called with:

&lt;pre&gt;
{{PipelineLink
|&lt;Name&gt;
|&lt;Delim&gt; (default=':')
}}&lt;/pre&gt;

Also called with:
&lt;pre&gt;
{{PipelineLink
|?Has Pipeline Element Name
|?Has Pipeline Element Description
|?Has Pipeline Element Link
|customparam=
}}&lt;/pre&gt;</text>
            <sha1>843m76vpsc67y5zsduz36rxjp5pvk19</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Pipe/doc</title>
        <ns>10</ns>
        <id>697</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7019</id>
            <timestamp>2015-03-16T20:27:53Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="210">HTML escaped pipe character &lt;code&gt;&amp;amp;#124;&lt;/code&gt;.

Used to create pipes in forms, so that the actual pipe &lt;code&gt;&amp;#124;&lt;/code&gt; doesn't break functionality.

Called as &lt;code&gt;&amp;#123;&amp;#123;pipe&amp;#125;&amp;#125;&lt;/code&gt;</text>
            <sha1>qlubaa5b8pfc9y3g8mda8m8z3900ngw</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Hidden/doc</title>
        <ns>10</ns>
        <id>698</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7022</id>
            <timestamp>2015-03-16T20:28:45Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="325">This template no content such as breaks and paragraphs that arise from several empty lines. Wrapping text in '''Hidden''' will mute all output, so that nothing makes it to the page. It's useful for variable declarations and other parser functions that only perform internal operations.
&lt;pre&gt;
{{Hidden
|&lt;muted input&gt;
}}
&lt;/pre&gt;</text>
            <sha1>p4ahe8kqnb86gch7qhmn9ju8vsw1dy8</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Definition/doc</title>
        <ns>10</ns>
        <id>699</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7232</id>
            <parentid>7023</parentid>
            <timestamp>2015-03-17T15:58:45Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="155">Retrieves a stored definition that was originally created via  [[:Template:Define]]. The template is called via
&lt;pre&gt;{{Definition
|&lt;Term&gt;
|&lt;Page&gt;
}}
&lt;/pre&gt;</text>
            <sha1>awfogdkkjt6ye6f6ke8jhqpm71cppt2</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Define/doc</title>
        <ns>10</ns>
        <id>700</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7233</id>
            <parentid>7027</parentid>
            <timestamp>2015-03-17T15:58:56Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="285">Stores a definition entry, which has three properties

&lt;code&gt;Is Definition Of&lt;/code&gt; Assigned to the page in which the term is defined

&lt;code&gt;Term&lt;/code&gt; The word being defined

&lt;code&gt;Definition&lt;/code&gt; The definition to be stored

The term can be retrieved via [[:Template:Definition]]</text>
            <sha1>9r20clvu0dmww9igllrweygj7ah9wvf</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:DynamicField/doc</title>
        <ns>10</ns>
        <id>701</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7048</id>
            <parentid>7030</parentid>
            <timestamp>2015-03-16T20:55:30Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="225">This template is used as a wrapper for the &lt;code&gt;field&lt;/code&gt; tag on forms. It allows to create templatized/dynamic forms. It is called using:
&lt;pre&gt;&lt;nowiki&gt;
{{DynamicField|&lt; arguments into {{{Field|...}}} &gt;&gt;}}
&lt;/nowiki&gt;&lt;/pre&gt;</text>
            <sha1>rrparvlpnfxrkr3i9rrbjexhuk50sz7</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Concept:Analytic Instantiations</title>
        <ns>108</ns>
        <id>702</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7111</id>
            <parentid>7110</parentid>
            <timestamp>2015-03-16T22:49:47Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="398">{{#concept: [[Is Analytic Instantiation Of::+]]
| Implementations of Analytics
}}

{{#drilldowninfo:
filters=
Information Domain (property=Has Information Domain),
Maturity (property=Has Maturity Level),
Lead Developer (property=Has Lead Developer),
Date (property=Has Submission Date),
ATT&amp;CK Reference (property=Has ATTACK Reference)
|display parameters=mainlabel=-;?Has Pipeline Element Link=
}}</text>
            <sha1>3jie15polgpjhbzhd53r5k6toopwyde</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Sensor Infobox</title>
        <ns>10</ns>
        <id>705</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>8142</id>
            <parentid>8138</parentid>
            <timestamp>2015-05-04T14:58:41Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="310">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;{{infobox
| above= {{{Name|}}}
| bodyclass=skipempty
| label1    = Manufacturer      | data1     = {{{Manufacturer|}}}
| label2    = Version           | data2     = {{{Version|}}}
| label3    = Website           | data3     = {{{Website|}}}
}}&lt;/includeonly&gt;</text>
            <sha1>74hmm2cu3ph3k27x1gkw11l93qlvq99</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Analytic Infobox</title>
        <ns>10</ns>
        <id>706</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10152</id>
            <parentid>10151</parentid>
            <timestamp>2016-03-25T15:20:09Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1054">{{infobox
| above= {{#ifeq: {{PAGENAME}}|RunQuery||{{PAGENAME }} }}
| bodyclass=skipempty

| label1= Submission Date
| data1= [[Has Submission Date::{{#time: m/d/Y | {{{SubmissionDate|}}} }}]]

| label2=Owner
| data2=[[Has Owner::{{{Owner|}}}]]

| label3=Information Domain
| data3={{#arraymap:{{{Domains|}}}|,|x|[[Has Information Domain::x]]}}

| label4=Host Subtypes
| data4={{#arraymap:{{{HostSubtypes|}}}|,|x|[[Has Host Subtype::x]]}}

| label5=Network Subtypes
| data5={{#arraymap:{{{NetworkSubtypes|}}}|,|x|[[Has Network Subtype::x]]}}

| label6=Network Protocols
| data6={{#arraymap:{{{NetworkProtocols|}}}|,|x|[[Has Network Protocol::x]]}}

| label7=External Subtypes
| data7={{#arraymap:{{{ExternalSubtypes|}}}|,|@@@@|[[Has External Subtype::@@@@]]}}

| label8=Type
| data8={{#arraymap:{{{AnalyticTypes|}}}|,|x|[[Has Analytic Type::x]]}}

| label9=Analytic Subtypes
| data9={{#arraymap:{{{AnalyticSubtypes|}}}|,|x|[[Has Analytic Subtype::x]]}}

| label10=Status
| data10={{{Status|}}}

| label11=Meliora Approved
| data11={{{MelioraStatus|}}}
}}</text>
            <sha1>f54ook34ui50p78m6lh34x2vrnhkli5</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Operator Infobox</title>
        <ns>10</ns>
        <id>707</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>8469</id>
            <parentid>7189</parentid>
            <timestamp>2015-08-17T17:45:53Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="369">{{infobox
| above= {{PAGENAME }}
| bodyclass=skipempty

| label1= Operator Type
| data1= {{{OperatorType|}}}

| label2= Object
| data2= {{{Object|}}}

| label3= Input Lines
| data3= {{#arraymap: {{{Inputs|}}}|,|$|$|&lt;br/&gt;}}

| label4= Fields
| data4= {{RequiredFieldsTable|fields={{{Fields|}}}|}}

| label5= Outputs
| data5= {{#arraymap: {{{Outputs|}}}|,|$|$|&lt;br/&gt;}}

}}</text>
            <sha1>ak843pdab4hgztzjmx4gqnb1c677mb9</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Category:Lua-based templates</title>
        <ns>14</ns>
        <id>708</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7225</id>
            <parentid>7196</parentid>
            <timestamp>2015-03-17T15:34:29Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="272">{{WikiProject Lua/header}}
{{template category}}
The '''Category:Lua-based templates''' is an index of [[wiki:wp:template|wp:template]]s which &lt;code&gt;#invoke&lt;/code&gt; modules written in [[wiki:Lua script|Lua Script]], using the [[mw:Extension:Scribunto|Scribunto]] interface.</text>
            <sha1>kdt5espfps9uew0huvvconlsx0tqf93</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Category:Pages with script errors</title>
        <ns>14</ns>
        <id>710</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7198</id>
            <parentid>7197</parentid>
            <timestamp>2015-03-17T15:26:43Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="656">{{polluted category}}
{{hidden category}}
{{empty category}}
These are pages with errors in the [[Wikipedia:Lua in Wikipedia|Lua]] script being used to display them.

;API calls that return xml formatted lists
:{{plainlink|1=//en.wikipedia.org/w/api.php?action=query&amp;list=categorymembers&amp;cmtitle=Category%3APages%20with%20script%20errors&amp;cmprop=title&amp;cmlimit=500&amp;cmnamespace=0&amp;format=xml Article namespace}}
:{{plainlink|1=//en.wikipedia.org/w/api.php?action=query&amp;list=categorymembers&amp;cmtitle=Category%3APages%20with%20script%20errors&amp;cmprop=title%7Ctimestamp&amp;cmlimit=500&amp;cmsort=timestamp&amp;cmdir=desc&amp;format=xml By date}}
[[Category:Wikipedia maintenance]]</text>
            <sha1>i4fjw7ljikzccs9uqghdtv37f38ih2z</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Category:Template documentation</title>
        <ns>14</ns>
        <id>711</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7241</id>
            <parentid>7226</parentid>
            <timestamp>2015-03-17T16:08:22Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="249">This category groups documentation for Templates that have a corresponding page at &lt;code&gt;Template:(Name)/doc&lt;/code&gt; and are linked with the tags &lt;code&gt;&lt;nowiki&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;/nowiki&gt;&lt;/code&gt;

[[Category:Documentation pages]]</text>
            <sha1>tid9c0flkp4p54bkzvszwpkpnyihcdj</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Category:Infobox templates</title>
        <ns>14</ns>
        <id>724</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7229</id>
            <parentid>7194</parentid>
            <timestamp>2015-03-17T15:51:04Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="796">'''Infobox templates''' are [[Wikipedia:WikiProject Templates#Infobox templates|templates]] that provide standardized information across related articles. Infoboxes may be "freeform" or partially automated based on parameters. Subcategories are based on the sections used at [[wiki:Portal:Contents/Categorical index|Portal:Contents/Categorical index]] and [[wiki:Portal:Contents/Overviews|Portal:Contents/Overviews]].

The use of infoboxes is neither required nor prohibited for any article.  Whether to include an infobox, which infobox to include, and which parts of the infobox to use, is determined through [[Wikipedia:Consensus|discussion and consensus among the editors]] at each individual article.  

See also any related [[Wikipedia:WikiProject|WikiProject]], to find relevant infoboxes.</text>
            <sha1>jlkbxsi14034gfvltprfj3ymsox7lte</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Category:Form documentation</title>
        <ns>14</ns>
        <id>726</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7242</id>
            <parentid>7228</parentid>
            <timestamp>2015-03-17T16:08:50Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="241">This category groups documentation for Forms that have a corresponding page at &lt;code&gt;Form:(Name)/doc&lt;/code&gt; and are linked with the tags &lt;code&gt;&lt;nowiki&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;/nowiki&gt;&lt;/code&gt;

[[Category:Documentation pages]]</text>
            <sha1>ro8ocs7409s2yvrzf0grge8p5r70zwj</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Generic template demo</title>
        <ns>10</ns>
        <id>727</id>
        <redirect xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" title="Template:Parameter names example"/>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>6894</id>
            <parentid>6893</parentid>
            <timestamp>2015-03-16T18:51:59Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="166">#redirect [[Template:Parameter names example]]

[[Category:Wikipedia utility templates]]
[[Category:Template namespace templates]]
[[Category:Template documentation]]</text>
            <sha1>ogbr4wqk2lnafw0hlw1wy7gr9imxk3k</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Category:Documentation subpages without corresponding pages</title>
        <ns>14</ns>
        <id>728</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7239</id>
            <parentid>7238</parentid>
            <timestamp>2015-03-17T16:06:20Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="371">{{Maintenance category}}
{{hidden category}}
{{backlog}}

This category contains pages using {{tl|documentation subpage}} that are subpages of a page that does not actually exist.&lt;br /&gt;
'''NOTE:''' Not all of these actually need deleting as some are in use. Check the "What links here" before deleting.

[[Category:Wikipedia maintenance]]
[[Category:Documentation pages]]</text>
            <sha1>tfbedcqilqf6n3f93mamud22956wa8e</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Category:Documentation pages</title>
        <ns>14</ns>
        <id>729</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7240</id>
            <timestamp>2015-03-17T16:07:26Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="84">All of the documentation pages throughout the site (Forms, Templates, Modules, etc.)</text>
            <sha1>lxkfl1nzq2k3z2fhc43fzo3wvebkco4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Parameter names example</title>
        <ns>10</ns>
        <id>730</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7244</id>
            <parentid>7243</parentid>
            <timestamp>2015-03-17T16:10:05Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="256">&lt;includeonly&gt;{{#invoke:Parameter names example|main}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{hatnote|[[Template:Generic template demo]] and [[Template:Pnex]] redirect here.}}&lt;!--(hatnote more noticeable here than within Documentation)--&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
            <sha1>cjle1o3weadzp7u1v4l5clox5ri8mpi</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Form:Sensor Suite</title>
        <ns>106</ns>
        <id>731</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10556</id>
            <parentid>10218</parentid>
            <timestamp>2016-04-14T04:02:21Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1067">&lt;noinclude&gt;
{{#forminput:form=Sensor Suite}}
&lt;/noinclude&gt;&lt;includeonly&gt;__NOEDITSECTION____NOTOC__

{{{info|page name=&lt;Sensor Suite[Environment]&gt;}}}
{{{for template|Sensor Suite}}}
{| class="stackedform"
|- class="requiredField"
! Organization
| {{{field|Organization|input type=text|maxlength=255|mandatory|placeholder=MITRE}}}
|-
! Environment
| {{{field|Environment|input type=text|maxlength=255|placeholder=Fort Meade Experiment (FMX)}}}
|-
! Sensors
| {{{field|Sensors|input type=checkboxes|values from category=Sensors}}}
|}

== Direct Coverage ==
{| class="stackedform"
! Analytic Coverage
| {{{field|Analytics|input type=tokens|values from category=Analytics|mapping property=Has Full Analytic Name|list}}}
|-
! Technique Coverage
| {{field|Techniques|input type=tokens|values from property=Has ATTACK Technique ID|mapping property=Has ATTACK Technique Name}}}
|}

{{{field|Fields|holds template}}} 
{{{end template}}}


{{{for template|Extract Fields|embed in field=Sensor Suite[Fields]}}}

== Data Model Coverage ==
{{Data Model Coverage Form}}
&lt;/includeonly&gt;</text>
            <sha1>ab9pi55l3siwr97gkyodtwaf1n4z8yu</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Suite Coverage</title>
        <ns>10</ns>
        <id>732</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10296</id>
            <parentid>7271</parentid>
            <timestamp>2016-03-29T15:58:12Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="652">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;{{#arraydefine: Empty|, ,|,}}{{#arraydefine: Sensors|{{{Sensors|}}}|,}} {{#arraydiff: Sensors|Sensors|Empty}}
{{Sensor Coverage
|Fields={{{Fields|}}}{{#ask: [[Category:Sensors]][[null||{{#arrayprint: Sensors|{{!!}}}}]]|?Has Field Coverage=|mainlabel=-|limit=10000}}
|Analytics={{{Analytics|}}}{{#ask: [[Category:Sensors]][[null||{{#arrayprint: Sensors|{{!!}}}}]]|?Has Analytic Coverage=|mainlabel=-|limit=10000|link=none}}
|Techniques={{{Techniques|}}}{{#ask: [[Category:Sensors]][[null||{{#arrayprint: Sensors|{{!!}}}}]]|?Has Technique Coverage=|mainlabel=-|limit=10000|link=none}}
}}&lt;/includeonly&gt;</text>
            <sha1>6z6jiz947ipx63tnkwktqe6zsvnacmb</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Sensor Suite</title>
        <ns>10</ns>
        <id>733</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10312</id>
            <parentid>10299</parentid>
            <timestamp>2016-04-01T20:20:50Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="467">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;{{#set:
|Has Organization={{{Organization|}}}
|Has Environment={{{Environment|}}}
|Has Sensor={{#arraymap: {{{Sensors|}}}|,|$|$|,}}|+sep=,
}}{{Suite Infobox
|Organization={{{Organization|}}}
|Environment={{{Environment|}}}
|Sensors={{{Sensors|}}}
}}
{{Suite Coverage
|Sensors={{{Sensors|}}}
|Fields={{{Fields|}}}
|Analytics={{{Analytics|}}}
|Techniques={{{Techniques|}}}
}}
[[Category:Sensor Suites]]&lt;/includeonly&gt;</text>
            <sha1>4fja9xkzepimycryojv22n5zn8gfk78</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Category:Sensor Suites</title>
        <ns>14</ns>
        <id>735</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10620</id>
            <parentid>7311</parentid>
            <timestamp>2016-04-19T14:42:49Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="59">This category uses the form {{#default_form:Sensor Suite}}.</text>
            <sha1>amctsvpur4hj4dl4icnc9iwxuoz9sq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Suite Infobox</title>
        <ns>10</ns>
        <id>736</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7295</id>
            <parentid>7277</parentid>
            <timestamp>2015-03-17T19:31:46Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="291">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;{{infobox
| above= {{PAGENAME}}
| label1= Organization    | data1= {{{Organization|}}}
| label2= Environment     | data2= {{{Environment|}}}
| label3= Sensors         | data3= {{#arraymap: {{{Sensors|}}}|,|$|[[$]]|&lt;br/&gt;}}
}}&lt;/includeonly&gt;</text>
            <sha1>pp0epi7htx4myd2vg6rnipdtpdfez4p</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Sensor</title>
        <ns>102</ns>
        <id>737</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7289</id>
            <timestamp>2015-03-17T19:24:45Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="46">This is a property of type [[Has type::Page]].</text>
            <sha1>jk9aupditbfg4coza27xh6berm5n0sp</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Manufacturer</title>
        <ns>102</ns>
        <id>738</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7290</id>
            <timestamp>2015-03-17T19:25:38Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Version</title>
        <ns>102</ns>
        <id>739</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7291</id>
            <timestamp>2015-03-17T19:25:42Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Name</title>
        <ns>102</ns>
        <id>740</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7293</id>
            <timestamp>2015-03-17T19:28:07Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Environment</title>
        <ns>102</ns>
        <id>741</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7303</id>
            <timestamp>2015-03-17T20:11:09Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Organization</title>
        <ns>102</ns>
        <id>742</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7304</id>
            <timestamp>2015-03-17T20:11:50Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Required Object</title>
        <ns>102</ns>
        <id>743</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7313</id>
            <timestamp>2015-03-17T20:33:03Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Required Object Action</title>
        <ns>102</ns>
        <id>744</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7317</id>
            <parentid>7314</parentid>
            <timestamp>2015-03-17T20:35:53Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Splunk Link</title>
        <ns>10</ns>
        <id>746</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>8829</id>
            <parentid>8168</parentid>
            <timestamp>2015-09-24T14:50:16Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="201">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;[https://fmx.mitre.org:8000/en-US/app/FMX/report?s=%2FservicesNS%2Fnobody%2FFMX%2Fsaved%2Fsearches%2F{{urlencode:{{{1|}}}|}} {{{1|}}}]&lt;/includeonly&gt;</text>
            <sha1>pntwnn4cm9j74mtkqjt2l59fgmf4t08</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Query Link</title>
        <ns>102</ns>
        <id>747</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7447</id>
            <timestamp>2015-03-17T21:54:46Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:FeedbackEmail/doc</title>
        <ns>10</ns>
        <id>748</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>8409</id>
            <parentid>7451</parentid>
            <timestamp>2015-07-22T20:20:48Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="153">This is the "FeedbackEmail" template.
It should be called in the following format:
&lt;pre&gt;
{{FeedbackEmail}}
&lt;/pre&gt;
Edit the page to see the template text.</text>
            <sha1>gbs7g4f0yxdm2f7mv953i6uv078gry1</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>File:Template-info.png</title>
        <ns>6</ns>
        <id>749</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7452</id>
            <timestamp>2015-04-06T14:54:48Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="0"/>
            <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
        </revision>
        <upload xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <timestamp>2015-04-06T14:54:48Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Rwolf</username>
                <id>35</id>
            </contributor>
            <comment></comment>
            <filename>Template-info.png</filename>
            <src>https://car-internal.mitre.org/w/images/e/e2/Template-info.png</src>
            <size>44161</size>
        </upload>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Upload Files</title>
        <ns>102</ns>
        <id>777</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7586</id>
            <timestamp>2015-04-09T16:21:44Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Autoruns</title>
        <ns>0</ns>
        <id>780</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10911</id>
            <parentid>10904</parentid>
            <timestamp>2016-06-29T22:33:49Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="30695">{{Sensor
|Name=Autoruns
|Manufacturer=Microsoft Corporation
|Release Date=March 11, 2015
|Version=13.2
|Website=https://technet.microsoft.com/en-us/sysinternals/bb963902.aspx
|Description=This utility shows the user what programs are configured to run during system bootup or login, and/or on execution of various built-in Windows applications like Internet Explorer, Explorer and media players. These programs and drivers include ones in your startup folder, Run, RunOnce, and other Registry keys. Autoruns reports Explorer shell extensions, toolbars, browser helper objects, Winlogon notifications, auto-start services, etc.
|Analytics=CAR-2013-01-002,
|Fields={{Extract Fields
|Object#driver=No
|Requirement#driver/load/base_address=No
|Requirement#driver/load/fqdn=No
|Requirement#driver/load/hostname=No
|Requirement#driver/load/image_path=No
|Requirement#driver/load/md5_hash=No
|Requirement#driver/load/module_name=No
|Requirement#driver/load/sha1_hash=No
|Requirement#driver/load/sha256_hash=No
|Requirement#driver/load/signer=No
|Requirement#driver/unload/base_address=No
|Requirement#driver/unload/fqdn=No
|Requirement#driver/unload/hostname=No
|Requirement#driver/unload/image_path=No
|Requirement#driver/unload/md5_hash=No
|Requirement#driver/unload/module_name=No
|Requirement#driver/unload/sha1_hash=No
|Requirement#driver/unload/sha256_hash=No
|Requirement#driver/unload/signer=No
|Object#file=Yes
|Alias#file/company=company
|Alias#file/creation_time=time
|Alias#file/file_name=image_path
|Alias#file/md5_hash=md5_hash
|Alias#file/sha1_hash=sha1_hash
|Alias#file/sha256_hash=sha256_hash
|Alias#file/signer=signer
|Requirement#file/create/company=Yes
|Requirement#file/create/creation_time=Yes
|Requirement#file/create/file_name=Yes
|Requirement#file/create/file_path=No
|Requirement#file/create/fqdn=Yes
|Requirement#file/create/hostname=Yes
|Requirement#file/create/image_path=No
|Requirement#file/create/md5_hash=Yes
|Requirement#file/create/pid=No
|Requirement#file/create/ppid=No
|Requirement#file/create/previous_creation_time=No
|Requirement#file/create/sha1_hash=No
|Requirement#file/create/sha256_hash=No
|Requirement#file/create/signer=No
|Requirement#file/create/user=No
|Requirement#file/delete/company=No
|Requirement#file/delete/creation_time=No
|Requirement#file/delete/file_name=No
|Requirement#file/delete/file_path=No
|Requirement#file/delete/fqdn=No
|Requirement#file/delete/hostname=No
|Requirement#file/delete/image_path=No
|Requirement#file/delete/md5_hash=No
|Requirement#file/delete/pid=No
|Requirement#file/delete/ppid=No
|Requirement#file/delete/previous_creation_time=No
|Requirement#file/delete/sha1_hash=No
|Requirement#file/delete/sha256_hash=No
|Requirement#file/delete/signer=No
|Requirement#file/delete/user=No
|Requirement#file/modify/company=Yes
|Requirement#file/modify/creation_time=Yes
|Requirement#file/modify/file_name=Yes
|Requirement#file/modify/file_path=No
|Requirement#file/modify/fqdn=Yes
|Requirement#file/modify/hostname=Yes
|Requirement#file/modify/image_path=No
|Requirement#file/modify/md5_hash=Yes
|Requirement#file/modify/pid=No
|Requirement#file/modify/ppid=No
|Requirement#file/modify/previous_creation_time=No
|Requirement#file/modify/sha1_hash=Yes
|Requirement#file/modify/sha256_hash=Yes
|Requirement#file/modify/signer=Yes
|Requirement#file/modify/user=No
|Requirement#file/read/company=No
|Requirement#file/read/creation_time=No
|Requirement#file/read/file_name=No
|Requirement#file/read/file_path=No
|Requirement#file/read/fqdn=No
|Requirement#file/read/hostname=No
|Requirement#file/read/image_path=No
|Requirement#file/read/md5_hash=No
|Requirement#file/read/pid=No
|Requirement#file/read/ppid=No
|Requirement#file/read/previous_creation_time=No
|Requirement#file/read/sha1_hash=No
|Requirement#file/read/sha256_hash=No
|Requirement#file/read/signer=No
|Requirement#file/read/user=No
|Requirement#file/timestomp/company=No
|Requirement#file/timestomp/creation_time=No
|Requirement#file/timestomp/file_name=No
|Requirement#file/timestomp/file_path=No
|Requirement#file/timestomp/fqdn=No
|Requirement#file/timestomp/hostname=No
|Requirement#file/timestomp/image_path=No
|Requirement#file/timestomp/md5_hash=No
|Requirement#file/timestomp/pid=No
|Requirement#file/timestomp/ppid=No
|Requirement#file/timestomp/previous_creation_time=No
|Requirement#file/timestomp/sha1_hash=No
|Requirement#file/timestomp/sha256_hash=No
|Requirement#file/timestomp/signer=No
|Requirement#file/timestomp/user=No
|Requirement#file/write/company=No
|Requirement#file/write/creation_time=No
|Requirement#file/write/file_name=No
|Requirement#file/write/file_path=No
|Requirement#file/write/fqdn=No
|Requirement#file/write/hostname=No
|Requirement#file/write/image_path=No
|Requirement#file/write/md5_hash=No
|Requirement#file/write/pid=No
|Requirement#file/write/ppid=No
|Requirement#file/write/previous_creation_time=No
|Requirement#file/write/sha1_hash=No
|Requirement#file/write/sha256_hash=No
|Requirement#file/write/signer=No
|Requirement#file/write/user=No
|Object#flow=No
|Requirement#flow/end/content=No
|Requirement#flow/end/dest_fqdn=No
|Requirement#flow/end/dest_hostname=No
|Requirement#flow/end/dest_ip=No
|Requirement#flow/end/dest_port=No
|Requirement#flow/end/end_time=No
|Requirement#flow/end/exe=No
|Requirement#flow/end/flags=No
|Requirement#flow/end/fqdn=No
|Requirement#flow/end/hostname=No
|Requirement#flow/end/image_path=No
|Requirement#flow/end/mac=No
|Requirement#flow/end/packet_count=No
|Requirement#flow/end/pid=No
|Requirement#flow/end/ppid=No
|Requirement#flow/end/proto_info=No
|Requirement#flow/end/protocol=No
|Requirement#flow/end/src_fqdn=No
|Requirement#flow/end/src_hostname=No
|Requirement#flow/end/src_ip=No
|Requirement#flow/end/src_port=No
|Requirement#flow/end/start_time=No
|Requirement#flow/end/user=No
|Requirement#flow/message/content=No
|Requirement#flow/message/dest_fqdn=No
|Requirement#flow/message/dest_hostname=No
|Requirement#flow/message/dest_ip=No
|Requirement#flow/message/dest_port=No
|Requirement#flow/message/end_time=No
|Requirement#flow/message/exe=No
|Requirement#flow/message/flags=No
|Requirement#flow/message/fqdn=No
|Requirement#flow/message/hostname=No
|Requirement#flow/message/image_path=No
|Requirement#flow/message/mac=No
|Requirement#flow/message/packet_count=No
|Requirement#flow/message/pid=No
|Requirement#flow/message/ppid=No
|Requirement#flow/message/proto_info=No
|Requirement#flow/message/protocol=No
|Requirement#flow/message/src_fqdn=No
|Requirement#flow/message/src_hostname=No
|Requirement#flow/message/src_ip=No
|Requirement#flow/message/src_port=No
|Requirement#flow/message/start_time=No
|Requirement#flow/message/user=No
|Requirement#flow/start/content=No
|Requirement#flow/start/dest_fqdn=No
|Requirement#flow/start/dest_hostname=No
|Requirement#flow/start/dest_ip=No
|Requirement#flow/start/dest_port=No
|Requirement#flow/start/end_time=No
|Requirement#flow/start/exe=No
|Requirement#flow/start/flags=No
|Requirement#flow/start/fqdn=No
|Requirement#flow/start/hostname=No
|Requirement#flow/start/image_path=No
|Requirement#flow/start/mac=No
|Requirement#flow/start/packet_count=No
|Requirement#flow/start/pid=No
|Requirement#flow/start/ppid=No
|Requirement#flow/start/proto_info=No
|Requirement#flow/start/protocol=No
|Requirement#flow/start/src_fqdn=No
|Requirement#flow/start/src_hostname=No
|Requirement#flow/start/src_ip=No
|Requirement#flow/start/src_port=No
|Requirement#flow/start/start_time=No
|Requirement#flow/start/user=No
|Object#keyboard=No
|Requirement#keyboard/kernel_keypress/hostname=No
|Requirement#keyboard/user_keypress/hostname=No
|Object#module=No
|Requirement#module/load/base_address=No
|Requirement#module/load/fqdn=No
|Requirement#module/load/hostname=No
|Requirement#module/load/image_path=No
|Requirement#module/load/md5_hash=No
|Requirement#module/load/module_name=No
|Requirement#module/load/module_path=No
|Requirement#module/load/pid=No
|Requirement#module/load/sha1_hash=No
|Requirement#module/load/sha256_hash=No
|Requirement#module/load/signer=No
|Requirement#module/load/tid=No
|Requirement#module/unload/base_address=No
|Requirement#module/unload/fqdn=No
|Requirement#module/unload/hostname=No
|Requirement#module/unload/image_path=No
|Requirement#module/unload/md5_hash=No
|Requirement#module/unload/module_name=No
|Requirement#module/unload/module_path=No
|Requirement#module/unload/pid=No
|Requirement#module/unload/sha1_hash=No
|Requirement#module/unload/sha256_hash=No
|Requirement#module/unload/signer=No
|Requirement#module/unload/tid=No
|Object#process=No
|Requirement#process/create/command_line=No
|Requirement#process/create/exe=No
|Requirement#process/create/fqdn=No
|Requirement#process/create/hostname=No
|Requirement#process/create/image_path=No
|Requirement#process/create/md5_hash=No
|Requirement#process/create/parent_exe=No
|Requirement#process/create/parent_image_path=No
|Requirement#process/create/pid=No
|Requirement#process/create/ppid=No
|Requirement#process/create/sha1_hash=No
|Requirement#process/create/sha256_hash=No
|Requirement#process/create/sid=No
|Requirement#process/create/signer=No
|Requirement#process/create/user=No
|Requirement#process/terminate/command_line=No
|Requirement#process/terminate/exe=No
|Requirement#process/terminate/fqdn=No
|Requirement#process/terminate/hostname=No
|Requirement#process/terminate/image_path=No
|Requirement#process/terminate/md5_hash=No
|Requirement#process/terminate/parent_exe=No
|Requirement#process/terminate/parent_image_path=No
|Requirement#process/terminate/pid=No
|Requirement#process/terminate/ppid=No
|Requirement#process/terminate/sha1_hash=No
|Requirement#process/terminate/sha256_hash=No
|Requirement#process/terminate/sid=No
|Requirement#process/terminate/signer=No
|Requirement#process/terminate/user=No
|Object#registry=Yes
|Alias#registry/data=XML data
|Alias#registry/key=location/itemname
|Alias#registry/value=XML key
|Requirement#registry/add/data=Yes
|Requirement#registry/add/hive=Yes
|Requirement#registry/add/hostname=Yes
|Requirement#registry/add/key=Yes
|Requirement#registry/add/type=Yes
|Requirement#registry/add/value=Yes
|Requirement#registry/edit/data=Yes
|Requirement#registry/edit/hive=Yes
|Requirement#registry/edit/hostname=Yes
|Requirement#registry/edit/key=Yes
|Requirement#registry/edit/type=Yes
|Requirement#registry/edit/value=Yes
|Requirement#registry/remove/data=No
|Requirement#registry/remove/hive=No
|Requirement#registry/remove/hostname=No
|Requirement#registry/remove/key=No
|Requirement#registry/remove/type=No
|Requirement#registry/remove/value=No
|Object#service=Yes
|Alias#service/command_line=launch_string
|Alias#service/exe=image_path
|Alias#service/image_path=image_path
|Alias#service/name=item_name
|Requirement#service/create/command_line=Yes
|Requirement#service/create/exe=Yes
|Requirement#service/create/fqdn=Yes
|Requirement#service/create/hostname=Yes
|Requirement#service/create/image_path=Yes
|Requirement#service/create/name=Yes
|Requirement#service/create/pid=No
|Requirement#service/create/ppid=No
|Requirement#service/create/user=No
|Requirement#service/delete/command_line=Yes
|Requirement#service/delete/exe=Yes
|Requirement#service/delete/fqdn=Yes
|Requirement#service/delete/hostname=Yes
|Requirement#service/delete/image_path=Yes
|Requirement#service/delete/name=Yes
|Requirement#service/delete/pid=No
|Requirement#service/delete/ppid=No
|Requirement#service/delete/user=No
|Requirement#service/pause/command_line=No
|Requirement#service/pause/exe=No
|Requirement#service/pause/fqdn=No
|Requirement#service/pause/hostname=No
|Requirement#service/pause/image_path=No
|Requirement#service/pause/name=No
|Requirement#service/pause/pid=No
|Requirement#service/pause/ppid=No
|Requirement#service/pause/user=No
|Requirement#service/start/command_line=No
|Requirement#service/start/exe=No
|Requirement#service/start/fqdn=No
|Requirement#service/start/hostname=No
|Requirement#service/start/image_path=No
|Requirement#service/start/name=No
|Requirement#service/start/pid=No
|Requirement#service/start/ppid=No
|Requirement#service/start/user=No
|Requirement#service/stop/command_line=No
|Requirement#service/stop/exe=No
|Requirement#service/stop/fqdn=No
|Requirement#service/stop/hostname=No
|Requirement#service/stop/image_path=No
|Requirement#service/stop/name=No
|Requirement#service/stop/pid=No
|Requirement#service/stop/ppid=No
|Requirement#service/stop/user=No
|Object#thread=No
|Requirement#thread/create/hostname=No
|Requirement#thread/create/pid=No
|Requirement#thread/create/src_pid=No
|Requirement#thread/create/src_tid=No
|Requirement#thread/create/stack_base=No
|Requirement#thread/create/stack_limit=No
|Requirement#thread/create/start_address=No
|Requirement#thread/create/start_function=No
|Requirement#thread/create/start_module=No
|Requirement#thread/create/start_module_name=No
|Requirement#thread/create/subprocess_tag=No
|Requirement#thread/create/tgt_pid=No
|Requirement#thread/create/tgt_tid=No
|Requirement#thread/create/tid=No
|Requirement#thread/create/user=No
|Requirement#thread/create/user_stack_base=No
|Requirement#thread/create/user_stack_limit=No
|Requirement#thread/remote_create/hostname=No
|Requirement#thread/remote_create/pid=No
|Requirement#thread/remote_create/src_pid=No
|Requirement#thread/remote_create/src_tid=No
|Requirement#thread/remote_create/stack_base=No
|Requirement#thread/remote_create/stack_limit=No
|Requirement#thread/remote_create/start_address=No
|Requirement#thread/remote_create/start_function=No
|Requirement#thread/remote_create/start_module=No
|Requirement#thread/remote_create/start_module_name=No
|Requirement#thread/remote_create/subprocess_tag=No
|Requirement#thread/remote_create/tgt_pid=No
|Requirement#thread/remote_create/tgt_tid=No
|Requirement#thread/remote_create/tid=No
|Requirement#thread/remote_create/user=No
|Requirement#thread/remote_create/user_stack_base=No
|Requirement#thread/remote_create/user_stack_limit=No
|Requirement#thread/suspend/hostname=No
|Requirement#thread/suspend/pid=No
|Requirement#thread/suspend/src_pid=No
|Requirement#thread/suspend/src_tid=No
|Requirement#thread/suspend/stack_base=No
|Requirement#thread/suspend/stack_limit=No
|Requirement#thread/suspend/start_address=No
|Requirement#thread/suspend/start_function=No
|Requirement#thread/suspend/start_module=No
|Requirement#thread/suspend/start_module_name=No
|Requirement#thread/suspend/subprocess_tag=No
|Requirement#thread/suspend/tgt_pid=No
|Requirement#thread/suspend/tgt_tid=No
|Requirement#thread/suspend/tid=No
|Requirement#thread/suspend/user=No
|Requirement#thread/suspend/user_stack_base=No
|Requirement#thread/suspend/user_stack_limit=No
|Requirement#thread/terminate/hostname=No
|Requirement#thread/terminate/pid=No
|Requirement#thread/terminate/src_pid=No
|Requirement#thread/terminate/src_tid=No
|Requirement#thread/terminate/stack_base=No
|Requirement#thread/terminate/stack_limit=No
|Requirement#thread/terminate/start_address=No
|Requirement#thread/terminate/start_function=No
|Requirement#thread/terminate/start_module=No
|Requirement#thread/terminate/start_module_name=No
|Requirement#thread/terminate/subprocess_tag=No
|Requirement#thread/terminate/tgt_pid=No
|Requirement#thread/terminate/tgt_tid=No
|Requirement#thread/terminate/tid=No
|Requirement#thread/terminate/user=No
|Requirement#thread/terminate/user_stack_base=No
|Requirement#thread/terminate/user_stack_limit=No
|Object#user_session=No
|Requirement#user_session/interactive/dest_ip=No
|Requirement#user_session/interactive/dest_port=No
|Requirement#user_session/interactive/hostname=No
|Requirement#user_session/interactive/logon_id=No
|Requirement#user_session/interactive/logon_type=No
|Requirement#user_session/interactive/privileges=No
|Requirement#user_session/interactive/src_ip=No
|Requirement#user_session/interactive/src_port=No
|Requirement#user_session/interactive/user=No
|Requirement#user_session/local/dest_ip=No
|Requirement#user_session/local/dest_port=No
|Requirement#user_session/local/hostname=No
|Requirement#user_session/local/logon_id=No
|Requirement#user_session/local/logon_type=No
|Requirement#user_session/local/privileges=No
|Requirement#user_session/local/src_ip=No
|Requirement#user_session/local/src_port=No
|Requirement#user_session/local/user=No
|Requirement#user_session/lock/dest_ip=No
|Requirement#user_session/lock/dest_port=No
|Requirement#user_session/lock/hostname=No
|Requirement#user_session/lock/logon_id=No
|Requirement#user_session/lock/logon_type=No
|Requirement#user_session/lock/privileges=No
|Requirement#user_session/lock/src_ip=No
|Requirement#user_session/lock/src_port=No
|Requirement#user_session/lock/user=No
|Requirement#user_session/login/dest_ip=No
|Requirement#user_session/login/dest_port=No
|Requirement#user_session/login/hostname=No
|Requirement#user_session/login/logon_id=No
|Requirement#user_session/login/logon_type=No
|Requirement#user_session/login/privileges=No
|Requirement#user_session/login/src_ip=No
|Requirement#user_session/login/src_port=No
|Requirement#user_session/login/user=No
|Requirement#user_session/logout/dest_ip=No
|Requirement#user_session/logout/dest_port=No
|Requirement#user_session/logout/hostname=No
|Requirement#user_session/logout/logon_id=No
|Requirement#user_session/logout/logon_type=No
|Requirement#user_session/logout/privileges=No
|Requirement#user_session/logout/src_ip=No
|Requirement#user_session/logout/src_port=No
|Requirement#user_session/logout/user=No
|Requirement#user_session/privilege/dest_ip=No
|Requirement#user_session/privilege/dest_port=No
|Requirement#user_session/privilege/hostname=No
|Requirement#user_session/privilege/logon_id=No
|Requirement#user_session/privilege/logon_type=No
|Requirement#user_session/privilege/privileges=No
|Requirement#user_session/privilege/src_ip=No
|Requirement#user_session/privilege/src_port=No
|Requirement#user_session/privilege/user=No
|Requirement#user_session/rdp/dest_ip=No
|Requirement#user_session/rdp/dest_port=No
|Requirement#user_session/rdp/hostname=No
|Requirement#user_session/rdp/logon_id=No
|Requirement#user_session/rdp/logon_type=No
|Requirement#user_session/rdp/privileges=No
|Requirement#user_session/rdp/src_ip=No
|Requirement#user_session/rdp/src_port=No
|Requirement#user_session/rdp/user=No
|Requirement#user_session/reconnect/dest_ip=No
|Requirement#user_session/reconnect/dest_port=No
|Requirement#user_session/reconnect/hostname=No
|Requirement#user_session/reconnect/logon_id=No
|Requirement#user_session/reconnect/logon_type=No
|Requirement#user_session/reconnect/privileges=No
|Requirement#user_session/reconnect/src_ip=No
|Requirement#user_session/reconnect/src_port=No
|Requirement#user_session/reconnect/user=No
|Requirement#user_session/remote/dest_ip=No
|Requirement#user_session/remote/dest_port=No
|Requirement#user_session/remote/hostname=No
|Requirement#user_session/remote/logon_id=No
|Requirement#user_session/remote/logon_type=No
|Requirement#user_session/remote/privileges=No
|Requirement#user_session/remote/src_ip=No
|Requirement#user_session/remote/src_port=No
|Requirement#user_session/remote/user=No
|Requirement#user_session/unlock/dest_ip=No
|Requirement#user_session/unlock/dest_port=No
|Requirement#user_session/unlock/hostname=No
|Requirement#user_session/unlock/logon_id=No
|Requirement#user_session/unlock/logon_type=No
|Requirement#user_session/unlock/privileges=No
|Requirement#user_session/unlock/src_ip=No
|Requirement#user_session/unlock/src_port=No
|Requirement#user_session/unlock/user=No
|Object#dns=No
|Alias#file/description=description
|Alias#file/location=location
|Requirement#file/timestomp/description=No
|Requirement#file/timestomp/imp_hash=No
|Requirement#file/timestomp/location=No
|Requirement#file/create/description=No
|Requirement#file/create/imp_hash=No
|Requirement#file/create/location=No
|Requirement#file/delete/description=No
|Requirement#file/delete/imp_hash=No
|Requirement#file/delete/location=No
|Requirement#file/modify/description=No
|Requirement#file/modify/imp_hash=No
|Requirement#file/modify/location=No
|Requirement#file/read/description=No
|Requirement#file/read/imp_hash=No
|Requirement#file/read/location=No
|Requirement#file/write/description=No
|Requirement#file/write/imp_hash=No
|Requirement#file/write/location=No
|Alias#service/company=company
|Alias#service/description=description
|Alias#service/imp_hash=imp_hash
|Alias#service/location=location
|Alias#service/md5_hash=md5_hash
|Alias#service/pescha1_hash=pescha1_hash
|Alias#service/pescha256_ash=pescha256_hash
|Alias#service/sha1_hash=sha1_hash
|Alias#service/sha256_hash=sha256_hash
|Alias#service/signer=signer
|Requirement#service/create/company=No
|Requirement#service/create/description=No
|Requirement#service/create/imp_hash=No
|Requirement#service/create/location=No
|Requirement#service/create/md5_hash=No
|Requirement#service/create/pescha1_hash=No
|Requirement#service/create/pescha256_ash=No
|Requirement#service/create/sha1_hash=No
|Requirement#service/create/sha256_hash=No
|Requirement#service/create/signer=No
|Requirement#service/delete/company=No
|Requirement#service/delete/description=No
|Requirement#service/delete/imp_hash=No
|Requirement#service/delete/location=No
|Requirement#service/delete/md5_hash=No
|Requirement#service/delete/pescha1_hash=No
|Requirement#service/delete/pescha256_ash=No
|Requirement#service/delete/sha1_hash=No
|Requirement#service/delete/sha256_hash=No
|Requirement#service/delete/signer=No
|Requirement#service/pause/company=No
|Requirement#service/pause/description=No
|Requirement#service/pause/imp_hash=No
|Requirement#service/pause/location=No
|Requirement#service/pause/md5_hash=No
|Requirement#service/pause/pescha1_hash=No
|Requirement#service/pause/pescha256_ash=No
|Requirement#service/pause/sha1_hash=No
|Requirement#service/pause/sha256_hash=No
|Requirement#service/pause/signer=No
|Requirement#service/start/company=No
|Requirement#service/start/description=No
|Requirement#service/start/imp_hash=No
|Requirement#service/start/location=No
|Requirement#service/start/md5_hash=No
|Requirement#service/start/pescha1_hash=No
|Requirement#service/start/pescha256_ash=No
|Requirement#service/start/sha1_hash=No
|Requirement#service/start/sha256_hash=No
|Requirement#service/start/signer=No
|Requirement#service/stop/company=No
|Requirement#service/stop/description=No
|Requirement#service/stop/imp_hash=No
|Requirement#service/stop/location=No
|Requirement#service/stop/md5_hash=No
|Requirement#service/stop/pescha1_hash=No
|Requirement#service/stop/pescha256_ash=No
|Requirement#service/stop/sha1_hash=No
|Requirement#service/stop/sha256_hash=No
|Requirement#service/stop/signer=No
|Alias#file/launch_string=launch_string
|Requirement#file/timestomp/launch_string=No
|Requirement#file/create/launch_string=No
|Requirement#file/delete/launch_string=No
|Requirement#file/modify/launch_string=No
|Requirement#file/read/launch_string=No
|Requirement#file/write/launch_string=No
|Alias#registry/MD5_hash=md5_hash
|Alias#registry/company=compnay
|Alias#registry/description=description
|Alias#registry/imagepath=image_path
|Alias#registry/imp_hash=imp_hash
|Alias#registry/launchstring=launch_string
|Alias#registry/location=location
|Alias#registry/pesha1_hash=pesha1_hash
|Alias#registry/pesha256_hash=pesha256_hash
|Alias#registry/sha1_hash=sha1_hash
|Alias#registry/sha256_hash=sha256_hash
|Alias#registry/signer=signer
|Requirement#registry/add/MD5_hash=No
|Requirement#registry/add/company=No
|Requirement#registry/add/description=No
|Requirement#registry/add/imagepath=No
|Requirement#registry/add/imp_hash=No
|Requirement#registry/add/launchstring=No
|Requirement#registry/add/location=No
|Requirement#registry/add/pesha1_hash=No
|Requirement#registry/add/pesha256_hash=No
|Requirement#registry/add/sha1_hash=No
|Requirement#registry/add/sha256_hash=No
|Requirement#registry/add/signer=No
|Requirement#registry/edit/MD5_hash=No
|Requirement#registry/edit/company=No
|Requirement#registry/edit/description=No
|Requirement#registry/edit/imagepath=No
|Requirement#registry/edit/imp_hash=No
|Requirement#registry/edit/launchstring=No
|Requirement#registry/edit/location=No
|Requirement#registry/edit/pesha1_hash=No
|Requirement#registry/edit/pesha256_hash=No
|Requirement#registry/edit/sha1_hash=No
|Requirement#registry/edit/sha256_hash=No
|Requirement#registry/edit/signer=No
|Requirement#registry/remove/MD5_hash=No
|Requirement#registry/remove/company=No
|Requirement#registry/remove/description=No
|Requirement#registry/remove/imagepath=No
|Requirement#registry/remove/imp_hash=No
|Requirement#registry/remove/launchstring=No
|Requirement#registry/remove/location=No
|Requirement#registry/remove/pesha1_hash=No
|Requirement#registry/remove/pesha256_hash=No
|Requirement#registry/remove/sha1_hash=No
|Requirement#registry/remove/sha256_hash=No
|Requirement#registry/remove/signer=No
|Requirement#av_alert/alert/image_path=No
|Requirement#av_alert/alert/src_ip=No
|Requirement#av_alert/alert/target_file_name=No
|Requirement#av_alert/alert/target_host_name=No
|Requirement#av_alert/alert/target_user_name=No
|Requirement#av_alert/alert/threat_action_taken=No
|Requirement#av_alert/alert/threat_category=No
|Requirement#av_alert/alert/threat_name=No
|Requirement#av_alert/alert/threat_severity=No
|Requirement#av_alert/alert/threat_type=No
|Requirement#av_alert/deny/image_path=No
|Requirement#av_alert/deny/src_ip=No
|Requirement#av_alert/deny/target_file_name=No
|Requirement#av_alert/deny/target_host_name=No
|Requirement#av_alert/deny/target_user_name=No
|Requirement#av_alert/deny/threat_action_taken=No
|Requirement#av_alert/deny/threat_category=No
|Requirement#av_alert/deny/threat_name=No
|Requirement#av_alert/deny/threat_severity=No
|Requirement#av_alert/deny/threat_type=No
|Requirement#av_alert/would_deny/image_path=No
|Requirement#av_alert/would_deny/src_ip=No
|Requirement#av_alert/would_deny/target_file_name=No
|Requirement#av_alert/would_deny/target_host_name=No
|Requirement#av_alert/would_deny/target_user_name=No
|Requirement#av_alert/would_deny/threat_action_taken=No
|Requirement#av_alert/would_deny/threat_category=No
|Requirement#av_alert/would_deny/threat_name=No
|Requirement#av_alert/would_deny/threat_severity=No
|Requirement#av_alert/would_deny/threat_type=No
|Requirement#file/timestomp/sid=No
|Requirement#file/create/sid=No
|Requirement#file/delete/sid=No
|Requirement#file/modify/sid=No
|Requirement#file/read/sid=No
|Requirement#file/write/sid=No
|Requirement#driver/load/tid=No
|Requirement#driver/unload/tid=No
|Requirement#process/create/parent_uuid=No
|Requirement#process/create/uuid=No
|Requirement#process/terminate/parent_uuid=No
|Requirement#process/terminate/uuid=No
|Alias#registry/md5_hash=md5hash
|Requirement#registry/add/md5_hash=No
|Requirement#registry/edit/md5_hash=No
|Requirement#registry/remove/md5_hash=No
|Requirement#service/create/sid=No
|Requirement#service/delete/sid=No
|Requirement#service/pause/sid=No
|Requirement#service/start/sid=No
|Requirement#service/stop/sid=No
|Requirement#user_session/interactive/image_path=No
|Requirement#user_session/interactive/message=No
|Requirement#user_session/interactive/task_category=No
|Requirement#user_session/local/image_path=No
|Requirement#user_session/local/message=No
|Requirement#user_session/local/task_category=No
|Requirement#user_session/lock/image_path=No
|Requirement#user_session/lock/message=No
|Requirement#user_session/lock/task_category=No
|Requirement#user_session/login/image_path=No
|Requirement#user_session/login/message=No
|Requirement#user_session/login/task_category=No
|Requirement#user_session/logout/image_path=No
|Requirement#user_session/logout/message=No
|Requirement#user_session/logout/task_category=No
|Requirement#user_session/netbios/dest_ip=No
|Requirement#user_session/netbios/dest_port=No
|Requirement#user_session/netbios/hostname=No
|Requirement#user_session/netbios/image_path=No
|Requirement#user_session/netbios/logon_id=No
|Requirement#user_session/netbios/logon_type=No
|Requirement#user_session/netbios/message=No
|Requirement#user_session/netbios/privileges=No
|Requirement#user_session/netbios/src_ip=No
|Requirement#user_session/netbios/src_port=No
|Requirement#user_session/netbios/task_category=No
|Requirement#user_session/netbios/user=No
|Requirement#user_session/privilege/image_path=No
|Requirement#user_session/privilege/message=No
|Requirement#user_session/privilege/task_category=No
|Requirement#user_session/rdp/image_path=No
|Requirement#user_session/rdp/message=No
|Requirement#user_session/rdp/task_category=No
|Requirement#user_session/reconnect/image_path=No
|Requirement#user_session/reconnect/message=No
|Requirement#user_session/reconnect/task_category=No
|Requirement#user_session/remote/image_path=No
|Requirement#user_session/remote/message=No
|Requirement#user_session/remote/task_category=No
|Requirement#user_session/rpc/dest_ip=No
|Requirement#user_session/rpc/dest_port=No
|Requirement#user_session/rpc/hostname=No
|Requirement#user_session/rpc/image_path=No
|Requirement#user_session/rpc/logon_id=No
|Requirement#user_session/rpc/logon_type=No
|Requirement#user_session/rpc/message=No
|Requirement#user_session/rpc/privileges=No
|Requirement#user_session/rpc/src_ip=No
|Requirement#user_session/rpc/src_port=No
|Requirement#user_session/rpc/task_category=No
|Requirement#user_session/rpc/user=No
|Requirement#user_session/smb/dest_ip=No
|Requirement#user_session/smb/dest_port=No
|Requirement#user_session/smb/hostname=No
|Requirement#user_session/smb/image_path=No
|Requirement#user_session/smb/logon_id=No
|Requirement#user_session/smb/logon_type=No
|Requirement#user_session/smb/message=No
|Requirement#user_session/smb/privileges=No
|Requirement#user_session/smb/src_ip=No
|Requirement#user_session/smb/src_port=No
|Requirement#user_session/smb/task_category=No
|Requirement#user_session/smb/user=No
|Requirement#user_session/unlock/image_path=No
|Requirement#user_session/unlock/message=No
|Requirement#user_session/unlock/task_category=No
|Requirement#registry/add/category=No
|Requirement#registry/add/enabled=No
|Requirement#registry/add/entry=No
|Requirement#registry/add/entry_location=No
|Requirement#registry/add/image_path=No
|Requirement#registry/add/launch_string=No
|Requirement#registry/edit/category=No
|Requirement#registry/edit/enabled=No
|Requirement#registry/edit/entry=No
|Requirement#registry/edit/entry_location=No
|Requirement#registry/edit/image_path=No
|Requirement#registry/edit/launch_string=No
|Requirement#registry/remove/category=No
|Requirement#registry/remove/enabled=No
|Requirement#registry/remove/entry=No
|Requirement#registry/remove/entry_location=No
|Requirement#registry/remove/image_path=No
|Requirement#registry/remove/launch_string=No
}}
}}</text>
            <sha1>npofl5fz4rsypan953oqg5v5f2v2gli</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>ATTACK Lookup</title>
        <ns>0</ns>
        <id>781</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10598</id>
            <parentid>10551</parentid>
            <timestamp>2016-04-14T05:49:09Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2901">{{#vardefine: TACTICS_URL
|{{ATTACK URL}}/Special:Ask?{{#arraymap:
q=[[Category:Tactic]]
eq=yes
p[format]=csv
p[headers]=show
p[mainlabel]=Tactic Name
p[searchlabel]=csv
p[sep]=,
p[limit]=500
eq=yes
|\n
|$Param
|{{#arraymap: $Param|=|$Section|{{#replace: {{urlencode: $Section}}|%5Cn|%0D%0A}}|=}}
|&amp;
}}&lt;!-- end arraymap --&gt;
}}&lt;!-- end vardefine --&gt;
{{#vardefine: TECHNIQUES_URL
|{{ATTACK URL}}/Special:Ask?{{#arraymap:
q=[[Category:Technique]]
eq=yes
p[format]=csv
p[headers]=show
p[mainlabel]=Technique Page
p[searchlabel]=csv
p[sep]=,
p[limit]=500
po=?Has tactic\n?Has ID\n?Has technique name
eq=yes
|\n
|$Param
|{{#arraymap: $Param|=|$Section|{{#replace: {{urlencode: $Section}}|%5Cn|%0D%0A}}|=}}
|&amp;
}}&lt;!-- end arraymap --&gt;
}}&lt;!-- end vardefine --&gt; {{#vardefine: GROUPS_URL
|{{ATTACK URL}}/Special:Ask?{{#arraymap:
q=[[Category:Group]]
eq=yes
p[format]=csv
p[headers]=show
p[mainlabel]=Group Page
p[searchlabel]=csv
p[sep]=,
p[limit]=500
po=?Has ID\n?Has alias\n?Has technique
eq=yes
|\n
|$Param
|{{#arraymap: $Param|=|$Section|{{#replace: {{urlencode: $Section}}|%5Cn|%0D%0A}}|=}}
|&amp;
}}&lt;!-- end arraymap --&gt;
}}&lt;!-- end vardefine --&gt; {{#vardefine: SOFTWARE_URL
|{{ATTACK URL}}/Special:Ask?{{#arraymap:
q=[[Category:Group]]
eq=yes
p[format]=csv
p[headers]=show
p[mainlabel]=Software Page
p[searchlabel]=csv
p[sep]=,
p[limit]=500
po=?Has name\n?Has technique
eq=yes
|\n
|$Param
|{{#arraymap: $Param|=|$Section|{{#replace: {{urlencode: $Section}}|%5Cn|%0D%0A}}|=}}
|&amp;
}}&lt;!-- end arraymap --&gt;
}}&lt;!-- end vardefine --&gt; {{#get_web_data:
|url={{#var: TACTICS_URL}}
 |format=CSV with header
 |data=Tactic Name=Tactic Name,Tactic Description=Has description
 |cache seconds=1800
}}{{#store_external_table: Is ATTACK Tactic
 |Has Tactic Name={{{Tactic Name}}}
 |Has Tactic Page=attack:{{{Tactic Name}}}
 |Has Description={{{Tactic Description}}}
}}{{#get_web_data:
 |url={{#var: TECHNIQUES_URL}}
 |format=CSV with header
 |data=Technique Name=Has technique name,Tactics=Has tactic,Technique ID=Has ID,Technique Page=Technique Page
 |cache seconds=1800
}}{{#store_external_table:Is ATTACK Technique
 |Has Technique ID={{{Technique ID}}}
 |Has ATTACK Technique Name={{{Technique Name}}}
 |Has Technique Link=[[attack:Technique/{{{Technique ID}}}|{{{Technique Name}}}]]
 |Has ATTACK Tactic={{{Tactics}}}|+sep=,
}}&lt;!--
{{#get_web_data:
 |url={{#var: GROUPS_URL}}
 |format=CSV with header
 |data=Group Page=Group Page,Group ID=Has ID,Group Alias=Has alias
 |cache seconds=1800
}}{{#get_web_data:
 |url={{#var: SOFTWARE_URL}}
 |format=CSV with header
 |data=Software Page=Software Page,Has alias=Software Name,Has ID=Software ID
 |cache seconds=1800
}}
--&gt;
Retrieves content dynamically from {{ATTACK_URL}}. This page needs to be updated when ATT&amp;CK gets updated.
* [{{#var: TACTICS_URL}} Tactics]
* [{{#var: TECHNIQUES_URL}} Techniques]
&lt;!--
* [{{#var: GROUPS_URL}} Groups]
* [{{#var: SOFTWARE_URL}} Software]
--&gt;</text>
            <sha1>sfapa4n6h7wj5lr2lc7e5zcz50jaz3p</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Help:Analytics</title>
        <ns>12</ns>
        <id>784</id>
        <redirect xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" title="Help:Glossary"/>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7679</id>
            <parentid>7678</parentid>
            <timestamp>2015-04-17T17:33:13Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="36">#REDIRECT [[Help:Glossary#Analytic]]</text>
            <sha1>48v28u732lqhaqgmdceivqanndnv2kp</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Help:Operators</title>
        <ns>12</ns>
        <id>785</id>
        <redirect xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" title="Help:Pipeline"/>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7680</id>
            <timestamp>2015-04-17T17:34:09Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="37">#REDIRECT [[Help:Pipeline#Operators]]</text>
            <sha1>qkgnbjpd5l45mux9x13b6kxgs399wu2</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Help:Main Page</title>
        <ns>12</ns>
        <id>786</id>
        <redirect xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" title="Help:Contents"/>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7682</id>
            <timestamp>2015-04-17T17:42:07Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="27">#REDIRECT [[Help:Contents]]</text>
            <sha1>dvdgrf86ah05fxyz9p5c24ccffx3ghm</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Help:Data Model</title>
        <ns>12</ns>
        <id>787</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>11021</id>
            <parentid>10845</parentid>
            <timestamp>2016-08-08T20:03:55Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2625">&lt;onlyinclude&gt;The '''Data Model''', strongly inspired by [https://cybox.mitre.org CybOX], is an organization of the [[Help:Data Model#Objects|objects]] that may be monitored from a host-based or network-based perspective. Each object on can be identified by two dimensions: its [[Help:Data Model#Actions|actions]] and [[Help:Data Model#Fields|fields]]. When paired together, the three-tuple of &lt;code&gt;(object, action, field)&lt;/code&gt; act like a coordinate, and describe what properties and state changes of the object can be captured by a sensor.
&lt;/onlyinclude&gt;

== Objects ==
{{Define|object|In the Data Model an ''object'' is much like an [[wikipedia:Object (computer science)|object]] in computer science. These are the items that data actually represent, such as hosts, files, connections, etc. Objects are the nouns of the Data Model vocabulary.}}

== Actions ==
{{Define|action|An ''action'' refers to a state change or event that happens on an object, such as an object's creation, destruction, or modification. These are the verbs that describe that an object can do, and what can happen to an object.}} However, there are cases where sensors do not monitor actions in objects but merely scan for and check the presence of an object. Each action is represented in a coverage matrix (the 2D table). The actions are on the y-axis.

== Fields ==
{{Define|field|A ''field '' refers to the observable properties of an object. These properties may contain flags, identifiers, data elements, or even references to other objects. In terms of vocabulary, fields are like the adjectives. They describe properties about an object.}} A [[Help:Glossary#Sensor|sensor]] monitors fields in the context of an object, and outputs these in some form of structured data. Once the data is ingested into a [[wikipedia:SIEM|SIEM]], the logs can be queried by forcing restrictions or patterns upon one or more objects, such as in an [[Help:Glossary#Analytic|analytic]].  On the coverage matrix fields are on the x-axis.

== Coverage  ==
In order to gauge the usefulness of a sensor with respect to analytics, its output must be mapped into the Data Model. For each object that a sensor measures, it captures state. Some sensors periodically scan for objects, instead of monitoring for state changes. In these cases, state may be inferred by looking for changes in the properties of an object.

=== example_object ===
{|class="sensor_table wikitable"
|-
!
! field_1
! field_2
|-
! action_1 
| example_object/action_1/field_1 
| example_object/action_1/field_2
|-
! action_2
| example_object/action_2/field_1 
| example_object/action_2/field_2
|}</text>
            <sha1>2x31mpq25gbroczd0ybo80n1d6i3fck</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Help:Full Operator List</title>
        <ns>12</ns>
        <id>788</id>
        <redirect xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" title="Help:Pipeline"/>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7695</id>
            <parentid>7694</parentid>
            <timestamp>2015-04-17T18:40:39Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="37">#REDIRECT [[Help:Pipeline#Operators]]</text>
            <sha1>qkgnbjpd5l45mux9x13b6kxgs399wu2</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Help:Full Analytic List</title>
        <ns>12</ns>
        <id>791</id>
        <redirect xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" title="Help:Glossary"/>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7700</id>
            <timestamp>2015-04-17T18:45:29Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="36">#REDIRECT [[Help:Glossary#Analytic]]</text>
            <sha1>48v28u732lqhaqgmdceivqanndnv2kp</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Help:Sensors</title>
        <ns>12</ns>
        <id>794</id>
        <redirect xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" title="Help:Glossary"/>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7717</id>
            <timestamp>2015-04-17T22:50:34Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="34">#REDIRECT [[Help:Glossary#Sensor]]</text>
            <sha1>hakqu52uwxeu9pzl34g7h7ez97pd47q</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Extract Fields</title>
        <ns>10</ns>
        <id>795</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10178</id>
            <parentid>10174</parentid>
            <timestamp>2016-03-25T18:24:35Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="299">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;{{#forargs: Requirement#
|Req
|Status
|{{#ifeq: {{#var: Status}}|Yes|{{#var: Req}},}}
}}&lt;!-- {{#if: {{{Sensors|}}}
|{{#ask: [[Category:Sensors]][[{{#arraymap: {{{Sensors|}}}|,|$|${{!!}}|}}]]|?Has Field Coverage=|mainlabel=-}}
|}}
--&gt;&lt;includeonly&gt;</text>
            <sha1>n8i7fpw8ik0t4om7gkompnpdcnlg3jt</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Form:Calculated Coverage</title>
        <ns>106</ns>
        <id>796</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10558</id>
            <parentid>10297</parentid>
            <timestamp>2016-04-14T04:03:22Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1322">Given a sensor configuration, and additional Data Model coverage, determine the maximum analytic coverage. Once the available fields are identified, several coverage maps are dynamically generated
* Data Model
* Analytic Instantiations
* Analytics
* ATT&amp;amp;CK
&lt;noinclude&gt;

'''[[Special:RunQuery/Calculated Coverage|Try it Live!]]'''&lt;/noinclude&gt;
&lt;includeonly&gt;__NOTOC__ __NOEDITSECTION__
{{{info|query form at top|query title=Calculated Coverage}}}
{{{for template|Suite Coverage}}} 
{{{field|Fields|holds template}}} 
== Direct Coverage ==
{| class="stackedform"
! Analytic Coverage
| {{{field|Analytics|input type=tokens|values from category=Analytics|mapping property=Has Full Analytic Name}}}
|-
! Technique Coverage
| {{{field|Techniques|input type=tokens|values from property=Has ATTACK Technique ID|mapping property=Has ATTACK Technique Name}}}
|-
! Sensors
| {{{field|Sensors|input type=checkboxes|values from category=Sensors}}}
|}
{{{end template}}}

{{{for template|Extract Fields|embed in field=Sensor Coverage[Fields]}}}

== Data Model Coverage {{{field|Use Data Model|input type=checkbox|show on select=data_model_form}}} ==
&lt;div id="data_model_form" style="display:none;"&gt;
{{Data Model Coverage Form|Sensor Input=no}}
&lt;/div&gt;


{{{end template}}}

{{{standard input|run query|label=Calculate}}}
&lt;/includeonly&gt;</text>
            <sha1>e5f32aipt68eqqnqpjoispwyahcc6tb</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Data Model Coverage Form</title>
        <ns>10</ns>
        <id>797</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>8434</id>
            <parentid>8433</parentid>
            <timestamp>2015-08-13T15:37:16Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1348">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;{{#arraymap: {{#ask: [[Category:Data Model]]|mainlabel=-|?Has Object Name=|format=list|sort=Has Object Name}}
|,
|$Object
|&lt;nowiki&gt;
&lt;/nowiki&gt;
===  [[Data Model/$Object|$Object]] ===
{{DynamicField|Object#$Object|input type=checkbox|show on select=yes=&gt;ObjectTable_$Object}} Provided {{#arraydefine: Fields|
{{#ask: [[Has Object Name::$Object]]|mainlabel=-|?Has Object Field=|format=list}}
|,
|sort=asc
}}{{#arraydefine: Actions|
{{#ask: [[Has Object Name::$Object]]|mainlabel=-|?Has Object Action=|format=list}}
|,
|sort=asc
}}
&lt;table class="sensor_table wikitable" id="ObjectTable_$Object" style="display:none;"&gt;
{{#ifeq: {{{Sensor Input|}}}|no||
&lt;tr&gt;&lt;th&gt;Sensor Field&lt;/th&gt;{{#arrayprint: Fields
|
|$Field
|&lt;td class="alias"&gt;{{DynamicField|Alias#$Object/$Field|input type=text|size=auto}}&lt;/td&gt;
|
|}} &lt;!-- End Field --&gt;
&lt;/tr&gt;

&lt;tr style="height:1em;"&gt;&lt;/tr&gt;
}}
&lt;tr&gt;&lt;th&gt;&lt;/th&gt;{{#arrayprint: Fields
|
|$Field
|&lt;th&gt;[[Data Model/$Object#$Field|$Field]]&lt;/th&gt;
|
|}} &lt;!-- End Field --&gt;
&lt;/tr&gt;

{{#arrayprint: Actions
|
|$Action
|&lt;tr&gt;
&lt;th&gt;[[Data Model/$Object#$Action|$Action]]&lt;/th&gt;
{{#arrayprint: Fields
|
|$Field
|&lt;td&gt;{{DynamicField|Requirement#$Object/$Action/$Field|input type=checkbox|multiple}}&lt;/td&gt;
|}} &lt;!-- End Field --&gt;
&lt;/tr&gt;
|
|}} &lt;!-- End Action --&gt;
&lt;/table&gt;
|
}}&lt;!-- End Object --&gt;
&lt;/includeonly&gt;</text>
            <sha1>7dr4du32ryqq1rag56kjlihqh3tmns8</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Analytic Summary</title>
        <ns>102</ns>
        <id>798</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7747</id>
            <parentid>7746</parentid>
            <timestamp>2015-04-18T00:28:08Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Subtype</title>
        <ns>102</ns>
        <id>800</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7819</id>
            <parentid>7818</parentid>
            <timestamp>2015-04-20T15:53:41Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="112">This is a property of type [[Has type::String]].
It is a Subproperty of [[Subproperty of::Property:Has Subtype]]</text>
            <sha1>lj51kvx61cj8qjbkirye211fy9g8jc3</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Data Model/file</title>
        <ns>0</ns>
        <id>808</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10936</id>
            <parentid>9554</parentid>
            <timestamp>2016-06-29T23:17:39Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="3416">{{Data Model Object
|Name=file
|Description=A resource for storing information available to a computer program.
|AllFields={{Object Fields
|Name=creation_time
|Description=The creation time of the file as described in UTC and including the date.
|Format=05/14/2015 12:47:06
}}{{Object Fields
|Name=file_name
|Description=The name of the file.
|Format=MyWordDoc.docx
}}{{Object Fields
|Name=fqdn
|Description=The fully qualified domain name of the host. Contains the hostname appended with the domain.
|Format=HOST1.EXAMPLE_DOMAIN.COM
}}{{Object Fields
|Name=hostname
|Description=The hostname of the host, without the domain.
|Format=HOST1
}}{{Object Fields
|Name=image_path
|Description=The file system location of the executable that is associated with the &lt;code&gt;pid&lt;/code&gt; that generated this event.
|Format=C:\Windows\system32\notepad.exe
}}{{Object Fields
|Name=md5_hash
|Description=An MD5 hash of the contents of the file located at image_path. The field is in hex notation, without the 0x prefix.
|Format=5eb63bbbe01eeed093cb22bb8f5acdc3
}}{{Object Fields
|Name=pid
|Description=The process ID for the process that generated this file event, represented in decimal notation.
|Format=738
}}{{Object Fields
|Name=ppid
|Description=The process ID of the parent process of the process associated with this file event, represented in decimal notation.
|Format=1860
}}{{Object Fields
|Name=previous_creation_time
|Description=The creation_time associated with the file before it was changed for this file event.
|Format=05/14/2015 12:47:06
}}{{Object Fields
|Name=signer
|Description=The company listed on the certificate of the program at &lt;code&gt;image_path&lt;/code&gt; if that program is signed.
|Format=Microsoft Corporation
}}{{Object Fields
|Name=sha1_hash
|Description=The SHA1 hash of the contents of the file located at image_path.
|Format=2aae6c35c94fcfb415dbe95f408b9ce91ee846ed
}}{{Object Fields
|Name=sha256_hash
|Description=The SHA256 hash of the contents of the file located at image_path.
|Format=68e656b251e67e8358bef8483ab0d51c6619f3e7a1a9f0e75838d41ff368f728
}}{{Object Fields
|Name=user
|Description=The user context in which the thread that caused this event was running. May be a local, domain or SYSTEM user. Formatted as "&lt;DOMAIN&gt;\&lt;USER&gt;". Because threads are allowed to impersonate users, this may be different than the user context of the process.
|Format=HOST1\LOCALUSER
}}{{Object Fields
|Name=company
|Description=The name of the organization listed in the file located at &lt;code&gt;image_path&lt;/code&gt;.
}}{{Object Fields
|Name=file_path
|Description=The full path to the file.
|Format=C:\users\fakeuser\documents\MyFile.docx
}}
|AllActions={{Object Actions
|Name=timestomp
|Description=The modification of an attribute, such as creation time.  The file metadata may change, but the contents of the file remain the same.
}}{{Object Actions
|Name=create
|Description=The event corresponding to the creation of a file.
}}{{Object Actions
|Name=delete
|Description=The event corresponding to the deletion of a file.
}}{{Object Actions
|Name=modify
|Description=The event corresponding to the modification of a file or its metadata.
}}{{Object Actions
|Name=read
|Description=The event corresponding to the accessing of a file to be read.
}}{{Object Actions
|Name=write
|Description=The event corresponding to the accessing of a file in order to write new instructions or information into a file.
}}
}}</text>
            <sha1>4zct8d08zjxdbjcsxmj4yvoaraascem</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Data Model/flow</title>
        <ns>0</ns>
        <id>809</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10937</id>
            <parentid>10847</parentid>
            <timestamp>2016-06-29T23:22:49Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="3991">{{Data Model Object
|Name=flow
|Description=A sequence of packets from a source computer to a destination, which may be another host, a multicast group, or a broadcast domain.  This may be captured at network or host level.
|AllFields={{Object Fields
|Name=content
|Description=The ASCII printable characters of the flow. This corresponds to content from PCAC data or similar formats.
|Format=GET https://www.google.com/ HTTP/1.1
}}{{Object Fields
|Name=dest_ip
|Description=The destination IP address of the flow.
|Format=192.168.1.5
}}{{Object Fields
|Name=dest_port
|Description=The destination port of the flow.
|Format=1900
}}{{Object Fields
|Name=end_time
|Description=The datetime stamp, in UTC, when the flow ended.
|Format=5/15/2015 03:59:53.176 AM
}}{{Object Fields
|Name=exe
|Description=The basename of the &lt;code&gt;image_path&lt;/code&gt;. This will need to be collected from the host.
|Format=Chrome.exe
}}{{Object Fields
|Name=flags
|Description=TCP flags.
|Format=SYN, ACK, PSH
}}{{Object Fields
|Name=fqdn
|Description=The fully qualified domain name of the host. Contains the hostname appended with the domain.
|Format=HOST1.EXAMPLE_DOMAIN.COM
}}{{Object Fields
|Name=hostname
|Description=The hostname of the active host, without the domain.
|Format=HOST1
}}{{Object Fields
|Name=image_path
|Description=The file system path of the process that opened the flow. This will need to be collected from the host.
|Format=C:\path\to\example.exe
}}{{Object Fields
|Name=packet_count
|Description=The total packet count seen at time of logging.
|Format=4
}}{{Object Fields
|Name=pid
|Description=The process ID of the process that owns the socket responsible for the flow, represented in decimal notation. This will need to be collected from the host.
|Format=738
}}{{Object Fields
|Name=ppid
|Description=The process ID for the process's parent that owns the socket responsible for the flow, represented in decimal notation. This will need to be collected from the host.
|Format=1860
}}{{Object Fields
|Name=proto_info
|Description=A text decoded version of traffic in the flow specific to the protocol.

The application layer information from the flow parsed according to the protocol in question. For instance, SMB information or HTTP headers and content.
|Format=SMB2 Write Request Len:165 Off:0 File: username\private\filename.pptx
SRVSVC NetShareGetInfo response
}}{{Object Fields
|Name=protocol
|Description=The application layer protocol for the flow.
|Format=SMB
HTTP
}}{{Object Fields
|Name=src_ip
|Description=The source IP address of the flow.
|Format=10.0.0.54
}}{{Object Fields
|Name=src_port
|Description=The source port of the flow packet.
|Format=50438
}}{{Object Fields
|Name=start_time
|Description=The starting time date stamp, in UTC, of the flow data.
|Format=05/14/2015 11:59:59 PM
}}{{Object Fields
|Name=user
|Description=The user that ran the process.
|Format=HOST1\LOCALUSER
}}{{Object Fields
|Name=src_fqdn
|Description=The fully qualified domain name that corresponds to &lt;code&gt;src_ip&lt;/code&gt;.
|Format=src_domain.example.com
}}{{Object Fields
|Name=src_hostname
|Description=The hostname that corresponds to &lt;code&gt;src_ip&lt;/code&gt;.
|Format=src_example
}}{{Object Fields
|Name=dest_fqdn
|Description=The fully qualified domain name that corresponds to &lt;code&gt;dest_ip&lt;/code&gt;.
|Format=dest_example.example.com
}}{{Object Fields
|Name=dest_hostname
|Description=The hostname that corresponds to &lt;code&gt;dest_ip&lt;/code&gt;
|Format=dest_example
}}
|AllActions={{Object Actions
|Name=start
|Description=The event corresponding to the beginning of collection of flow data in a given time period.
}}{{Object Actions
|Name=end
|Description=The event corresponding to the ending of collection of flow data in a given time period.
}}{{Object Actions
|Name=message
|Description=A flow message pertains to any event between start and end when content is sent over the connection (may imply TCP). This often implies use of traffic content collected via PCAP or a similar mechanism.
}}
}}</text>
            <sha1>p40s01jbq49ly3bwlu7cilgqggjzxe7</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Data Model/driver</title>
        <ns>0</ns>
        <id>812</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10934</id>
            <parentid>10933</parentid>
            <timestamp>2016-06-29T23:11:54Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1874">{{Data Model Object
|Name=driver
|Description=A driver is software that runs in the operating system kernel. Drivers are generally used to allow a computer to communicate with hardware devices but have access to important kernel resources.
|AllFields={{Object Fields
|Name=base_address
|Description=A hex address indicating where the driver is loaded into the kernel.
|Format=0xFFFFF8000405F000
}}{{Object Fields
|Name=fqdn
|Description=The fully qualified domain name of the host. Contains the hostname appended with the domain.
|Format=HOST1.EXAMPLE_DOMAIN.COM
}}{{Object Fields
|Name=hostname
|Description=The hostname of the host, without the domain.
|Format=HOST1
}}{{Object Fields
|Name=image_path
|Description=The file system location of the driver.
|Format=C:\Windows\System32\drivers\scsiport.sys
}}{{Object Fields
|Name=md5_hash
|Description=The MD5 hash of the contents of the file located at image_path. The field is in hex notation, without the 0x prefix.
|Format=5eb63bbbe01eeed093cb22bb8f5acdc3
}}{{Object Fields
|Name=module_name
|Description=The name of the driver or program.
|Format=NvStreamKms.sys
}}{{Object Fields
|Name=sha1_hash
|Description=The SHA1 hash of the contents of the file located at image_path.
|Format=2aae6c35c94fcfb415dbe95f408b9ce91ee846ed
}}{{Object Fields
|Name=sha256_hash
|Description=The SHA256 hash of the contents of the file located at image_path.
|Format=68e656b251e67e8358bef8483ab0d51c6619f3e7a1a9f0e75838d41ff368f728
}}{{Object Fields
|Name=signer
|Description=The name of the organization which signed the driver.
|Format=Microsoft Corporation
}}
|AllActions={{Object Actions
|Name=load
|Description=The event corresponding to the operating system kernel loading a driver into memory.
}}{{Object Actions
|Name=unload
|Description=The event corresponding to the operating system kernel unloading a driver from memory.
}}
}}</text>
            <sha1>2q9iz4r16dbfyrf6cs8u8gzc9c5xe1d</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Data Model/module</title>
        <ns>0</ns>
        <id>813</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10938</id>
            <parentid>9680</parentid>
            <timestamp>2016-06-29T23:27:44Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2645">{{Data Model Object
|Name=module
|Description=Modules correspond to executable (and potentially non-executable) content, and are loaded as a contiguous region of memory into the address space of a  [[Data Model/process|process]]. Each process will have the main image loaded as a module and shared libraries (DLLs in Windows) and their dependencies.
|AllFields={{Object Fields
|Name=base_address
|Description=A hex address indicating where the module is loaded into the process’s virtual address space
|Format=0xFFFFF8000405F000
}}{{Object Fields
|Name=fqdn
|Description=The fully qualified domain name of the host. Contains the hostname appended with the domain.
|Format=HOST1.EXAMPLE_DOMAIN.COM
}}{{Object Fields
|Name=hostname
|Description=The hostname of the active host, without the domain.
|Format=HOST1
}}{{Object Fields
|Name=image_path
|Description=The file system location of the process image.
|Format=C:\path\to\example.exe
}}{{Object Fields
|Name=md5_hash
|Description=The MD5 hash of the contents of the file located at &lt;code&gt;module_path&lt;/code&gt;. The field is in hex notation, without the 0x prefix.
|Format=5eb63bbbe01eeed093cb22bb8f5acdc3
}}{{Object Fields
|Name=module_path
|Description=The full file system path to the module loaded into the memory space of the process.
|Format=C:\windows\system32\kernel32.exe
}}{{Object Fields
|Name=module_name
|Description=The name of the file where the module is loaded on disk. This is also the string that is used internally by the program to lookup information about the module.
|Format=kernel32.exe
}}{{Object Fields
|Name=pid
|Description=Process ID of the process in which the module is loaded (or unloaded).
|Format=738
}}{{Object Fields
|Name=sha1_hash
|Description=The SHA1 hash of the contents of the file located at &lt;code&gt;image_path&lt;/code&gt;.
|Format=2aae6c35c94fcfb415dbe95f408b9ce91ee846ed
}}{{Object Fields
|Name=sha256_hash
|Description=The SHA256 hash of the contents of the file located at &lt;code&gt;image_path&lt;/code&gt;.
|Format=68e656b251e67e8358bef8483ab0d51c6619f3e7a1a9f0e75838d41ff368f728
}}{{Object Fields
|Name=signer
|Description=The name of the organization which signed the module.
|Format=Microsoft Corporation
}}{{Object Fields
|Name=tid
|Description=The thread ID of the thread responsible for the load or unload event.
|Format=50
}}
|AllActions={{Object Actions
|Name=load
|Description=A module load event occurs when a PE image (dll or exe) is loaded into a process.
}}{{Object Actions
|Name=unload
|Description=When the module is unloaded from memory, upon destruction of the process or by calling an API such as FreeLibrary, the unload event is triggered.
}}
}}</text>
            <sha1>i080ale87vefuwmt0h2r5ynd8j0dnub</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Data Model/process</title>
        <ns>0</ns>
        <id>814</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10939</id>
            <parentid>8504</parentid>
            <timestamp>2016-06-29T23:31:12Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="3367">{{Data Model Object
|Name=process
|Description=A process is a running program on a computer.
|AllFields={{Object Fields
|Name=command_line
|Description=The command line string contains all arguments passed to the process upon execution.
|Format=example arg1 arg2
example.exe
C:\path\example.exe /flag1
}}{{Object Fields
|Name=exe
|Description=The basename of the &lt;code&gt;image_path&lt;/code&gt;.
|Format=example.exe
}}{{Object Fields
|Name=fqdn
|Description=The fully qualified domain name of the host in which the process ran. Contains the hostname appended with the domain.
|Format=HOST1.EXAMPLE_DOMAIN.COM
}}{{Object Fields
|Name=hostname
|Description=The hostname of the host, without the domain.
|Format=HOST1
}}{{Object Fields
|Name=image_path
|Description=The file path of the executable associated with this process. This may act as a pivot to [[Data_Model/file#file_path|&lt;code&gt;file:file_path&lt;/code&gt;]].
|Format=C:\path\to\example.exe
}}{{Object Fields
|Name=md5_hash
|Description=The MD5 hash of the contents of the file located at &lt;code&gt;image_path&lt;/code&gt;. The field is in hex notation, without the 0x prefix.
|Format=5eb63bbbe01eeed093cb22bb8f5acdc3
}}{{Object Fields
|Name=parent_exe
|Description=The &lt;code&gt;exe&lt;/code&gt; field of the parent process. This is a substring of &lt;code&gt;parent_image_path&lt;/code&gt;
|Format=example_parent.exe
}}{{Object Fields
|Name=parent_image_path
|Description=The &lt;code&gt;image_path&lt;/code&gt; field of the parent process.
|Format=C:\path\to\example_parent.exe
}}{{Object Fields
|Name=pid
|Description=The process ID for the process, represented in decimal notation.
|Format=738
}}{{Object Fields
|Name=ppid
|Description=The process ID for the process's parent, represented in decimal notation. In the parent process, this will be the &lt;code&gt;pid&lt;/code&gt; field.
|Format=1860
}}{{Object Fields
|Name=sha1_hash
|Description=The SHA1 hash of the contents of the file located at &lt;code&gt;image_path&lt;/code&gt;.
|Format=2aae6c35c94fcfb415dbe95f408b9ce91ee846ed
}}{{Object Fields
|Name=sha256_hash
|Description=The SHA256 hash of the contents of the file located at &lt;code&gt;image_path&lt;/code&gt;.
|Format=68e656b251e67e8358bef8483ab0d51c6619f3e7a1a9f0e75838d41ff368f728
}}{{Object Fields
|Name=sid
|Description=The security identifier of the &lt;code&gt;user&lt;/code&gt; token that the process is running under.
|Format=S-1-5-18
}}{{Object Fields
|Name=signer
|Description=The company that signed the file.
}}{{Object Fields
|Name=user
|Description=The user token that process was created with. May be a local, domain or SYSTEM user. Formatted with "&lt;DOMAIN&gt;\&lt;USER&gt;". Individual threads in the process may gain more privilege or change tokens, so the active token in any thread is not necessarily the one the process was created under.
|Format=HOST1\LOCALUSER
}}
|AllActions={{Object Actions
|Name=create
|Description=The event corresponding to a process creation in Windows. In the kernel, these are often captured with the callback [https://msdn.microsoft.com/en-us/library/windows/hardware/ff559951%28v=vs.85%29.aspx PsSetCreateProcessNotifyRoutine].
}}{{Object Actions
|Name=terminate
|Description=The event corresponding to a process destruction in Windows. In the kernel, these are also captured with the callback [https://msdn.microsoft.com/en-us/library/windows/hardware/ff559951%28v=vs.85%29.aspx PsSetCreateProcessNotifyRoutine], but with point to a NULL structure.
}}
}}</text>
            <sha1>8gl1e1dk8mwlzovnmg2k975jqsw7mu7</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Data Model/registry</title>
        <ns>0</ns>
        <id>815</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10940</id>
            <parentid>10848</parentid>
            <timestamp>2016-06-29T23:38:44Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2360">{{Data Model Object
|Name=registry
|Description=The registry is a system-defined database in which applications and system components store and retrieve configuration data.  The data stored in the registry varies according to the version of Microsoft Windows.  Applications use the registry API to retrieve, modify, or delete registry data.
|AllFields={{Object Fields
|Name=hostname
|Description=The hostname of the host, without the domain.
|Format=HOST1
}}{{Object Fields
|Name=key
|Description=The registry key of the event. Similar to a folder in a traditional file system,
|Format=HKLM\SYSTEM\CurrentControlSet\services\RpcSs
}}{{Object Fields
|Name=value
|Description=The descriptive name for the data being stored.
|Format=InstalledVersion
}}{{Object Fields
|Name=data
|Description=The content, typically a text string.
|Format=%SystemRoot%\system32\svchost.exe -k rpcss
}}{{Object Fields
|Name=type
|Description=Registry value types indicate the type of data being stored. Types include binary data, 32 bit numbers, strings, etc.
|Format=REG_SZ
REG_MULTI_SZ
REG_DWORD
REG_BINARY
REG_QWORD
REG_EXPAND_SZ
}}{{Object Fields
|Name=hive
|Description=The logical group of keys, subkeys, and values in the registry.
|Format=HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE
}}{{Object Fields
|Name=image_path
|Description=Inherited from the [[Data Model/process|process]] that made the registry access.
}}{{Object Fields
|Name=pid
|Description=Inherited from the [[Data Model/process|process]] that made the registry access.
}}{{Object Fields
|Name=fqdn
|Description=The fully qualified domain name for the host on which the registry access took place.
}}{{Object Fields
|Name=user
|Description=The user context in which the thread that caused this event was running. May be a local, domain or SYSTEM user. Formatted as "&lt;DOMAIN&gt;\&lt;USER&gt;". Because threads are allowed to impersonate users, this may be different than the user context of the process.
}}
|AllActions={{Object Actions
|Name=add
|Description=The event corresponding to the act of adding a registry key, hive, type, or value.
}}{{Object Actions
|Name=edit
|Description=The event corresponding to the act of modifying an existing registry key, hive, type, or value.
}}{{Object Actions
|Name=remove
|Description=The event corresponding to the act of deleting an existing registry key, hive, type, or value.
}}
}}</text>
            <sha1>bsabtrxes50hzrf2o8sfd133x5zltf1</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Data Model/service</title>
        <ns>0</ns>
        <id>816</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10941</id>
            <parentid>10849</parentid>
            <timestamp>2016-06-29T23:40:32Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2310">{{Data Model Object
|Name=service
|Description=Services, or a service application, can be started automatically at system boot, by a user through the services control panel applet, or by an application that uses service functions.  Services can execute even when no user is logged into the system.
|AllFields={{Object Fields
|Name=command_line
|Description=The command line that service is started with.
|Format=C:\windows\system32\svchost.exe -k rpcss
}}{{Object Fields
|Name=exe
|Description=The executable for the service.
|Format=svchost.exe
}}{{Object Fields
|Name=fqdn
|Description=The fully qualified domain name of the host. Contains the hostname appended with the domain.
|Format=Example:  HOST1.EXAMPLE_DOMAIN.COM
}}{{Object Fields
|Name=hostname
|Description=The hostname of the host, without the domain.
|Format=HOST1
}}{{Object Fields
|Name=image_path
|Description=Where in the file system the executable is located.
|Format=C:\path\to\example.exe
}}{{Object Fields
|Name=name
|Description=The name of the service.
|Format=RpcSs
}}{{Object Fields
|Name=ppid
|Description=The process ID of the process's parent, represented in decimal notation. In the parent process, this will be the pid field.
|Format=1860
}}{{Object Fields
|Name=pid
|Description=The process ID for the process, represented in decimal notation.
|Format=738
}}{{Object Fields
|Name=user
|Description=The user context in which the thread that caused this event was running. May be a local, domain or SYSTEM user. Formatted as "&lt;DOMAIN&gt;\&lt;USER&gt;". Because threads are allowed to impersonate users, this may be different than the user context of the process. For service events, the user is almost always NT AUTHORITY\SYSTEM.
|Format=NT AUTHORITY\SYSTEM
}}
|AllActions={{Object Actions
|Name=create
|Description=The event corresponding to the act of creating a new service.
}}{{Object Actions
|Name=delete
|Description=The event corresponding to the act of deleting a service.
}}{{Object Actions
|Name=pause
|Description=The event corresponding to the act of pausing a currently running service.
}}{{Object Actions
|Name=start
|Description=The event corresponding to the act of starting a new service.
}}{{Object Actions
|Name=stop
|Description=The event corresponding to the act of stopping a service that is currently running.
}}
}}</text>
            <sha1>619pyueff5ada3mvr8k5a27o5dg34wy</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Data Model/thread</title>
        <ns>0</ns>
        <id>817</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10935</id>
            <parentid>10932</parentid>
            <timestamp>2016-06-29T23:13:26Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="3127">{{Data Model Object
|Name=thread
|Description=A thread of execution is the smallest sequence of programmed instructions that can be managed independently by a scheduler, which is typically part of the operating system.  A thread is typically a component of a process.  Multiple threads can exist within the same process and share resources such as memory, while different processes do not share these resources.  The threads of a process share executable code instructions and context, such as the values of variables at any given moment.
|AllFields={{Object Fields
|Name=hostname
|Description=The hostname of the active host, without the domain.
|Format=HOST1
}}{{Object Fields
|Name=src_pid
|Description=The process ID of the process that created the thread.
|Format=6016
}}{{Object Fields
|Name=src_tid
|Description=The thread ID of the thread that created the event.
|Format=9012
}}{{Object Fields
|Name=stack_base
|Description=The base address of the thread’s stack.
|Format=0xfffff880081a9000
}}{{Object Fields
|Name=stack_limit
|Description=The limit of the thread’s stack.
|Format=0xfffff880081a3000
}}{{Object Fields
|Name=start_address
|Description=The memory address at which the thread's execution starts.
|Format=0xfffff880046dc3e0
}}{{Object Fields
|Name=subprocess_tag
|Description=Identifies the service if the thread is owned by a service; otherwise, it is listed as zero.
|Format=0
}}{{Object Fields
|Name=tgt_pid
|Description=The process ID of the process in which the new thread runs.
|Format=4
}}{{Object Fields
|Name=tgt_tid
|Description=The thread ID of the new thread that was created.
|Format=6964
}}{{Object Fields
|Name=user
|Description=The user context in which the source thread was running. May be a local, domain or SYSTEM user. Formatted as "&lt;DOMAIN&gt;\&lt;USER&gt;". Because threads are allowed to impersonate users, this may be different than the user context of the process.
|Format=HOST1\LOCALUSER
}}{{Object Fields
|Name=user_stack_base
|Description=The base address of the thread’s stack.
|Format=0x0
}}{{Object Fields
|Name=user_stack_limit
|Description=The limit of the thread’s stack.
|Format=0x0
}}{{Object Fields
|Name=start_function
|Description=The function at &lt;code&gt;start_address&lt;/code&gt;
|Format=LoadLibrary
}}{{Object Fields
|Name=start_module
|Description=The module in which start_address resides.
|Format=C:\windows\system32\ntdll.dll
}}{{Object Fields
|Name=start_module_name
|Description=The short name of the &lt;code&gt;start_module&lt;/code&gt;.
|Format=ntdll.dll
}}
|AllActions={{Object Actions
|Name=create
|Description=The event corresponding to the act of creating a new thread.
}}{{Object Actions
|Name=suspend
|Description=The event corresponding to the act of suspending a thread which is currently running.
}}{{Object Actions
|Name=terminate
|Description=The event corresponding to the act of terminating a running thread.
}}{{Object Actions
|Name=remote_create
|Description=A subset of thread create events that correspond to thread injection, that is, when a process creates a thread in another process. For a remote_create event the src_pid and tgt_pid are different.
}}
}}</text>
            <sha1>91dbq0thih1ri2edzkklywoowv34cgk</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Data Model/user session</title>
        <ns>0</ns>
        <id>818</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10942</id>
            <parentid>10883</parentid>
            <timestamp>2016-06-30T00:03:58Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2509">{{Data Model Object
|Name=user_session
|Description=User sessions are the user activities undertaken on the computer in the course of conducting standard user actions.
|AllFields={{Object Fields
|Name=dest_ip
|Description=The destination IP address of the user session. Only applicable to remote or RDP sessions.
|Format=192.168.1.5
}}{{Object Fields
|Name=dest_port
|Description=The destination port of the user session. Only applicable to remote or RDP sessions.
|Format=1900
}}{{Object Fields
|Name=hostname
|Description=The hostname of the host, without the domain.
|Format=HOST1
}}{{Object Fields
|Name=logon_id
|Description=A hex value corresponding to the session.  The logon id will persist until logout occurs.
|Format=0xf61f3
}}{{Object Fields
|Name=src_ip
|Description=The source IP address of the user session. Only applicable to remote or RDP sessions.
|Format=10.0.0.54
}}{{Object Fields
|Name=src_port
|Description=The source port of the user session. Only applicable to remote or RDP sessions.
|Format=50438
}}{{Object Fields
|Name=user
|Description=The user affiliated with the session. May be a local, domain or SYSTEM user.
|Format=HOST1\LOCALUSER
}}
|AllActions={{Object Actions
|Name=interactive
|Description=The event corresponding to the act of a user conducting a local login.  The logon session used requires a GUI.
}}{{Object Actions
|Name=local
|Description=The event corresponding to the act of a user logging on locally to the machine.
}}{{Object Actions
|Name=lock
|Description=The event corresponding to the act of a user locking a machine such that they are still logged into the machine but unable to access it without re-entering credentials, effectively entering the machine into a locked state.
}}{{Object Actions
|Name=login
|Description=The event corresponding to the act of a user logging into a machine.
}}{{Object Actions
|Name=logout
|Description=The event corresponding to the act of a user logging out of a machine.
}}{{Object Actions
|Name=rdp
|Description=The event corresponding to the act of a user accessing a machine remotely.
}}{{Object Actions
|Name=reconnect
|Description=The event corresponding to the act of a user reconnecting when an RDP session disconnects but the user is not logged off.
}}{{Object Actions
|Name=remote
|Description=The event corresponding to the act of a user conducting a network logon.
}}{{Object Actions
|Name=unlock
|Description=The event corresponding to the act of a user unlocking a machine currently in a locked state.
}}
}}</text>
            <sha1>02kv8joon9u7gmoo7leh29ybztfe503</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Category:Data Model</title>
        <ns>14</ns>
        <id>819</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10618</id>
            <parentid>7899</parentid>
            <timestamp>2016-04-19T14:41:42Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="85">__SHOWINDRILLDOWN__
This category uses the form {{#default_form: Data Model Object}}.</text>
            <sha1>bu7ywdrjva1dbrauwrp8tj87vndx1rt</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Form:Data Model Object</title>
        <ns>106</ns>
        <id>820</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>8363</id>
            <parentid>8060</parentid>
            <timestamp>2015-07-06T19:24:44Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1252">&lt;noinclude&gt;
{{#forminput:form=Data Model Object}}
&lt;/noinclude&gt;&lt;includeonly&gt;
{{{info|page name=Data Model/&lt;Data Model Object[Name]&gt;}}}

{{{for template|Data Model Object|label=Object}}}
{| class="formtable stackedform"
|- class="requiredField"
! Name
| {{{field|Name|input type=text|mandatory|size=100}}}
|-
! Description
| {{{field|Description|input type=textarea|size=100}}}
|-
! CybOX equivalent
| {{{field|CybOX Name|input type=text|size=100}}}
|}
{{{field|AllFields|hidden|holds template}}}  {{{field|AllActions|hidden|holds template}}}
{{{end template}}}

{{{for template|Object Fields|multiple|label=Fields|embed in field=Data Model Object[AllFields]}}}
{| class="formtable stackedform"
! Name
| {{{field|Name|input type=text|size=100}}}
|-
! Description
| {{{field|Description|input type=textarea|size=100}}}
|-
! Examples
| {{{field|Format|input type=textarea|size=100}}}
|}
{{{end template}}}

{{{for template|Object Actions|multiple|label=Actions|embed in field=Data Model Object[AllActions]}}}
{| class="formtable stackedform"
! Name
| {{{field|Name|input type=text|size=100}}}
|-
! Description
| {{{field|Description|input type=textarea|size=100}}}
|}
{{{end template}}}

{{{standard input|save}}} {{{standard input|cancel}}}
&lt;/includeonly&gt;</text>
            <sha1>cz1mdnenc3d2vjoe1t0us3pbh5o1kaj</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Data Model Object</title>
        <ns>10</ns>
        <id>821</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>8990</id>
            <parentid>8983</parentid>
            <timestamp>2016-01-08T22:32:59Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2308">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;__NOEDITSECTION__ {{DISPLAYTITLE: Data Model &amp;raquo;&amp;nbsp; {{{Name|}}}|}}{{#set: Has Object Name={{{Name|}}} }} {{#arraydefine: Fields
  |{{#arraymap: {{{AllFields|}}}
     |__NEXT__
     |$Section
     |{{#explode: $Section| __SUBNEXT__ | 0 }}
   }}
  |,
  |unique,sort=asc
}}{{#arraydefine: Actions
  |{{#arraymap: {{{AllActions|}}}
     |__NEXT__
     |$Section
     |{{#explode: $Section| __SUBNEXT__ | 0 }}
   }}
  |,
  |unique,sort=asc
}}{{#arrayprint: Actions
  |
  |$Action
  |{{#if: $Action
     |{{#arrayprint: Fields
        |
        |$Field
        |{{#if: $Field
           |{{#set: |Has Object Requirement={{{Name|}}}/$Action/$Field}}
         }}
      }}
   }}
}}
{{{Description|}}}
== Actions ==
{{#arraymap: {{{AllActions|}}}
  |__NEXT__
  |$Section
  |{{#if: $Section
     |=== [[Has Object Action::{{#explode: $Section| __SUBNEXT__ | 0 }}]] ===
{{#explode: $Section| __SUBNEXT__ | 1 }}
    }}
  |\n
}}
== Fields ==
{{#arraymap: {{{AllFields|}}}
  |__NEXT__
  |$Section
  |{{#if: $Section
     |=== [[Has Object Field::{{#explode: $Section| __SUBNEXT__ | 0 }}]] ===

{{#if: {{#explode: $Section| __SUBNEXT__ | 1 }}
| {{#explode: $Section| __SUBNEXT__ | 1 }}
}}
{{#if: {{#explode: $Section| __SUBNEXT__ | 2 }}
|{{#arraymap: {{#explode: $Section| __SUBNEXT__| 2 }}
|\n
|$Example
|* &lt;code&gt;$Example&lt;/code&gt;
|\n
|}}&lt;!-- end arraymap Example --&gt;
|}}&lt;!-- end if Example--&gt;
|}}&lt;!-- end if Section--&gt;
|\n
}}&lt;!-- end arraymap --&gt;
== Coverage Map ==
{{#arraydefine: Sensors|{{#ask: [[Category:Sensors]]|link=none|format=list}}|,
}}{{#arraymap: {{#arrayprint: Sensors}}
|,
|$Sensor
|{{#arraydefine: Coverage__$Sensor
|{{#ask: [[$Sensor]]|mainlabel=-|?Has Field Coverage=|format=list}}
|,
}} &lt;!-- end arraydefine --&gt;
}} &lt;!-- end arraymap --&gt;
&lt;table class="sensor_table wikitable"&gt;
&lt;tr&gt;&lt;th&gt;&lt;/th&gt;{{#arrayprint: Fields
|
|$Field
|&lt;th&gt;$Field&lt;/th&gt;
|
|}} &lt;!-- End Field --&gt;
&lt;/tr&gt;

{{#arrayprint: Actions
|
|$Action
|&lt;tr&gt;
&lt;th&gt;$Action&lt;/th&gt;
{{#arrayprint: Fields
|
|$Field
|&lt;td&gt;{{#arrayprint: Sensors
|
|$Sensor
|{{#arraysearch: Coverage__$Sensor
|{{{Name|}}}/$Action/$Field
|0
|[[$Sensor]]&lt;br/&gt;
|}} &lt;!-- end arraysearch --&gt;
}} &lt;!-- end arrayprint --&gt;
&lt;/td&gt;
|}} &lt;!-- End Field --&gt;
&lt;/tr&gt;
|
|}} &lt;!-- End Action --&gt;
&lt;/table&gt;
[[Category:Data Model]]&lt;/includeonly&gt;</text>
            <sha1>cxk8sewkq96f35q99xrtqcko8djhi9r</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Object Actions</title>
        <ns>10</ns>
        <id>822</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7907</id>
            <parentid>7906</parentid>
            <timestamp>2015-04-28T18:06:53Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="115">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;{{{Name|}}}__SUBNEXT__{{{Description|}}}__NEXT__&lt;/includeonly&gt;</text>
            <sha1>ly47jcors7cjsi28gmdx69eyw4ny8rm</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Object Fields</title>
        <ns>10</ns>
        <id>823</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>7942</id>
            <parentid>7941</parentid>
            <timestamp>2015-04-28T20:19:28Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="139">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;{{{Name|}}}__SUBNEXT__{{{Description|}}}__SUBNEXT__{{{Format|}}}__NEXT__&lt;/includeonly&gt;</text>
            <sha1>fngd214ixi1qauz137dujixfmf5vksj</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>MediaWiki:Copyright</title>
        <ns>8</ns>
        <id>825</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>11002</id>
            <parentid>10727</parentid>
            <timestamp>2016-07-13T18:47:27Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="402">&lt;strong&gt;NOTICE&lt;/strong&gt;&lt;br&gt;
This software was produced for the U. S. Government
under Contract No. 07-CECOM-MOIE-FY15, and is
subject to the Rights in Noncommercial Computer Software
and Noncommercial Computer Software Documentation
&lt;br/&gt; Clause 252.227-7014 (FEB 2012)
&lt;br/&gt;
&lt;br/&gt; &amp;copy; 2016 The MITRE Corporation. All Rights Reserved. ATT&amp;CK and ATT&amp;CK Matrix are trademarks of The MITRE Corporation</text>
            <sha1>12pja78rtrcaaqxrwivakmkpafn5ma0</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2015-04-001</title>
        <ns>0</ns>
        <id>826</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10779</id>
            <parentid>10634</parentid>
            <timestamp>2016-04-22T17:03:26Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2297">{{Analytic
|MaximumInstantiationId=2
|ShortSummary=Remotely Scheduled Tasks via AT
|Hypothesis=When AT.exe is used to remotely {{Technique Link|T1053|schedule tasks}}, Windows uses named pipes over [[wikipedia:Server Message Block|SMB]] to communicate with the API on the remote machine. After authentication over SMB, the Named Pipe "ATSVC" is opened, over which the JobAdd function is called. On the remote host, the job files are created by the Task Scheduler and follow the convention &lt;code&gt;C:\Windows\System32\AT&amp;lt;job_id&amp;gt;&lt;/code&gt;. Unlike {{Analytic Link|CAR-2013-05-004}}, this analytic specifically focuses on uses of AT that can be detected between hosts, indicating remotely gained [[attack:Execution|execution]].
|SubmissionDate=2015/04/29
|AnalyticType=TTP,
|InformationDomain=Host, Network
|HostSubtypes=File, API,
|NetworkSubtypes=PCAP,
|NetworkProtocols=SMB,
|AnalyticNotes=This pipe activity could be discovered with a network decoder, such as that in wireshark, that can inspect SMB traffic to identify the use of pipes. It could also be detected by looking for raw packet capture streams or from a custom sensor on the host that hooks the appropriate API functions. If no network or API level of visibility is possible, this traffic may inferred by looking at SMB connections over 445/tcp followed by the creation of files matching the pattern &lt;code&gt;C:\Windows\System32\AT&lt;job_id&gt;&lt;/code&gt;.
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1053
|Tactics=Execution,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Description=To detect AT via network traffic, a sensor is needed that has the ability to extract and decode PCAP information. Specifically, it needs to properly decode SMB and the functions that are implemented over it via NamedPipes. If a sensor meets these criteria, then the PCAP data needs to search for instances of the command &lt;code&gt;JobAdd&lt;/code&gt; over the pipe &lt;code&gt;ATSVC&lt;/code&gt;, which is all implemented over Windows SMB 445/tcp.
|Example Query=flows = search Flow:Message
at_proto = filter flows where (dest_port == 445 and proto_info.pipe == "ATSVC")
at_create = filter flows where (proto_info.function == "JobAdd")

output at_create
|Required Fields=flow/message/proto_info,
}}
|UnitTests=
|AnalyticInstantiations=
}}</text>
            <sha1>oz2r96ohtvdchz65k5m61yagbqd9cyk</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2015-04-002</title>
        <ns>0</ns>
        <id>827</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10780</id>
            <parentid>10714</parentid>
            <timestamp>2016-04-22T17:07:08Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2840">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=Remotely Scheduled Tasks via Schtasks
|Hypothesis=An adversary can [[attack:Lateral Movement|move laterally]] using the &lt;code&gt;schtasks&lt;/code&gt; command to remotely {{Technique Link|T1053|schedule tasks}}. Although these events can be detected with command line analytics {{Analytic Link|CAR-2013-08-001}}, it is possible for an adversary to use the API directly, via the Task Scheduler GUI or with a scripting language such as {{Technique Link|T1086|PowerShell}}. In this cases, an additional source of data becomes necessary to detect adversarial behavior.

When scheduled tasks are created remotely, Windows uses RPC (135/tcp) to communicate with the Task Scheduler on the remote machine. Once an RPC connection is established ({{Analytic Link|CAR-2014-05-001}}), the client communicates with the Scheduled Tasks endpoint, which runs within the service group netsvcs. With packet capture and the right packet decoders or byte-stream based signatures, remote invocations of these functions can be identified.
|SubmissionDate=2015/04/29
|AnalyticType=TTP,
|InformationDomain=Host, Network
|HostSubtypes=Network, API, RPC,
|NetworkSubtypes=PCAP,
|NetworkProtocols=RPC,
|AnalyticNotes=Certain strings can be identifiers of the schtasks, by looking up the interface UUID of ITaskSchedulerService in different formats
* UUID &lt;code&gt;86d35949-83c9-4044-b424-db363231fd0c&lt;/code&gt; (decoded)
* Hex &lt;code&gt;49 59 d3 86 c9 83 44 40 b4 24 db 36 32 31 fd 0c&lt;/code&gt; (raw)
* ASCII&lt;code&gt;IYD@$621&lt;/code&gt; (printable bytes only)

This identifier is present three times during the RPC request phase. Any sensor that has access to the byte code as raw, decoded, or ASCII could implement this analytic.
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1053
|Tactics=Execution,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Description=Look for RPC traffic after being mapped, which implies a [[Data Model/flow#dest_port|destination port]] of at least 49152. If network inspection is available via packet captures or a [[wikipedia:Intrusion_detection_system#Network_Intrusion_Detection_Systems|NIDS]], then traffic through the ITaskSchedulerService interface can be detected.

Microsoft has a [https://msdn.microsoft.com/en-us/library/cc248435.aspx list] of the possible methods that are implemented for the ITaskSchedulerService interface, which may be useful in differentiating read and query operations from creations and modifications.
|Example Query=flows = search Flow:Message
schtasks_rpc = filter flows where (
    src_port &gt;= 49152 and dest_port &gt;= 49152 and
    proto_info.rpc_interface == "ITaskSchedulerService"
)

output schtasks_rpc
|Required Fields=flow/message/dest_port, flow/message/src_port, flow/message/proto_info,
}}
|UnitTests=
|AnalyticInstantiations=
}}</text>
            <sha1>jvnnnv3nhn43oczdfpfgzts4zzsuebt</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Output Data Description</title>
        <ns>102</ns>
        <id>828</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>8003</id>
            <timestamp>2015-04-29T21:16:25Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:AnalyticDisclaimer</title>
        <ns>10</ns>
        <id>840</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10726</id>
            <parentid>10624</parentid>
            <timestamp>2016-04-19T15:05:18Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="227">''This analytic is the {{#ifeq: {{{1|}}}|MITRE/NSA|joint}} intellectual property of {{#switch: {{{1|MITRE}}}
|MITRE=The MITRE Corporation
|NSA=The National Security Agency
|MITRE/NSA=MITRE and the National Security Agency
}}.''</text>
            <sha1>mwvmu46bxfy0lcu0fr0vz2yrm3cpjqi</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Website</title>
        <ns>102</ns>
        <id>842</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>8141</id>
            <parentid>8139</parentid>
            <timestamp>2015-05-04T14:57:24Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Other Developers</title>
        <ns>102</ns>
        <id>849</id>
        <redirect xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" title="Property:Has Other Developer"/>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>8212</id>
            <timestamp>2015-05-05T18:54:02Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="42">#REDIRECT [[Property:Has Other Developer]]</text>
            <sha1>250j292h2vda296lsnu0ne5mmrsucmi</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Developer</title>
        <ns>102</ns>
        <id>851</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>8221</id>
            <timestamp>2015-05-05T19:10:19Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Help:Sensor Suites</title>
        <ns>12</ns>
        <id>860</id>
        <redirect xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" title="Help:Glossary"/>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>8297</id>
            <timestamp>2015-05-15T16:56:27Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="41">#REDIRECT [[Help:Glossary#Sensor_Suites]]</text>
            <sha1>b8zs91gspwia2r55v5stqijjrcei6uy</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Data Model with ATTACK</title>
        <ns>0</ns>
        <id>865</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10867</id>
            <parentid>8842</parentid>
            <timestamp>2016-06-22T18:56:53Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1675">__NOEDITSECTION__{{DISPLAYTITLE: Data Model with ATT&amp;CK}}
{{#arraymap: Complete,Partial
|,
|$Coverage
|
{{#arraydefine: $Coverage_Analytics
|{{#ask: [[Concept:AllATTACKReferences]] [[Has ATTACK Coverage::$Coverage]]
|mainlabel=-
|?Is ATTACK Reference For=
|limit=5000
|link=none
}}&lt;!-- end ask --&gt;
|,
|sort=asc,unique
}}&lt;!-- end arraydefine --&gt;

{{#arraydefine: $Coverage_Field
|{{#ask: [[Category:Analytics]] [[{{#arrayprint: $Coverage_Analytics|{{!!}}}}]]
|mainlabel=-
|?Has Required Field=
|limit=5000
}}&lt;!-- end ask --&gt;
|,
|sort=asc,unique
}}&lt;!-- end arraydefine --&gt;
}}&lt;!-- end arraymap --&gt;
{{#arraydiff: Partial_Field|Partial_Field|Complete_Field}}
{{#arraymap: {{#ask: [[Category:Data Model]]|mainlabel=-|?Has Object Name=|format=list|sort=Has Object Name}}
|,
|$Object
|&lt;nowiki&gt;
&lt;/nowiki&gt;
=== [[Data Model/$Object|$Object]] ===
{{#arraydefine: Fields|{{#ask: [[Has Object Name::$Object]]|mainlabel=-|?Has Object Field=|format=list}}|,|sort=asc}}
{{#arraydefine: Actions|{{#ask: [[Has Object Name::$Object]]|mainlabel=-|?Has Object Action=|format=list}}|,|sort=asc}}
&lt;table class="sensor_table wikitable"&gt;
&lt;tr&gt;&lt;th&gt;&lt;/th&gt;{{#arrayprint: Fields
|
|$Field
|&lt;th&gt;[[Data Model/$Object#$Field|$Field]]&lt;/th&gt;
|
|}} &lt;!-- End Field --&gt;
&lt;/tr&gt;

{{#arrayprint: Actions
|
|$Action
|&lt;tr&gt;
&lt;th&gt;[[Data Model/$Object#$Action|$Action]]&lt;/th&gt;
{{#arrayprint: Fields
|
|$Field
|&lt;td style="{{#arraymap: Partial,Complete
|,
|$Coverage
|{{#arraysearch: $Coverage_Field
|$Object/$Action/$Field
|0
|background:{{#ifeq:$Coverage|Partial|yellow|green}}
|}} &lt;!-- end arraysearch --&gt;
|}} &lt;!-- end arraymap --&gt;
"&gt;&lt;/td&gt;
|}} &lt;!-- End Field --&gt;
&lt;/tr&gt;
|
|}} &lt;!-- End Action --&gt;
&lt;/table&gt;
|
}}&lt;!-- End Object --&gt;</text>
            <sha1>iazspjmts0fp44yri0la187i1hbl4kv</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Concept:AllATTACKReferences</title>
        <ns>108</ns>
        <id>866</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>8334</id>
            <timestamp>2015-05-22T20:50:45Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="126">{{#concept: [[Is ATTACK Reference For::+]]
| All ATTACK References in CAR. These are subobjects of [[:Category:Analytics]] 
}}</text>
            <sha1>ren0zsqxlvhz0v8x1tw0y9n7yosf0hs</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:ATTACK URL</title>
        <ns>10</ns>
        <id>867</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>8855</id>
            <parentid>8824</parentid>
            <timestamp>2015-10-16T21:09:30Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="46">http://attack.wiki.local.wmftest.net:8080/wiki</text>
            <sha1>hm2jsg5yjlta9l987f00o9xf2pykage</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2015-07-001</title>
        <ns>0</ns>
        <id>868</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10980</id>
            <parentid>10781</parentid>
            <timestamp>2016-06-30T17:38:36Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2202">{{Analytic
|MaximumInstantiationId=2
|ShortSummary=All Logins Since Last Boot
|Hypothesis=Once a credential dumper like [[attack:Software/S0002|mimikatz]] runs, every user logged on since boot is potentially compromised, because the credentials were accessed via the memory of &lt;code&gt;lsass.exe&lt;/code&gt;. When such an event occurs, this analytic will give the forensic context to identify compromised users. Those users could potentially be used in later events for additional logons.
|SubmissionDate=2015/07/17
|AnalyticType=Forensic,
|InformationDomain=Host
|HostSubtypes=Login,
|OutputDataDescription=A list of hostnames and the users that had been logged into the system at some point after to the system's last restart.
|AnalyticNotes=The time field indicates the first and last time a system reported a user logged into a given system.  This means that activity could be intermittent between the times given and should not be considered a duration.
|IntellectualProperty=MITRE
|ATTACK References=
|Pseudocode={{Analytic Pseudocode
|Description=This analytic requires some means of accessing system logs to get records of boot times for hosts (in the example as &lt;code&gt;SystemLogs:Bootup&lt;/code&gt;. It looks for the latest boot time to happen before some user-defined point in time. Once the boot time is identified, all of the important user login events can be gathered to create a list of potentially compromised accounts. This could be critical for identifying steps an adversary could have taken after stealing credentials with a tool that operates like [[attack:Software/S0002|mimikatz]].
|Example Query=input target_host
input event_time

all_boots = search SystemLogs:BootUp where (hostname == target_host and time &lt; event_time)
boot_time = max(all_boots.time)

user_logins = search UserSession:Login
host_logins = filter user_logins where (hostname == target_host and boot_time &lt; time &lt; event_time)
compromised_accounts = unique(user_logins.user)

output users
|Required Fields=user_session/login/user,
}}
|UnitTests=
|AnalyticInstantiations=
|AnalyticTypes=Situational Awareness,
|Instantiation_Pipeline Predecessor=OP-Transact-0012
|Instantiation_Output Fields=User, Activity_Times, Activity,
}}</text>
            <sha1>siks9a4wplv8bu3eeby31syb2s8ttc6</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Module:String/doc</title>
        <ns>828</ns>
        <id>889</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>8606</id>
            <timestamp>2015-08-18T17:11:52Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="7310">This module is intended to provide access to basic string functions.

Most of the functions provided here can be invoked with named parameters, unnamed parameters, or a mixture.  If named parameters are used, Mediawiki will automatically remove any leading or trailing whitespace from the parameter. Depending on the intended use, it may be advantageous to either preserve or remove such whitespace.

== Global options ==

; ignore_errors
: If set to 'true' or 1, any error condition will result in an empty string being returned rather than an error message.
; error_category
: If an error occurs, specifies the name of a category to include with the error message.  The default category is [[:Category:Errors reported by Module String]].
; no_category
: If set to 'true' or 1, no category will be added if an error is generated.

Unit tests for this module are available at [[Module:String/testcases]].

== len ==

This function returns the length of the target string.

Usage:

: &lt;code&gt;&lt;nowiki&gt;{{#invoke:&lt;/nowiki&gt;String|len|''target_string''}}&lt;/code&gt;

OR

: &lt;code&gt;&lt;nowiki&gt;{{#invoke:&lt;/nowiki&gt;String|len|s= ''target_string'' }}&lt;/code&gt;

Parameters:

; s
: The string whose length to report

== sub ==

: This function returns a substring of the target string at specified indices.

Usage:

: &lt;code&gt;&lt;nowiki&gt;{{#invoke:&lt;/nowiki&gt;String|sub|''target_string''|''start_index''|''end_index''}}&lt;/code&gt;

OR

: &lt;code&gt;&lt;nowiki&gt;{{#invoke:&lt;/nowiki&gt;String|sub|s= ''target_string'' |i= ''start_index'' |j= ''end_index'' }}&lt;/code&gt;

Parameters:

; s
: The string to return a subset of
; i
: The first index of the substring to return, defaults to 1.
; j
: The last index of the string to return, defaults to the last character.

The first character of the string is assigned an index of 1.  If either i or j is a negative value, it is interpreted the same as selecting a character by counting from the end of the string.  Hence, a value of -1 is the same as selecting the last character of the string.

If the requested indices are out of range for the given string, an error is reported.

== sublength ==

This function implements the features of {{tl|Str sub old}} and is kept in order to maintain these older templates.

== match ==

This function returns a substring from the source string that matches a specified pattern.

Usage:

: &lt;code&gt;&lt;nowiki&gt;{{#invoke:&lt;/nowiki&gt;String|match|''source_string''|''pattern_string''|''start_index''|''match_number''|''plain_flag''|''nomatch_output''}}&lt;/code&gt;

OR

: &lt;code&gt;&lt;nowiki&gt;{{#invoke:&lt;/nowiki&gt;String|match|s= ''source_string'' |pattern= ''pattern_string'' |start= ''start_index''|match= ''match_number''|plain= ''plain_flag'' |nomatch= ''nomatch_output'' }}&lt;/code&gt;

Parameters:

; s
: The string to search
; pattern
: The pattern or string to find within the string
; start
: The index within the source string to start the search.  The first character of the string has index 1.  Defaults to 1.
; match
: In some cases it may be possible to make multiple matches on a single string.  This specifies which match to return, where the first match is match= 1.  If a negative number is specified then a match is returned counting from the last match.  Hence match = -1 is the same as requesting the last match.  Defaults to 1.
; plain
: A flag indicating that the pattern should be understood as plain text.  Defaults to false.
; nomatch
: If no match is found, output the "nomatch" value rather than an error.

If the match_number or start_index are out of range for the string being queried, then this function generates an error.  An error is also generated if no match is found.
If one adds the parameter ignore_errors=true, then the error will be suppressed and an empty string will be returned on any failure.

For information on constructing [[w:en:Lua (programming language)|Lua]] patterns, a form of [[w:en:regular expression|regular expression]], see:

* [http://www.lua.org/manual/5.1/manual.html#5.4.1 Lua reference: Patterns] (as of version 5.1)
* [[mw:Extension:Scribunto/Lua_reference_manual#Patterns|Scribunto patterns]]
* [[mw:Extension:Scribunto/Lua_reference_manual#Ustring_patterns|Scribunto Unicode string patterns]]

== pos ==

This function returns a single character from the target string at position pos.

Usage:

: &lt;code&gt;&lt;nowiki&gt;{{#invoke:&lt;/nowiki&gt;String|pos|''target_string''|''index_value''}}&lt;/code&gt;

OR

: &lt;code&gt;&lt;nowiki&gt;{{#invoke:&lt;/nowiki&gt;String|pos|target= ''target_string'' |pos= ''index_value'' }}&lt;/code&gt;

Parameters:

; target
: The string to search
; pos
: The index for the character to return

The first character has an index value of 1.

If one requests a negative value, this function will select a character by counting backwards
from the end of the string.  In other words pos = -1 is the same as asking for the last character.

A requested value of zero, or a value greater than the length of the string returns an error.

== find ==

This function allows one to search for a target string or pattern within another string.

Usage:

: &lt;code&gt;&lt;nowiki&gt;{{#invoke:&lt;/nowiki&gt;String|find|''source_str''|''target_string''|''start_index''|''plain_flag''}}&lt;/code&gt;

OR

: &lt;code&gt;&lt;nowiki&gt;{{#invoke:&lt;/nowiki&gt;String|find|source= ''source_str'' |target= ''target_str'' |start= ''start_index''|plain= ''plain_flag'' }}&lt;/code&gt;

Parameters:

; source
: The string to search
; target
: The string or pattern to find within source
; start
: The index within the source string to start the search, defaults to 1
; plain
: Boolean flag indicating that target should be understood as plain text and not as a [[w:en:Lua (programming language)|Lua]]-style [[w:en:regular expression|regular expression]], defaults to true

This function returns the first index &gt;= "start" where "target" can be found within "source".  Indices are 1-based.  If "target" is not found, then this function returns 0.  If either "source" or "target" are missing / empty, this function also returns 0.

This function should be safe for UTF-8 strings.

== replace ==

This function allows one to replace a target string or pattern within another string.

Usage:

: &lt;code&gt;&lt;nowiki&gt;{{#invoke:&lt;/nowiki&gt;String|replace|''source_str''|''pattern_string''|''replace_string''|''replacement_count''|''plain_flag''}}&lt;/code&gt;

OR

: &lt;code&gt;&lt;nowiki&gt;{{#invoke:&lt;/nowiki&gt;String|replace|source= ''source_string'' |pattern= ''pattern_string''|replace= ''replace_string'' |count= ''replacement_count'' |plain= ''plain_flag'' }}&lt;/code&gt;

Parameters:

; source
: The string to search
; pattern
: The string or pattern to find within source
; replace
: The replacement text
; count
: The number of occurrences to replace; defaults to all
; plain
: Boolean flag indicating that pattern should be understood as plain text and not as a [[mw:Extension:Scribunto/Lua reference manual#Ustring patterns|Scribunto ustring pattern]] (a unicode-friendly [[w:en:Lua (programming language)|Lua]]-style [[w:en:regular expression|regular expression]]); defaults to true

== rep ==

Repeats a string ''n'' times. A simple function to pipe string.rep to templates.
Usage:

: &lt;code&gt;&lt;nowiki&gt;{{#invoke:&lt;/nowiki&gt;String|rep|''source''|''count''}}&lt;/code&gt;

Parameters:

; source
: The string to repeat
; count
: The number of repetitions.

Example &lt;code&gt;&lt;nowiki&gt;{{#invoke:String|rep|hello|3}}&lt;/nowiki&gt;&lt;/code&gt; gives {{#invoke:String|rep|hello|3}}</text>
            <sha1>pvtnpj23e6os9c7uqq956lets16aakr</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Data Model</title>
        <ns>0</ns>
        <id>900</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>11008</id>
            <parentid>11007</parentid>
            <timestamp>2016-07-15T18:23:05Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="985">__NOEDITSECTION__
{{Article Link|Help:Data Model}}
[[Data Model with ATTACK|Compare]] the data model's use in analytics that map to ATT&amp;CK.
[[Data Model with Sensors|Compare]] the data model's use for different sensors.

&lt;table class="wikitable"&gt;
&lt;tr&gt;&lt;th&gt;Object&lt;/th&gt;&lt;th&gt;Action&lt;/th&gt;&lt;th&gt;Field&lt;/th&gt;&lt;/tr&gt;
{{#arraymap: {{#ask: [[Category:Data Model]]|mainlabel=-|?Has Object Name=|format=list|sort=Has Object Name}}
|,
|$Object
|{{#arraydefine: Fields|{{#ask: [[Has Object Name::$Object]]|mainlabel=-|?Has Object Field=|format=list}}|,|sort=asc}}
{{#arraydefine: Actions|{{#ask: [[Has Object Name::$Object]]|mainlabel=-|?Has Object Action=|format=list}}|,|sort=asc}}
&lt;tr&gt;&lt;td&gt;[[Data Model/$Object|$Object]]&lt;/td&gt;&lt;td&gt;{{#arrayprint: Actions
|&lt;br/&gt;
|$Action
|{{#ifeq: $Action|.|.|[[Data Model/$Object#$Action|$Action]]}}
}} &lt;!-- End Action --&gt;
&lt;/td&gt;&lt;td&gt;{{#arrayprint: Fields 
|&lt;br/&gt;
|$Field
|[[Data Model/$Object#$Field|$Field]]
}} &lt;!-- End Field --&gt;
&lt;/td&gt;&lt;/tr&gt; 
|}}&lt;!-- End Object --&gt;
&lt;/table&gt;
</text>
            <sha1>0avndlre6ywrhel3gg7qu8bkycm8z9e</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Test Configuration</title>
        <ns>102</ns>
        <id>902</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>8913</id>
            <parentid>8912</parentid>
            <timestamp>2015-12-18T16:33:26Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Test Requirement</title>
        <ns>102</ns>
        <id>903</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>8915</id>
            <parentid>8914</parentid>
            <timestamp>2015-12-18T16:33:26Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Test Case</title>
        <ns>102</ns>
        <id>904</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>8917</id>
            <parentid>8916</parentid>
            <timestamp>2015-12-18T16:33:26Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="49">This is a property of type [[Has type::Boolean]].</text>
            <sha1>8vxoynet9x13eclvtak49ni4bdl8imu</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Analytic Unit Test</title>
        <ns>10</ns>
        <id>905</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>8923</id>
            <parentid>8922</parentid>
            <timestamp>2015-12-18T16:33:29Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="558">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;{{#set: Has Test Case=t}}{{#set_internal: Is Unit Test Of
|Has Test Requirement#list={{#arraymap:{{{Requirements|}}}|,|$|$|,|}}
|Has Test Configuration#list={{#arraymap:{{{Configurations|}}}|,|$|$|,|}}
|Has Description={{{Description|}}}
}}=== Test Case ===
==== Requirements ====
{{#arraymap:{{{Requirements|}}}|,|$|* $|\n|}}

==== Configurations ====
{{#arraymap:{{{Configurations|}}}|,|$|* $|\n|}}

==== Description ====
{{{Description|}}}

==== Command ====
{{#tag: pre|{{{Command|}}}|}}&lt;/includeonly&gt;</text>
            <sha1>f7l1uzob293cg42te4aphtbvss79o6a</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Sysmon (3.2)</title>
        <ns>0</ns>
        <id>906</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10926</id>
            <parentid>10900</parentid>
            <timestamp>2016-06-29T22:34:25Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="20033">{{Sensor
|Name=Sysmon
|Manufacturer=Microsoft Corporation
|Release Date=2015/01/04
|Version=3.2
|Website=https://technet.microsoft.com/en-us/sysinternals/sysmon
|Description=Sysmon is a freely available program from Microsoft that is provided as part of the Windows Sysinternals suite of tools. It collects system information while running in the background and supports storing it in the Windows Event Log.
|Techniques=T1099
|Fields={{Extract Fields
|Object#driver=Yes
|Requirement#driver/load/base_address=No
|Requirement#driver/load/fqdn=Yes
|Requirement#driver/load/hostname=Yes
|Requirement#driver/load/image_path=Yes
|Requirement#driver/load/md5_hash=Yes
|Requirement#driver/load/module_name=Yes
|Requirement#driver/load/sha1_hash=Yes
|Requirement#driver/load/sha256_hash=Yes
|Requirement#driver/load/signer=No
|Requirement#driver/unload/base_address=No
|Requirement#driver/unload/fqdn=No
|Requirement#driver/unload/hostname=No
|Requirement#driver/unload/image_path=No
|Requirement#driver/unload/md5_hash=No
|Requirement#driver/unload/module_name=No
|Requirement#driver/unload/sha1_hash=No
|Requirement#driver/unload/sha256_hash=No
|Requirement#driver/unload/signer=No
|Object#file=Yes
|Alias#file/creation_time=CreationUtcTime
|Alias#file/file_name=TargetFilename
|Alias#file/hostname=ComputerName
|Alias#file/image_path=Image
|Alias#file/pid=ProcessId
|Alias#file/previous_creation_time=PreviousCreationUtcTime
|Alias#file/user=User
|Requirement#file/create/company=No
|Requirement#file/create/creation_time=No
|Requirement#file/create/file_name=No
|Requirement#file/create/file_path=No
|Requirement#file/create/fqdn=No
|Requirement#file/create/hostname=No
|Requirement#file/create/image_path=No
|Requirement#file/create/md5_hash=No
|Requirement#file/create/pid=No
|Requirement#file/create/ppid=No
|Requirement#file/create/previous_creation_time=No
|Requirement#file/create/sha1_hash=No
|Requirement#file/create/sha256_hash=No
|Requirement#file/create/signer=No
|Requirement#file/create/user=No
|Requirement#file/delete/company=No
|Requirement#file/delete/creation_time=No
|Requirement#file/delete/file_name=No
|Requirement#file/delete/file_path=No
|Requirement#file/delete/fqdn=No
|Requirement#file/delete/hostname=No
|Requirement#file/delete/image_path=No
|Requirement#file/delete/md5_hash=No
|Requirement#file/delete/pid=No
|Requirement#file/delete/ppid=No
|Requirement#file/delete/previous_creation_time=No
|Requirement#file/delete/sha1_hash=No
|Requirement#file/delete/sha256_hash=No
|Requirement#file/delete/signer=No
|Requirement#file/delete/user=No
|Requirement#file/modify/company=No
|Requirement#file/modify/creation_time=No
|Requirement#file/modify/file_name=No
|Requirement#file/modify/file_path=No
|Requirement#file/modify/fqdn=No
|Requirement#file/modify/hostname=No
|Requirement#file/modify/image_path=No
|Requirement#file/modify/md5_hash=No
|Requirement#file/modify/pid=No
|Requirement#file/modify/ppid=No
|Requirement#file/modify/previous_creation_time=No
|Requirement#file/modify/sha1_hash=No
|Requirement#file/modify/sha256_hash=No
|Requirement#file/modify/signer=No
|Requirement#file/modify/user=No
|Requirement#file/read/company=No
|Requirement#file/read/creation_time=No
|Requirement#file/read/file_name=No
|Requirement#file/read/file_path=No
|Requirement#file/read/fqdn=No
|Requirement#file/read/hostname=No
|Requirement#file/read/image_path=No
|Requirement#file/read/md5_hash=No
|Requirement#file/read/pid=No
|Requirement#file/read/ppid=No
|Requirement#file/read/previous_creation_time=No
|Requirement#file/read/sha1_hash=No
|Requirement#file/read/sha256_hash=No
|Requirement#file/read/signer=No
|Requirement#file/read/user=No
|Requirement#file/timestomp/company=No
|Requirement#file/timestomp/creation_time=Yes
|Requirement#file/timestomp/file_name=Yes
|Requirement#file/timestomp/file_path=No
|Requirement#file/timestomp/fqdn=No
|Requirement#file/timestomp/hostname=Yes
|Requirement#file/timestomp/image_path=Yes
|Requirement#file/timestomp/md5_hash=No
|Requirement#file/timestomp/pid=Yes
|Requirement#file/timestomp/ppid=No
|Requirement#file/timestomp/previous_creation_time=Yes
|Requirement#file/timestomp/sha1_hash=No
|Requirement#file/timestomp/sha256_hash=No
|Requirement#file/timestomp/signer=No
|Requirement#file/timestomp/user=Yes
|Requirement#file/write/company=No
|Requirement#file/write/creation_time=No
|Requirement#file/write/file_name=No
|Requirement#file/write/file_path=No
|Requirement#file/write/fqdn=No
|Requirement#file/write/hostname=No
|Requirement#file/write/image_path=No
|Requirement#file/write/md5_hash=No
|Requirement#file/write/pid=No
|Requirement#file/write/ppid=No
|Requirement#file/write/previous_creation_time=No
|Requirement#file/write/sha1_hash=No
|Requirement#file/write/sha256_hash=No
|Requirement#file/write/signer=No
|Requirement#file/write/user=No
|Object#flow=Yes
|Alias#flow/dest_ip=DestinationIP
|Alias#flow/dest_port=DestinationPort
|Alias#flow/exe=Image
|Alias#flow/hostname=ComputerName
|Alias#flow/image_path=Image
|Alias#flow/pid=ProcessId
|Alias#flow/protocol=Protocol
|Alias#flow/src_ip=SourceIP
|Alias#flow/src_port=SourcePort
|Alias#flow/start_time=UtcTime
|Alias#flow/user=User
|Requirement#flow/end/content=No
|Requirement#flow/end/dest_fqdn=No
|Requirement#flow/end/dest_hostname=No
|Requirement#flow/end/dest_ip=No
|Requirement#flow/end/dest_port=No
|Requirement#flow/end/end_time=No
|Requirement#flow/end/exe=No
|Requirement#flow/end/flags=No
|Requirement#flow/end/fqdn=No
|Requirement#flow/end/hostname=No
|Requirement#flow/end/image_path=No
|Requirement#flow/end/packet_count=No
|Requirement#flow/end/pid=No
|Requirement#flow/end/ppid=No
|Requirement#flow/end/proto_info=No
|Requirement#flow/end/protocol=No
|Requirement#flow/end/src_fqdn=No
|Requirement#flow/end/src_hostname=No
|Requirement#flow/end/src_ip=No
|Requirement#flow/end/src_port=No
|Requirement#flow/end/start_time=No
|Requirement#flow/end/user=No
|Requirement#flow/message/content=No
|Requirement#flow/message/dest_fqdn=No
|Requirement#flow/message/dest_hostname=No
|Requirement#flow/message/dest_ip=No
|Requirement#flow/message/dest_port=No
|Requirement#flow/message/end_time=No
|Requirement#flow/message/exe=No
|Requirement#flow/message/flags=No
|Requirement#flow/message/fqdn=No
|Requirement#flow/message/hostname=No
|Requirement#flow/message/image_path=No
|Requirement#flow/message/packet_count=No
|Requirement#flow/message/pid=No
|Requirement#flow/message/ppid=No
|Requirement#flow/message/proto_info=No
|Requirement#flow/message/protocol=No
|Requirement#flow/message/src_fqdn=No
|Requirement#flow/message/src_hostname=No
|Requirement#flow/message/src_ip=No
|Requirement#flow/message/src_port=No
|Requirement#flow/message/start_time=No
|Requirement#flow/message/user=No
|Requirement#flow/start/content=No
|Requirement#flow/start/dest_fqdn=No
|Requirement#flow/start/dest_hostname=No
|Requirement#flow/start/dest_ip=Yes
|Requirement#flow/start/dest_port=Yes
|Requirement#flow/start/end_time=No
|Requirement#flow/start/exe=Yes
|Requirement#flow/start/flags=No
|Requirement#flow/start/fqdn=No
|Requirement#flow/start/hostname=Yes
|Requirement#flow/start/image_path=Yes
|Requirement#flow/start/packet_count=No
|Requirement#flow/start/pid=Yes
|Requirement#flow/start/ppid=No
|Requirement#flow/start/proto_info=No
|Requirement#flow/start/protocol=Yes
|Requirement#flow/start/src_fqdn=No
|Requirement#flow/start/src_hostname=No
|Requirement#flow/start/src_ip=Yes
|Requirement#flow/start/src_port=Yes
|Requirement#flow/start/start_time=Yes
|Requirement#flow/start/user=Yes
|Object#keyboard=No
|Requirement#keyboard/kernel_keypress/hostname=No
|Requirement#keyboard/user_keypress/hostname=No
|Object#module=Yes
|Alias#module/fqdn=ComputerName
|Alias#module/hostname=ComputerName
|Alias#module/image_path=Image
|Alias#module/md5_hash=Hash
|Alias#module/module_name=ImageLoaded
|Alias#module/pid=ProcessId
|Alias#module/sha1_hash=Hash
|Alias#module/sha256_hash=Hash
|Requirement#module/load/base_address=No
|Requirement#module/load/fqdn=Yes
|Requirement#module/load/hostname=Yes
|Requirement#module/load/image_path=Yes
|Requirement#module/load/md5_hash=Yes
|Requirement#module/load/module_name=Yes
|Requirement#module/load/module_path=No
|Requirement#module/load/pid=Yes
|Requirement#module/load/sha1_hash=Yes
|Requirement#module/load/sha256_hash=Yes
|Requirement#module/load/signer=No
|Requirement#module/load/tid=No
|Requirement#module/unload/base_address=No
|Requirement#module/unload/fqdn=No
|Requirement#module/unload/hostname=No
|Requirement#module/unload/image_path=No
|Requirement#module/unload/md5_hash=No
|Requirement#module/unload/module_name=No
|Requirement#module/unload/module_path=No
|Requirement#module/unload/pid=No
|Requirement#module/unload/sha1_hash=No
|Requirement#module/unload/sha256_hash=No
|Requirement#module/unload/signer=No
|Requirement#module/unload/tid=No
|Object#process=Yes
|Alias#process/command_line=CommandLine
|Alias#process/exe=Image
|Alias#process/fqdn=ComputerName
|Alias#process/hostname=ComputerName
|Alias#process/image_path=Image
|Alias#process/md5_hash=Hash
|Alias#process/parent_exe=ParentImage
|Alias#process/parent_image_path=ParentImage
|Alias#process/pid=ProcessId
|Alias#process/ppid=ParentProcessId
|Alias#process/sha1_hash=Hash
|Alias#process/sha256_hash=Hash
|Alias#process/user=User
|Requirement#process/create/command_line=Yes
|Requirement#process/create/exe=Yes
|Requirement#process/create/fqdn=Yes
|Requirement#process/create/hostname=Yes
|Requirement#process/create/image_path=Yes
|Requirement#process/create/md5_hash=Yes
|Requirement#process/create/parent_exe=Yes
|Requirement#process/create/parent_image_path=Yes
|Requirement#process/create/pid=Yes
|Requirement#process/create/ppid=Yes
|Requirement#process/create/sha1_hash=Yes
|Requirement#process/create/sha256_hash=Yes
|Requirement#process/create/sid=No
|Requirement#process/create/signer=No
|Requirement#process/create/user=Yes
|Requirement#process/terminate/command_line=No
|Requirement#process/terminate/exe=No
|Requirement#process/terminate/fqdn=Yes
|Requirement#process/terminate/hostname=Yes
|Requirement#process/terminate/image_path=No
|Requirement#process/terminate/md5_hash=No
|Requirement#process/terminate/parent_exe=No
|Requirement#process/terminate/parent_image_path=No
|Requirement#process/terminate/pid=Yes
|Requirement#process/terminate/ppid=No
|Requirement#process/terminate/sha1_hash=No
|Requirement#process/terminate/sha256_hash=No
|Requirement#process/terminate/sid=No
|Requirement#process/terminate/signer=No
|Requirement#process/terminate/user=Yes
|Object#registry=No
|Requirement#registry/add/data=No
|Requirement#registry/add/fqdn=No
|Requirement#registry/add/hive=No
|Requirement#registry/add/hostname=No
|Requirement#registry/add/image_path=No
|Requirement#registry/add/key=No
|Requirement#registry/add/pid=No
|Requirement#registry/add/type=No
|Requirement#registry/add/user=No
|Requirement#registry/add/value=No
|Requirement#registry/edit/data=No
|Requirement#registry/edit/fqdn=No
|Requirement#registry/edit/hive=No
|Requirement#registry/edit/hostname=No
|Requirement#registry/edit/image_path=No
|Requirement#registry/edit/key=No
|Requirement#registry/edit/pid=No
|Requirement#registry/edit/type=No
|Requirement#registry/edit/user=No
|Requirement#registry/edit/value=No
|Requirement#registry/remove/data=No
|Requirement#registry/remove/fqdn=No
|Requirement#registry/remove/hive=No
|Requirement#registry/remove/hostname=No
|Requirement#registry/remove/image_path=No
|Requirement#registry/remove/key=No
|Requirement#registry/remove/pid=No
|Requirement#registry/remove/type=No
|Requirement#registry/remove/user=No
|Requirement#registry/remove/value=No
|Object#service=No
|Requirement#service/create/command_line=No
|Requirement#service/create/exe=No
|Requirement#service/create/fqdn=No
|Requirement#service/create/hostname=No
|Requirement#service/create/image_path=No
|Requirement#service/create/name=No
|Requirement#service/create/pid=No
|Requirement#service/create/ppid=No
|Requirement#service/create/user=No
|Requirement#service/delete/command_line=No
|Requirement#service/delete/exe=No
|Requirement#service/delete/fqdn=No
|Requirement#service/delete/hostname=No
|Requirement#service/delete/image_path=No
|Requirement#service/delete/name=No
|Requirement#service/delete/pid=No
|Requirement#service/delete/ppid=No
|Requirement#service/delete/user=No
|Requirement#service/pause/command_line=No
|Requirement#service/pause/exe=No
|Requirement#service/pause/fqdn=No
|Requirement#service/pause/hostname=No
|Requirement#service/pause/image_path=No
|Requirement#service/pause/name=No
|Requirement#service/pause/pid=No
|Requirement#service/pause/ppid=No
|Requirement#service/pause/user=No
|Requirement#service/start/command_line=No
|Requirement#service/start/exe=No
|Requirement#service/start/fqdn=No
|Requirement#service/start/hostname=No
|Requirement#service/start/image_path=No
|Requirement#service/start/name=No
|Requirement#service/start/pid=No
|Requirement#service/start/ppid=No
|Requirement#service/start/user=No
|Requirement#service/stop/command_line=No
|Requirement#service/stop/exe=No
|Requirement#service/stop/fqdn=No
|Requirement#service/stop/hostname=No
|Requirement#service/stop/image_path=No
|Requirement#service/stop/name=No
|Requirement#service/stop/pid=No
|Requirement#service/stop/ppid=No
|Requirement#service/stop/user=No
|Object#thread=Yes
|Requirement#thread/create/hostname=No
|Requirement#thread/create/pid=No
|Requirement#thread/create/src_pid=No
|Requirement#thread/create/src_tid=No
|Requirement#thread/create/stack_base=No
|Requirement#thread/create/stack_limit=No
|Requirement#thread/create/start_address=No
|Requirement#thread/create/start_function=No
|Requirement#thread/create/start_module=No
|Requirement#thread/create/start_module_name=No
|Requirement#thread/create/subprocess_tag=No
|Requirement#thread/create/tgt_pid=No
|Requirement#thread/create/tgt_tid=No
|Requirement#thread/create/tid=No
|Requirement#thread/create/user=No
|Requirement#thread/create/user_stack_base=No
|Requirement#thread/create/user_stack_limit=No
|Requirement#thread/remote_create/hostname=Yes
|Requirement#thread/remote_create/pid=No
|Requirement#thread/remote_create/src_pid=Yes
|Requirement#thread/remote_create/src_tid=Yes
|Requirement#thread/remote_create/stack_base=No
|Requirement#thread/remote_create/stack_limit=No
|Requirement#thread/remote_create/start_address=Yes
|Requirement#thread/remote_create/start_function=Yes
|Requirement#thread/remote_create/start_module=Yes
|Requirement#thread/remote_create/start_module_name=Yes
|Requirement#thread/remote_create/subprocess_tag=No
|Requirement#thread/remote_create/tgt_pid=Yes
|Requirement#thread/remote_create/tgt_tid=Yes
|Requirement#thread/remote_create/tid=No
|Requirement#thread/remote_create/user=Yes
|Requirement#thread/remote_create/user_stack_base=No
|Requirement#thread/remote_create/user_stack_limit=No
|Requirement#thread/suspend/hostname=No
|Requirement#thread/suspend/pid=No
|Requirement#thread/suspend/src_pid=No
|Requirement#thread/suspend/src_tid=No
|Requirement#thread/suspend/stack_base=No
|Requirement#thread/suspend/stack_limit=No
|Requirement#thread/suspend/start_address=No
|Requirement#thread/suspend/start_function=No
|Requirement#thread/suspend/start_module=No
|Requirement#thread/suspend/start_module_name=No
|Requirement#thread/suspend/subprocess_tag=No
|Requirement#thread/suspend/tgt_pid=No
|Requirement#thread/suspend/tgt_tid=No
|Requirement#thread/suspend/tid=No
|Requirement#thread/suspend/user=No
|Requirement#thread/suspend/user_stack_base=No
|Requirement#thread/suspend/user_stack_limit=No
|Requirement#thread/terminate/hostname=No
|Requirement#thread/terminate/pid=No
|Requirement#thread/terminate/src_pid=No
|Requirement#thread/terminate/src_tid=No
|Requirement#thread/terminate/stack_base=No
|Requirement#thread/terminate/stack_limit=No
|Requirement#thread/terminate/start_address=No
|Requirement#thread/terminate/start_function=No
|Requirement#thread/terminate/start_module=No
|Requirement#thread/terminate/start_module_name=No
|Requirement#thread/terminate/subprocess_tag=No
|Requirement#thread/terminate/tgt_pid=No
|Requirement#thread/terminate/tgt_tid=No
|Requirement#thread/terminate/tid=No
|Requirement#thread/terminate/user=No
|Requirement#thread/terminate/user_stack_base=No
|Requirement#thread/terminate/user_stack_limit=No
|Object#user_session=No
|Requirement#user_session/interactive/dest_ip=No
|Requirement#user_session/interactive/dest_port=No
|Requirement#user_session/interactive/hostname=No
|Requirement#user_session/interactive/logon_id=No
|Requirement#user_session/interactive/privileges=No
|Requirement#user_session/interactive/src_ip=No
|Requirement#user_session/interactive/src_port=No
|Requirement#user_session/interactive/user=No
|Requirement#user_session/local/dest_ip=No
|Requirement#user_session/local/dest_port=No
|Requirement#user_session/local/hostname=No
|Requirement#user_session/local/logon_id=No
|Requirement#user_session/local/privileges=No
|Requirement#user_session/local/src_ip=No
|Requirement#user_session/local/src_port=No
|Requirement#user_session/local/user=No
|Requirement#user_session/lock/dest_ip=No
|Requirement#user_session/lock/dest_port=No
|Requirement#user_session/lock/hostname=No
|Requirement#user_session/lock/logon_id=No
|Requirement#user_session/lock/privileges=No
|Requirement#user_session/lock/src_ip=No
|Requirement#user_session/lock/src_port=No
|Requirement#user_session/lock/user=No
|Requirement#user_session/login/dest_ip=No
|Requirement#user_session/login/dest_port=No
|Requirement#user_session/login/hostname=No
|Requirement#user_session/login/logon_id=No
|Requirement#user_session/login/privileges=No
|Requirement#user_session/login/src_ip=No
|Requirement#user_session/login/src_port=No
|Requirement#user_session/login/user=No
|Requirement#user_session/logout/dest_ip=No
|Requirement#user_session/logout/dest_port=No
|Requirement#user_session/logout/hostname=No
|Requirement#user_session/logout/logon_id=No
|Requirement#user_session/logout/privileges=No
|Requirement#user_session/logout/src_ip=No
|Requirement#user_session/logout/src_port=No
|Requirement#user_session/logout/user=No
|Requirement#user_session/privilege/dest_ip=No
|Requirement#user_session/privilege/dest_port=No
|Requirement#user_session/privilege/hostname=No
|Requirement#user_session/privilege/logon_id=No
|Requirement#user_session/privilege/privileges=No
|Requirement#user_session/privilege/src_ip=No
|Requirement#user_session/privilege/src_port=No
|Requirement#user_session/privilege/user=No
|Requirement#user_session/rdp/dest_ip=No
|Requirement#user_session/rdp/dest_port=No
|Requirement#user_session/rdp/hostname=No
|Requirement#user_session/rdp/logon_id=No
|Requirement#user_session/rdp/privileges=No
|Requirement#user_session/rdp/src_ip=No
|Requirement#user_session/rdp/src_port=No
|Requirement#user_session/rdp/user=No
|Requirement#user_session/reconnect/dest_ip=No
|Requirement#user_session/reconnect/dest_port=No
|Requirement#user_session/reconnect/hostname=No
|Requirement#user_session/reconnect/logon_id=No
|Requirement#user_session/reconnect/privileges=No
|Requirement#user_session/reconnect/src_ip=No
|Requirement#user_session/reconnect/src_port=No
|Requirement#user_session/reconnect/user=No
|Requirement#user_session/remote/dest_ip=No
|Requirement#user_session/remote/dest_port=No
|Requirement#user_session/remote/hostname=No
|Requirement#user_session/remote/logon_id=No
|Requirement#user_session/remote/privileges=No
|Requirement#user_session/remote/src_ip=No
|Requirement#user_session/remote/src_port=No
|Requirement#user_session/remote/user=No
|Requirement#user_session/unlock/dest_ip=No
|Requirement#user_session/unlock/dest_port=No
|Requirement#user_session/unlock/hostname=No
|Requirement#user_session/unlock/logon_id=No
|Requirement#user_session/unlock/privileges=No
|Requirement#user_session/unlock/src_ip=No
|Requirement#user_session/unlock/src_port=No
|Requirement#user_session/unlock/user=No
|Requirement#flow/end/mac=No
|Requirement#flow/message/mac=No
|Requirement#flow/start/mac=No
}}
}}</text>
            <sha1>8bjnl8gog91l5f7jwxctemmymad8187</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Sysmon (3.1)</title>
        <ns>0</ns>
        <id>907</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10915</id>
            <parentid>10906</parentid>
            <timestamp>2016-06-29T22:33:57Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="20812">{{Sensor
|Name=Sysmon
|Manufacturer=Microsoft Corporation
|Release Date=2015/07/23
|Version=3.1
|Website=https://technet.microsoft.com/en-us/sysinternals/sysmon
|Description=Sysmon is a freely available program from Microsoft that is provided as part of the Windows Sysinternals suite of tools. It collects system information while running in the background and supports storing it in the Windows Event Log.
|Techniques=T1099
|Fields={{Extract Fields
|Object#driver=Yes
|Requirement#driver/load/base_address=No
|Requirement#driver/load/fqdn=Yes
|Requirement#driver/load/hostname=Yes
|Requirement#driver/load/image_path=Yes
|Requirement#driver/load/md5_hash=Yes
|Requirement#driver/load/module_name=Yes
|Requirement#driver/load/sha1_hash=Yes
|Requirement#driver/load/sha256_hash=Yes
|Requirement#driver/load/signer=No
|Requirement#driver/unload/base_address=No
|Requirement#driver/unload/fqdn=No
|Requirement#driver/unload/hostname=No
|Requirement#driver/unload/image_path=No
|Requirement#driver/unload/md5_hash=No
|Requirement#driver/unload/module_name=No
|Requirement#driver/unload/sha1_hash=No
|Requirement#driver/unload/sha256_hash=No
|Requirement#driver/unload/signer=No
|Object#file=Yes
|Alias#file/creation_time=CreationUtcTime
|Alias#file/file_name=TargetFilename
|Alias#file/hostname=ComputerName
|Alias#file/image_path=Image
|Alias#file/pid=ProcessId
|Alias#file/previous_creation_time=PreviousCreationUtcTime
|Alias#file/user=User
|Requirement#file/create/company=No
|Requirement#file/create/creation_time=No
|Requirement#file/create/file_name=No
|Requirement#file/create/file_path=No
|Requirement#file/create/fqdn=No
|Requirement#file/create/hostname=No
|Requirement#file/create/image_path=No
|Requirement#file/create/md5_hash=No
|Requirement#file/create/pid=No
|Requirement#file/create/ppid=No
|Requirement#file/create/previous_creation_time=No
|Requirement#file/create/sha1_hash=No
|Requirement#file/create/sha256_hash=No
|Requirement#file/create/signer=No
|Requirement#file/create/user=No
|Requirement#file/delete/company=No
|Requirement#file/delete/creation_time=No
|Requirement#file/delete/file_name=No
|Requirement#file/delete/file_path=No
|Requirement#file/delete/fqdn=No
|Requirement#file/delete/hostname=No
|Requirement#file/delete/image_path=No
|Requirement#file/delete/md5_hash=No
|Requirement#file/delete/pid=No
|Requirement#file/delete/ppid=No
|Requirement#file/delete/previous_creation_time=No
|Requirement#file/delete/sha1_hash=No
|Requirement#file/delete/sha256_hash=No
|Requirement#file/delete/signer=No
|Requirement#file/delete/user=No
|Requirement#file/modify/company=No
|Requirement#file/modify/creation_time=No
|Requirement#file/modify/file_name=No
|Requirement#file/modify/file_path=No
|Requirement#file/modify/fqdn=No
|Requirement#file/modify/hostname=No
|Requirement#file/modify/image_path=No
|Requirement#file/modify/md5_hash=No
|Requirement#file/modify/pid=No
|Requirement#file/modify/ppid=No
|Requirement#file/modify/previous_creation_time=No
|Requirement#file/modify/sha1_hash=No
|Requirement#file/modify/sha256_hash=No
|Requirement#file/modify/signer=No
|Requirement#file/modify/user=No
|Requirement#file/read/company=No
|Requirement#file/read/creation_time=No
|Requirement#file/read/file_name=No
|Requirement#file/read/file_path=No
|Requirement#file/read/fqdn=No
|Requirement#file/read/hostname=No
|Requirement#file/read/image_path=No
|Requirement#file/read/md5_hash=No
|Requirement#file/read/pid=No
|Requirement#file/read/ppid=No
|Requirement#file/read/previous_creation_time=No
|Requirement#file/read/sha1_hash=No
|Requirement#file/read/sha256_hash=No
|Requirement#file/read/signer=No
|Requirement#file/read/user=No
|Requirement#file/timestomp/company=No
|Requirement#file/timestomp/creation_time=Yes
|Requirement#file/timestomp/file_name=Yes
|Requirement#file/timestomp/file_path=No
|Requirement#file/timestomp/fqdn=No
|Requirement#file/timestomp/hostname=Yes
|Requirement#file/timestomp/image_path=Yes
|Requirement#file/timestomp/md5_hash=No
|Requirement#file/timestomp/pid=Yes
|Requirement#file/timestomp/ppid=No
|Requirement#file/timestomp/previous_creation_time=Yes
|Requirement#file/timestomp/sha1_hash=No
|Requirement#file/timestomp/sha256_hash=No
|Requirement#file/timestomp/signer=No
|Requirement#file/timestomp/user=Yes
|Requirement#file/write/company=No
|Requirement#file/write/creation_time=No
|Requirement#file/write/file_name=No
|Requirement#file/write/file_path=No
|Requirement#file/write/fqdn=No
|Requirement#file/write/hostname=No
|Requirement#file/write/image_path=No
|Requirement#file/write/md5_hash=No
|Requirement#file/write/pid=No
|Requirement#file/write/ppid=No
|Requirement#file/write/previous_creation_time=No
|Requirement#file/write/sha1_hash=No
|Requirement#file/write/sha256_hash=No
|Requirement#file/write/signer=No
|Requirement#file/write/user=No
|Object#flow=Yes
|Alias#flow/dest_ip=DestinationIP
|Alias#flow/dest_port=DestinationPort
|Alias#flow/exe=Image
|Alias#flow/hostname=ComputerName
|Alias#flow/image_path=Image
|Alias#flow/pid=ProcessId
|Alias#flow/protocol=Protocol
|Alias#flow/src_ip=SourceIP
|Alias#flow/src_port=SourcePort
|Alias#flow/start_time=UtcTime
|Alias#flow/user=User
|Requirement#flow/end/content=No
|Requirement#flow/end/dest_fqdn=No
|Requirement#flow/end/dest_hostname=No
|Requirement#flow/end/dest_ip=No
|Requirement#flow/end/dest_port=No
|Requirement#flow/end/end_time=No
|Requirement#flow/end/exe=No
|Requirement#flow/end/flags=No
|Requirement#flow/end/fqdn=No
|Requirement#flow/end/hostname=No
|Requirement#flow/end/image_path=No
|Requirement#flow/end/packet_count=No
|Requirement#flow/end/pid=No
|Requirement#flow/end/ppid=No
|Requirement#flow/end/proto_info=No
|Requirement#flow/end/protocol=No
|Requirement#flow/end/src_fqdn=No
|Requirement#flow/end/src_hostname=No
|Requirement#flow/end/src_ip=No
|Requirement#flow/end/src_port=No
|Requirement#flow/end/start_time=No
|Requirement#flow/end/user=No
|Requirement#flow/message/content=No
|Requirement#flow/message/dest_fqdn=No
|Requirement#flow/message/dest_hostname=No
|Requirement#flow/message/dest_ip=No
|Requirement#flow/message/dest_port=No
|Requirement#flow/message/end_time=No
|Requirement#flow/message/exe=No
|Requirement#flow/message/flags=No
|Requirement#flow/message/fqdn=No
|Requirement#flow/message/hostname=No
|Requirement#flow/message/image_path=No
|Requirement#flow/message/packet_count=No
|Requirement#flow/message/pid=No
|Requirement#flow/message/ppid=No
|Requirement#flow/message/proto_info=No
|Requirement#flow/message/protocol=No
|Requirement#flow/message/src_fqdn=No
|Requirement#flow/message/src_hostname=No
|Requirement#flow/message/src_ip=No
|Requirement#flow/message/src_port=No
|Requirement#flow/message/start_time=No
|Requirement#flow/message/user=No
|Requirement#flow/start/content=No
|Requirement#flow/start/dest_fqdn=No
|Requirement#flow/start/dest_hostname=No
|Requirement#flow/start/dest_ip=Yes
|Requirement#flow/start/dest_port=Yes
|Requirement#flow/start/end_time=No
|Requirement#flow/start/exe=Yes
|Requirement#flow/start/flags=No
|Requirement#flow/start/fqdn=No
|Requirement#flow/start/hostname=Yes
|Requirement#flow/start/image_path=Yes
|Requirement#flow/start/packet_count=No
|Requirement#flow/start/pid=Yes
|Requirement#flow/start/ppid=No
|Requirement#flow/start/proto_info=No
|Requirement#flow/start/protocol=Yes
|Requirement#flow/start/src_fqdn=No
|Requirement#flow/start/src_hostname=No
|Requirement#flow/start/src_ip=Yes
|Requirement#flow/start/src_port=Yes
|Requirement#flow/start/start_time=Yes
|Requirement#flow/start/user=Yes
|Object#keyboard=No
|Requirement#keyboard/kernel_keypress/hostname=No
|Requirement#keyboard/user_keypress/hostname=No
|Object#module=Yes
|Alias#module/fqdn=ComputerName
|Alias#module/hostname=ComputerName
|Alias#module/image_path=Image
|Alias#module/md5_hash=Hash
|Alias#module/module_name=ImageLoaded
|Alias#module/pid=ProcessId
|Alias#module/sha1_hash=Hash
|Alias#module/sha256_hash=Hash
|Requirement#module/load/base_address=No
|Requirement#module/load/fqdn=Yes
|Requirement#module/load/hostname=Yes
|Requirement#module/load/image_path=Yes
|Requirement#module/load/md5_hash=Yes
|Requirement#module/load/module_name=Yes
|Requirement#module/load/module_path=No
|Requirement#module/load/pid=Yes
|Requirement#module/load/sha1_hash=Yes
|Requirement#module/load/sha256_hash=Yes
|Requirement#module/load/signer=No
|Requirement#module/load/tid=No
|Requirement#module/unload/base_address=No
|Requirement#module/unload/fqdn=No
|Requirement#module/unload/hostname=No
|Requirement#module/unload/image_path=No
|Requirement#module/unload/md5_hash=No
|Requirement#module/unload/module_name=No
|Requirement#module/unload/module_path=No
|Requirement#module/unload/pid=No
|Requirement#module/unload/sha1_hash=No
|Requirement#module/unload/sha256_hash=No
|Requirement#module/unload/signer=No
|Requirement#module/unload/tid=No
|Object#process=Yes
|Alias#process/command_line=CommandLine
|Alias#process/exe=Image
|Alias#process/fqdn=ComputerName
|Alias#process/hostname=ComputerName
|Alias#process/image_path=Image
|Alias#process/md5_hash=Hash
|Alias#process/parent_exe=ParentImage
|Alias#process/parent_image_path=ParentImage
|Alias#process/pid=ProcessId
|Alias#process/ppid=ParentProcessId
|Alias#process/sha1_hash=Hash
|Alias#process/sha256_hash=Hash
|Alias#process/user=User
|Requirement#process/create/command_line=Yes
|Requirement#process/create/exe=Yes
|Requirement#process/create/fqdn=Yes
|Requirement#process/create/hostname=Yes
|Requirement#process/create/image_path=Yes
|Requirement#process/create/md5_hash=Yes
|Requirement#process/create/parent_exe=Yes
|Requirement#process/create/parent_image_path=Yes
|Requirement#process/create/pid=Yes
|Requirement#process/create/ppid=Yes
|Requirement#process/create/sha1_hash=Yes
|Requirement#process/create/sha256_hash=Yes
|Requirement#process/create/sid=No
|Requirement#process/create/signer=No
|Requirement#process/create/user=Yes
|Requirement#process/terminate/command_line=No
|Requirement#process/terminate/exe=No
|Requirement#process/terminate/fqdn=Yes
|Requirement#process/terminate/hostname=Yes
|Requirement#process/terminate/image_path=No
|Requirement#process/terminate/md5_hash=No
|Requirement#process/terminate/parent_exe=No
|Requirement#process/terminate/parent_image_path=No
|Requirement#process/terminate/pid=Yes
|Requirement#process/terminate/ppid=No
|Requirement#process/terminate/sha1_hash=No
|Requirement#process/terminate/sha256_hash=No
|Requirement#process/terminate/sid=No
|Requirement#process/terminate/signer=No
|Requirement#process/terminate/user=Yes
|Object#registry=No
|Requirement#registry/add/data=No
|Requirement#registry/add/fqdn=No
|Requirement#registry/add/hive=No
|Requirement#registry/add/hostname=No
|Requirement#registry/add/image_path=No
|Requirement#registry/add/key=No
|Requirement#registry/add/pid=No
|Requirement#registry/add/type=No
|Requirement#registry/add/user=No
|Requirement#registry/add/value=No
|Requirement#registry/edit/data=No
|Requirement#registry/edit/fqdn=No
|Requirement#registry/edit/hive=No
|Requirement#registry/edit/hostname=No
|Requirement#registry/edit/image_path=No
|Requirement#registry/edit/key=No
|Requirement#registry/edit/pid=No
|Requirement#registry/edit/type=No
|Requirement#registry/edit/user=No
|Requirement#registry/edit/value=No
|Requirement#registry/remove/data=No
|Requirement#registry/remove/fqdn=No
|Requirement#registry/remove/hive=No
|Requirement#registry/remove/hostname=No
|Requirement#registry/remove/image_path=No
|Requirement#registry/remove/key=No
|Requirement#registry/remove/pid=No
|Requirement#registry/remove/type=No
|Requirement#registry/remove/user=No
|Requirement#registry/remove/value=No
|Object#service=No
|Requirement#service/create/command_line=No
|Requirement#service/create/exe=No
|Requirement#service/create/fqdn=No
|Requirement#service/create/hostname=No
|Requirement#service/create/image_path=No
|Requirement#service/create/name=No
|Requirement#service/create/pid=No
|Requirement#service/create/ppid=No
|Requirement#service/create/user=No
|Requirement#service/delete/command_line=No
|Requirement#service/delete/exe=No
|Requirement#service/delete/fqdn=No
|Requirement#service/delete/hostname=No
|Requirement#service/delete/image_path=No
|Requirement#service/delete/name=No
|Requirement#service/delete/pid=No
|Requirement#service/delete/ppid=No
|Requirement#service/delete/user=No
|Requirement#service/pause/command_line=No
|Requirement#service/pause/exe=No
|Requirement#service/pause/fqdn=No
|Requirement#service/pause/hostname=No
|Requirement#service/pause/image_path=No
|Requirement#service/pause/name=No
|Requirement#service/pause/pid=No
|Requirement#service/pause/ppid=No
|Requirement#service/pause/user=No
|Requirement#service/start/command_line=No
|Requirement#service/start/exe=No
|Requirement#service/start/fqdn=No
|Requirement#service/start/hostname=No
|Requirement#service/start/image_path=No
|Requirement#service/start/name=No
|Requirement#service/start/pid=No
|Requirement#service/start/ppid=No
|Requirement#service/start/user=No
|Requirement#service/stop/command_line=No
|Requirement#service/stop/exe=No
|Requirement#service/stop/fqdn=No
|Requirement#service/stop/hostname=No
|Requirement#service/stop/image_path=No
|Requirement#service/stop/name=No
|Requirement#service/stop/pid=No
|Requirement#service/stop/ppid=No
|Requirement#service/stop/user=No
|Object#thread=Yes
|Requirement#thread/create/hostname=No
|Requirement#thread/create/pid=No
|Requirement#thread/create/src_pid=No
|Requirement#thread/create/src_tid=No
|Requirement#thread/create/stack_base=No
|Requirement#thread/create/stack_limit=No
|Requirement#thread/create/start_address=No
|Requirement#thread/create/start_function=No
|Requirement#thread/create/start_module=No
|Requirement#thread/create/start_module_name=No
|Requirement#thread/create/subprocess_tag=No
|Requirement#thread/create/tgt_pid=No
|Requirement#thread/create/tgt_tid=No
|Requirement#thread/create/tid=No
|Requirement#thread/create/user=No
|Requirement#thread/create/user_stack_base=No
|Requirement#thread/create/user_stack_limit=No
|Requirement#thread/remote_create/hostname=Yes
|Requirement#thread/remote_create/pid=No
|Requirement#thread/remote_create/src_pid=Yes
|Requirement#thread/remote_create/src_tid=Yes
|Requirement#thread/remote_create/stack_base=No
|Requirement#thread/remote_create/stack_limit=No
|Requirement#thread/remote_create/start_address=Yes
|Requirement#thread/remote_create/start_function=Yes
|Requirement#thread/remote_create/start_module=Yes
|Requirement#thread/remote_create/start_module_name=Yes
|Requirement#thread/remote_create/subprocess_tag=No
|Requirement#thread/remote_create/tgt_pid=Yes
|Requirement#thread/remote_create/tgt_tid=Yes
|Requirement#thread/remote_create/tid=No
|Requirement#thread/remote_create/user=Yes
|Requirement#thread/remote_create/user_stack_base=No
|Requirement#thread/remote_create/user_stack_limit=No
|Requirement#thread/suspend/hostname=No
|Requirement#thread/suspend/pid=No
|Requirement#thread/suspend/src_pid=No
|Requirement#thread/suspend/src_tid=No
|Requirement#thread/suspend/stack_base=No
|Requirement#thread/suspend/stack_limit=No
|Requirement#thread/suspend/start_address=No
|Requirement#thread/suspend/start_function=No
|Requirement#thread/suspend/start_module=No
|Requirement#thread/suspend/start_module_name=No
|Requirement#thread/suspend/subprocess_tag=No
|Requirement#thread/suspend/tgt_pid=No
|Requirement#thread/suspend/tgt_tid=No
|Requirement#thread/suspend/tid=No
|Requirement#thread/suspend/user=No
|Requirement#thread/suspend/user_stack_base=No
|Requirement#thread/suspend/user_stack_limit=No
|Requirement#thread/terminate/hostname=No
|Requirement#thread/terminate/pid=No
|Requirement#thread/terminate/src_pid=No
|Requirement#thread/terminate/src_tid=No
|Requirement#thread/terminate/stack_base=No
|Requirement#thread/terminate/stack_limit=No
|Requirement#thread/terminate/start_address=No
|Requirement#thread/terminate/start_function=No
|Requirement#thread/terminate/start_module=No
|Requirement#thread/terminate/start_module_name=No
|Requirement#thread/terminate/subprocess_tag=No
|Requirement#thread/terminate/tgt_pid=No
|Requirement#thread/terminate/tgt_tid=No
|Requirement#thread/terminate/tid=No
|Requirement#thread/terminate/user=No
|Requirement#thread/terminate/user_stack_base=No
|Requirement#thread/terminate/user_stack_limit=No
|Object#user_session=No
|Requirement#user_session/interactive/dest_ip=No
|Requirement#user_session/interactive/dest_port=No
|Requirement#user_session/interactive/hostname=No
|Requirement#user_session/interactive/logon_id=No
|Requirement#user_session/interactive/privileges=No
|Requirement#user_session/interactive/src_ip=No
|Requirement#user_session/interactive/src_port=No
|Requirement#user_session/interactive/user=No
|Requirement#user_session/local/dest_ip=No
|Requirement#user_session/local/dest_port=No
|Requirement#user_session/local/hostname=No
|Requirement#user_session/local/logon_id=No
|Requirement#user_session/local/privileges=No
|Requirement#user_session/local/src_ip=No
|Requirement#user_session/local/src_port=No
|Requirement#user_session/local/user=No
|Requirement#user_session/lock/dest_ip=No
|Requirement#user_session/lock/dest_port=No
|Requirement#user_session/lock/hostname=No
|Requirement#user_session/lock/logon_id=No
|Requirement#user_session/lock/privileges=No
|Requirement#user_session/lock/src_ip=No
|Requirement#user_session/lock/src_port=No
|Requirement#user_session/lock/user=No
|Requirement#user_session/login/dest_ip=No
|Requirement#user_session/login/dest_port=No
|Requirement#user_session/login/hostname=No
|Requirement#user_session/login/logon_id=No
|Requirement#user_session/login/privileges=No
|Requirement#user_session/login/src_ip=No
|Requirement#user_session/login/src_port=No
|Requirement#user_session/login/user=No
|Requirement#user_session/logout/dest_ip=No
|Requirement#user_session/logout/dest_port=No
|Requirement#user_session/logout/hostname=No
|Requirement#user_session/logout/logon_id=No
|Requirement#user_session/logout/privileges=No
|Requirement#user_session/logout/src_ip=No
|Requirement#user_session/logout/src_port=No
|Requirement#user_session/logout/user=No
|Requirement#user_session/privilege/dest_ip=No
|Requirement#user_session/privilege/dest_port=No
|Requirement#user_session/privilege/hostname=No
|Requirement#user_session/privilege/logon_id=No
|Requirement#user_session/privilege/privileges=No
|Requirement#user_session/privilege/src_ip=No
|Requirement#user_session/privilege/src_port=No
|Requirement#user_session/privilege/user=No
|Requirement#user_session/rdp/dest_ip=No
|Requirement#user_session/rdp/dest_port=No
|Requirement#user_session/rdp/hostname=No
|Requirement#user_session/rdp/logon_id=No
|Requirement#user_session/rdp/privileges=No
|Requirement#user_session/rdp/src_ip=No
|Requirement#user_session/rdp/src_port=No
|Requirement#user_session/rdp/user=No
|Requirement#user_session/reconnect/dest_ip=No
|Requirement#user_session/reconnect/dest_port=No
|Requirement#user_session/reconnect/hostname=No
|Requirement#user_session/reconnect/logon_id=No
|Requirement#user_session/reconnect/privileges=No
|Requirement#user_session/reconnect/src_ip=No
|Requirement#user_session/reconnect/src_port=No
|Requirement#user_session/reconnect/user=No
|Requirement#user_session/remote/dest_ip=No
|Requirement#user_session/remote/dest_port=No
|Requirement#user_session/remote/hostname=No
|Requirement#user_session/remote/logon_id=No
|Requirement#user_session/remote/privileges=No
|Requirement#user_session/remote/src_ip=No
|Requirement#user_session/remote/src_port=No
|Requirement#user_session/remote/user=No
|Requirement#user_session/unlock/dest_ip=No
|Requirement#user_session/unlock/dest_port=No
|Requirement#user_session/unlock/hostname=No
|Requirement#user_session/unlock/logon_id=No
|Requirement#user_session/unlock/privileges=No
|Requirement#user_session/unlock/src_ip=No
|Requirement#user_session/unlock/src_port=No
|Requirement#user_session/unlock/user=No
|Requirement#flow/end/mac=No
|Requirement#flow/message/mac=No
|Requirement#flow/start/mac=No
|Requirement#user_session/interactive/logon_type=No
|Requirement#user_session/local/logon_type=No
|Requirement#user_session/lock/logon_type=No
|Requirement#user_session/login/logon_type=No
|Requirement#user_session/logout/logon_type=No
|Requirement#user_session/privilege/logon_type=No
|Requirement#user_session/rdp/logon_type=No
|Requirement#user_session/reconnect/logon_type=No
|Requirement#user_session/remote/logon_type=No
|Requirement#user_session/unlock/logon_type=No
|Requirement#thread/create/start_address_win32=No
|Requirement#thread/suspend/start_address_win32=No
|Requirement#thread/terminate/start_address_win32=No
|Requirement#driver/load/pid=Yes
|Requirement#driver/load/process_uuid=No
|Requirement#driver/unload/pid=No
|Requirement#driver/unload/process_uuid=No
}}
}}</text>
            <sha1>i9cgtm85rfnm9pzgr5dwjvr8eldas5f</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Analytic Pseudocode</title>
        <ns>10</ns>
        <id>910</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>9761</id>
            <parentid>9696</parentid>
            <timestamp>2016-03-25T02:52:38Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="505">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;{{{Description|}}}
{{#if: {{{Example Query|}}}
|{{#set: Has Pseudocode=True}}{{#tag: pre
|{{{Example Query|}}}
|class="pseudocode"
}}&lt;!-- end tag pre --&gt;
|&lt;!-- else --&gt;{{#set: Has Pseudocode=False}}
|}}&lt;!-- end if --&gt;
{{#if: {{{Required Fields|}}}
|{{RequiredFieldsTable|fields={{{Required Fields|}}}|}}
{{#arraymap: {{{Required Fields|}}}
|,
|$
|{{#set: Has Required Field=$}}
|
}}&lt;!-- end array map --&gt;
}}&lt;!-- end if Required Fields --&gt;&lt;/includeonly&gt;</text>
            <sha1>iipwapgsz7xe5k24f2c817kgxig8c2z</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Analytic Pseudocode/doc</title>
        <ns>10</ns>
        <id>911</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>9362</id>
            <parentid>9359</parentid>
            <timestamp>2016-03-23T17:39:28Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="78">&lt;pre&gt;{{Analytic Query
|Description=
|Example Query=
|Required Fields=
}}&lt;/pre&gt;</text>
            <sha1>1wmmh2oibaswduk9ifdexl4c2gddwox</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Status</title>
        <ns>102</ns>
        <id>912</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>9390</id>
            <timestamp>2016-03-23T20:38:49Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Meliora Status</title>
        <ns>102</ns>
        <id>913</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>9393</id>
            <parentid>9391</parentid>
            <timestamp>2016-03-23T20:42:51Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="49">This is a property of type [[Has type::Boolean]].</text>
            <sha1>8vxoynet9x13eclvtak49ni4bdl8imu</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Pseudocode</title>
        <ns>102</ns>
        <id>915</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>9649</id>
            <timestamp>2016-03-24T19:46:31Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="49">This is a property of type [[Has type::Boolean]].</text>
            <sha1>8vxoynet9x13eclvtak49ni4bdl8imu</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2016-03-001</title>
        <ns>0</ns>
        <id>916</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10792</id>
            <parentid>10782</parentid>
            <timestamp>2016-05-02T15:52:21Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2894">{{Analytic
|MaximumInstantiationId=0
|ShortSummary=Host Discovery Commands
|Hypothesis=When entering on a host for the first time, an adversary may try to [[attack:Discovery|discover]] information about the host. There are several built-in Windows commands that can be used to learn about the software configurations, active users, administrators, and networking configuration. These commands should be monitored to identify when an adversary is learning information about the system and environment. The information returned may impact choices an adversary can make when [[attack:Persistence|establishing persistence]], [[attack:Privilege Escalation|escalating privileges]], or [[attack:Lateral Movement|moving laterally]].

Because these commands are built in, they may be run frequently by power users or even by normal users. Thus, an analytic looking at this information should have well-defined white- or blacklists, and should consider looking at an anomaly detection approach, so that this information can be learned dynamically.
|SubmissionDate=2016/03/24
|AnalyticType=TTP,
|InformationDomain=Host
|HostSubtypes=Process,
|AnalyticNotes=Within the built-in* Windows
* &lt;code&gt;hostname&lt;/code&gt;
* &lt;code&gt;ipconfig&lt;/code&gt;
* &lt;code&gt;net&lt;/code&gt;
* &lt;code&gt;quser&lt;/code&gt;
* &lt;code&gt;qwinsta&lt;/code&gt;
* &lt;code&gt;sc&lt;/code&gt; with flags &lt;code&gt;query&lt;/code&gt;, &lt;code&gt;queryex&lt;/code&gt;, &lt;code&gt;qc&lt;/code&gt;
* &lt;code&gt;systeminfo&lt;/code&gt;
* &lt;code&gt;tasklist&lt;/code&gt;
* &lt;code&gt;whoami&lt;/code&gt;

Note* &lt;code&gt;dsquery&lt;/code&gt; is only pre-existing on Windows servers.
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1087
|Tactics=Discovery,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1069
|Tactics=Discovery,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1016
|Tactics=Discovery,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1082
|Tactics=Discovery,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1033
|Tactics=Discovery,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1057
|Tactics=Discovery,
|Coverage=Moderate
}}{{ATTACK Reference
|Technique=T1007
|Tactics=Discovery,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Description=To be effective in deciphering malicious and benign activity, the full [[Data Model/process#command_line|command line]] is essential. Similarly, having information about the parent process can help with making decisions and tuning to an environment.
|Example Query=process = search Process:Create
info_command = filter process where (
 exe == "hostname.exe" or 
 exe == "ipconfig.exe" or 
 exe == "net.exe" or 
 exe == "quser.exe" or 
 exe == "qwinsta.exe" or
 exe == "sc" and (command_line match " query" or command_line match " qc")) or
 exe == "systeminfo.exe" or 
 exe == "tasklist.exe" or 
 exe == "whoami.exe"
)
output info_command
|Required Fields=process/create/command_line, process/create/exe,
}}
|UnitTests=
|AnalyticInstantiations=
}}</text>
            <sha1>dh5nuc8lv7ezjzryiat0652z05ylf2q</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Full Analytic Name</title>
        <ns>102</ns>
        <id>917</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>9689</id>
            <timestamp>2016-03-25T02:23:24Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Analytic Unit Test/doc</title>
        <ns>10</ns>
        <id>918</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>9771</id>
            <timestamp>2016-03-25T03:28:55Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="114">&lt;pre&gt;
{{Analytic Unit Test
|Requirements=
|Configurations=
|Command=
}}
&lt;/pre&gt;
[[Category:Template documentation]]</text>
            <sha1>jcl9fqlv32yunv0ymeh6msa5pwsrx8d</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Is Unit Test Of</title>
        <ns>102</ns>
        <id>919</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10045</id>
            <timestamp>2016-03-25T05:41:47Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="46">This is a property of type [[Has type::Page]].</text>
            <sha1>jk9aupditbfg4coza27xh6berm5n0sp</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Technique Coverage</title>
        <ns>102</ns>
        <id>920</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10108</id>
            <timestamp>2016-03-25T08:02:21Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="46">This is a property of type [[Has type::Page]].</text>
            <sha1>jk9aupditbfg4coza27xh6berm5n0sp</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Analytic Coverage</title>
        <ns>102</ns>
        <id>921</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10109</id>
            <timestamp>2016-03-25T08:02:33Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="46">This is a property of type [[Has type::Page]].</text>
            <sha1>jk9aupditbfg4coza27xh6berm5n0sp</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2016-03-002</title>
        <ns>0</ns>
        <id>923</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10648</id>
            <parentid>10412</parentid>
            <timestamp>2016-04-19T14:58:31Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1789">{{Analytic
|MaximumInstantiationId=0
|ShortSummary=Create Remote Process via WMIC
|Hypothesis=Adversaries may use {{Technique Link|T1047|Windows Management Instrumentation}} (WMI) to move laterally, by launching executables remotely.
The analytic {{Analytic Link|CAR-2014-12-001}} describes how to detect these processes with network traffic monitoring and process monitoring on the target host. However, if the command line utility &lt;code&gt;wmic.exe&lt;/code&gt; is used on the source host, then it can additionally be detected on an analytic.

The command line on the source host is constructed into something like &lt;code&gt;wmic.exe /node:"&lt;hostname&gt;" process call create "&lt;command line&gt;"&lt;/code&gt;. It is possible to also connect via IP address, in which case the string &lt;code&gt;"&lt;hostname&gt;"&lt;/code&gt; would instead look like &lt;code&gt;IP Address&lt;/code&gt;.
|SubmissionDate=2016/03/28
|AnalyticType=TTP,
|InformationDomain=Host
|HostSubtypes=Process,
|AnalyticNotes=Although this analytic was created after {{Analytic Link|CAR-2014-12-001}}, it is a much simpler (although more limited) approach. Processes can be created remotely via WMI in a few other ways, such as more direct API access or the built-in utility {{Technique Link|T1086|PowerShell}}.
|IntellectualProperty=MITRE
|ATTACK References={{ATTACK Reference
|Technique=T1047
|Tactics=Execution,
}}
|Pseudocode={{Analytic Pseudocode
|Description=Looks for instances of &lt;code&gt;wmic.exe&lt;/code&gt; as well as the substrings in the command line
* &lt;code&gt;process call create&lt;/code&gt;
* &lt;code&gt;/node:&lt;/code&gt;
|Example Query=processes = search Process:Create
wmic = filter processes where (exe == "wmic.exe" and command_line == "* process call create *" and command_line == "* /node:*")
output wmic
|Required Fields=process/create/exe, process/create/command_line,
}}
}}</text>
            <sha1>odzo7uljx7dovyarl7ejhwxfdehlkwd</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Analytic Link</title>
        <ns>10</ns>
        <id>924</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10263</id>
            <timestamp>2016-03-28T18:14:21Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="125">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;[[{{{1}}}|{{{1}}}: {{#show: {{{1}}}|?Has Short Summary}}]]&lt;/includeonly&gt;</text>
            <sha1>cpu9ppfqplc2c8adiz095a1edryvpup</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:ATTACK ID Lookup</title>
        <ns>10</ns>
        <id>926</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10606</id>
            <parentid>10568</parentid>
            <timestamp>2016-04-14T05:59:37Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="173">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;{{#ask: [[Is ATTACK Technique::+]] [[Has Technique ID::{{{1}}}]]|mainlabel=-|?Has ATTACK Technique Name=}}&lt;/includeonly&gt;</text>
            <sha1>2kl4hrzic8y5bhjo80za1d6qfmk9ohd</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:Technique Link</title>
        <ns>10</ns>
        <id>928</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10607</id>
            <parentid>10567</parentid>
            <timestamp>2016-04-14T05:59:52Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="221">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;{{#if: {{{2|}}}|[[attack:Technique/{{{1}}}|{{{2}}}]]|{{#ask: [[Is ATTACK Technique::+]] [[Has Technique ID::{{{1}}}]]|mainlabel=-|?Has Technique Link=}}}}&lt;/includeonly&gt;</text>
            <sha1>b5mvswj9nmpwtslaj0p2w8n34ru3suu</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has ATTACK Technique Link</title>
        <ns>102</ns>
        <id>929</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10535</id>
            <parentid>10524</parentid>
            <timestamp>2016-04-14T02:26:52Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <minor></minor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has ATTACK Technique</title>
        <ns>102</ns>
        <id>930</id>
        <redirect xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" title="Property:Has ATTACK Technique Link"/>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10536</id>
            <timestamp>2016-04-14T02:26:52Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">#REDIRECT [[Property:Has ATTACK Technique Link]]</text>
            <sha1>tcdny8a8vj5c0dfkmcwsv66783j57fl</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Is ATTACK Technique</title>
        <ns>102</ns>
        <id>931</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10542</id>
            <timestamp>2016-04-14T03:42:14Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="46">This is a property of type [[Has type::Page]].</text>
            <sha1>jk9aupditbfg4coza27xh6berm5n0sp</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has ATTACK Technique Name</title>
        <ns>102</ns>
        <id>932</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10543</id>
            <timestamp>2016-04-14T03:42:22Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="47">This is a property of type [[Has type::String]]</text>
            <sha1>eql2km7inp3t1fj4wyjox20oiafeejw</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Is ATTACK Tactic</title>
        <ns>102</ns>
        <id>933</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10547</id>
            <timestamp>2016-04-14T03:46:58Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="46">This is a property of type [[Has type::Page]].</text>
            <sha1>jk9aupditbfg4coza27xh6berm5n0sp</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Tactic Page</title>
        <ns>102</ns>
        <id>934</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10548</id>
            <timestamp>2016-04-14T03:50:51Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="46">This is a property of type [[Has type::Page]].</text>
            <sha1>jk9aupditbfg4coza27xh6berm5n0sp</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Tactic Name</title>
        <ns>102</ns>
        <id>935</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10550</id>
            <parentid>10549</parentid>
            <timestamp>2016-04-14T03:51:09Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Technique Link</title>
        <ns>102</ns>
        <id>936</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10552</id>
            <timestamp>2016-04-14T03:57:25Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="47">This is a property of type [[Has type::String]]</text>
            <sha1>eql2km7inp3t1fj4wyjox20oiafeejw</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Template:ATTACK Form Mapping</title>
        <ns>10</ns>
        <id>937</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10611</id>
            <parentid>10591</parentid>
            <timestamp>2016-04-14T16:13:30Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="103">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;{{ATTACK ID Lookup|{{{1}}}}} {{{1}}}&lt;/includeonly&gt;</text>
            <sha1>42ow556r0j1y1zplwgq0ijns57lfjyv</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Property:Has Technique ID</title>
        <ns>102</ns>
        <id>938</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10599</id>
            <timestamp>2016-04-14T05:49:54Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="48">This is a property of type [[Has type::String]].</text>
            <sha1>4qq6cuutoa3imisl8utrduwz15crhq4</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2016-04-002</title>
        <ns>0</ns>
        <id>940</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10839</id>
            <parentid>10838</parentid>
            <timestamp>2016-05-20T14:05:56Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1826">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=User Activity from Clearing Event Logs
|Hypothesis=It is unlikely that event log data would be cleared during normal operations, and it is likely that 
malicious attackers may try to cover their tracks by clearing an event log. When an event log gets cleared,
it is suspicious. Alerting when a "Clear Event Log" is generated could point to this intruder technique.
Centrally collecting events has the added benefit of making it much harder for attackers to cover their tracks. Event Forwarding permits sources to forward multiple copies of a collected event to multiple collectors, thus enabling redundant event collection. Using a redundant event collection model can minimize the single point of failure risk.
|SubmissionDate=2016/04/14
|AnalyticType=Anomaly,
|InformationDomain=Host
|HostSubtypes=Event Records,
|IntellectualProperty=MITRE/NSA
|ATTACK References={{ATTACK Reference
|Technique=T1054
|Tactics=Defense Evasion,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Description=When an eventlog is cleared, a new event is created that alerts that the eventlog was cleared.  For System logs, its event code 104.  For Security logs, it is event code 1100 and 1102.
|Example Query=([log_name] == "System" and [event_code] in [1100, 1102]) or
([log_name] == "Security" and [event_code] == 104)
}}
|UnitTests={{Analytic Unit Test
|Configurations=Windows 7,
|Requirements=Administrator account, Powershell,
|Description=You can use the powershell cmdlet "Clear-Eventlog" to clear event logs.  Open Powershell as administrator and execute Clear-Eventlog

&lt;code&gt;Clear-EventLog [-LogName] &lt;String[]&gt;&lt;/code&gt;


https://technet.microsoft.com/en-us/library/hh849789.aspx
|Command=Clear-Eventlog Security
Clear-Eventlog System
}}
|AnalyticInstantiations=
|MITRE_IP=No
}}</text>
            <sha1>8nfvx8rryfdigse4p1syctsacgvjkf3</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2016-04-003</title>
        <ns>0</ns>
        <id>941</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10943</id>
            <parentid>10840</parentid>
            <timestamp>2016-06-30T00:07:27Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1569">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=User Activity from Stopping Windows Defensive Services
|Hypothesis=Spyware and malware remain a serious problem and Microsoft developed security services, Windows Defender and Windows Firewall, to combat this threat. In the event Windows Defender or Windows Firewall is turned off, administrators should correct the issue immediately to prevent the possibility of infection or further infection and investigate to determine if caused by crash or user manipulation.
|SubmissionDate=2016/04/15
|AnalyticType=Situational Awareness,
|InformationDomain=Host
|HostSubtypes=Process,
|AnalyticNotes=Stopping services events are Windows Event Code 7036.
|IntellectualProperty=MITRE/NSA
|ATTACK References={{ATTACK Reference
|Technique=T1054
|Tactics=Defense Evasion,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Description=Windows Event code 7036 from the System log identifies if a service has stopped or started.  This analytic looks for "Windows Defender" or "Windows Firewall" that has stopped.
|Example Query=log_name == "System" AND
event_code == "7036"
param1 in ["Windows Defender", "Windows Firewall"] AND
param2 == "stopped"
|Required Fields=service/stop/name,
}}
|UnitTests={{Analytic Unit Test
|Configurations=Windows 7,
|Requirements=Administrator account, Powershell,
|Description=from an administrative user powershell console, run the Stop-Service command
|Command=Stop-Service -displayname "Windows Firewall"
Stop-Service -displayname "Windows Defender"
}}
|AnalyticInstantiations=
|MITRE_IP=No
}}</text>
            <sha1>gj1p0mrjwpigs4ysqufc1aj3b80bosn</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2016-04-004</title>
        <ns>0</ns>
        <id>942</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>11015</id>
            <parentid>10880</parentid>
            <timestamp>2016-07-21T14:52:52Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1332">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=Successful Local Account Login
|Hypothesis=The successful use of Pass The Hash for lateral movement between workstations would trigger event ID 4624, with an event level of Information, from the security log. This behavior would be a LogonType of 3 using NTLM authentication where it is not a domain logon and not the ANONYMOUS LOGON account.
|SubmissionDate=2016/04/18
|AnalyticType=Situational Awareness,
|InformationDomain=Host
|HostSubtypes=Login,
|IntellectualProperty=MITRE/NSA
|ATTACK References={{ATTACK Reference
|Technique=T1075
|Tactics=Lateral Movement,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Description=This analytic will look for remote logins, using a non domain login, from one host to another, using NTL authentication where the account is not "ANONYMOUS LOGON"
|Example Query=EventCode == 4624 and [target_user_name] != "ANONYMOUS LOGON" and
[authentication_package_name] == "NTLM"
|Required Fields=user session/local/logon type,
}}
|UnitTests={{Analytic Unit Test
|Configurations=Windows 7,
|Requirements=Administrator account,
|Description=First, create a new user.  Then, logon to the host with that new user.  This is generate the event.
|Command=&gt; net user 'test' 'test' /add  # Creates the user
}}
|AnalyticInstantiations=
|MITRE_IP=No
}}</text>
            <sha1>gaiubtwwmg0rfapk3iqxumg7om99j79</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>CAR-2016-04-005</title>
        <ns>0</ns>
        <id>943</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10881</id>
            <parentid>10878</parentid>
            <timestamp>2016-06-27T14:55:27Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="932">{{Analytic
|MaximumInstantiationId=1
|ShortSummary=Remote Desktop Logon
|Hypothesis=A remote desktop logon, through RDP, may be typical of a system administrator or IT support, but only from select workstations.  Monitoring remote desktop logons and comparing to known/approved originating systems can detect lateral movement of an adversary.
|SubmissionDate=2016/04/19
|AnalyticType=Situational Awareness,
|InformationDomain=Host
|HostSubtypes=Login,
|IntellectualProperty=MITRE/NSA
|ATTACK References={{ATTACK Reference
|Technique=T1078
|Tactics=Lateral Movement,
|Coverage=Moderate
}}
|Pseudocode={{Analytic Pseudocode
|Description=Look in the system logs for remote logons using RDP
|Example Query=[EventCode] == 4624 and
[AuthenticationPackageName] == 'Negotiate' and
[Severity] == "Information" and
[LogonType] == 10
|Required Fields=user session/interactive/logon type,
}}
|UnitTests=
|AnalyticInstantiations=
|MITRE_IP=No
}}</text>
            <sha1>i5jq46fjrs4vuu5oc54v8cmkjc942n2</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Methodology</title>
        <ns>0</ns>
        <id>944</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10946</id>
            <timestamp>2016-06-30T14:53:30Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="454">CAR analytics were developed to detect the adversary behaviors in [[attack:Main Page|ATT&amp;CK]]. Development of an analytic is based upon the following activities:  
* identifying and prioritizing adversary behaviors from the ATT&amp;CK threat model 
* identifying the data necessary to detect the adversary behavior
* identification or creation of a sensor to collect the necessary data
* the actual creation of the analytic to detect the identified behaviors</text>
            <sha1>dah9qpfdzja40hvty7z5muu4d9seq4w</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Cyber Analytics Repository:Privacy policy</title>
        <ns>4</ns>
        <id>945</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10992</id>
            <timestamp>2016-06-30T19:10:41Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="4543">== MITRE respects the privacy of its website users. ==
MITRE respects the privacy of its website users. This privacy policy explains the types of information collected from site visitors, and how MITRE uses that information. The use of the MITRE website constitutes acceptance of this policy.

=== Information Collected from Web Traffic Reporting Tools ===

When users visit the MITRE website, the website server logs basic information about each visit. We process this information monthly via an automated software tool to identify any site performance issues, popular sections and content, and other important site characteristics. This information does not identify you personally. This information is used only as a source of anonymous statistical information. We may store such information ourselves, or it may be included in databases owned and maintained by our service providers.

MITRE employs cookies for collecting portions of this information. "Cookies" are data that may be sent to your web browser and stored on your computer. Most web browsers can be configured not to accept cookies, or to notify you if a cookie is sent to you. If you wish not to have cookies set during your visit to the MITRE website, you can disable them in your web browser. The raw log data is retained for a minimum of 90 days.

MITRE also uses a free third party software service called Google Analytics® to capture and analyze website usage information. This service supplies us with additional non-personally identifiable information about MITRE's website users to help us create content that our users may find useful. Users that wish to have their non-personally identifiable information not collected by means of their visit to the MITRE website have the option to opt-out of the Google Analytics tracking service via this link: https://tools.google.com/dlpage/gaoptout/.

=== Information Collected from E-mail and Web Forms ===

Users may contact MITRE by postal mail, telephone, or electronically, using information found on the Contact Us page. MITRE may share the information that you provide to us via e-mail within the corporation to respond to your queries, but we do not provide information to anyone outside of the corporation unless required by law to do so. We will never share your information with a third party for any commercial purpose.

=== Information Collected from Employment Applications ===

Users may apply for employment at MITRE from within the Employment section of our website, using the systems of one of our vendors. The information you supply is collected by our vendor and accessed by our vendor and MITRE during the application process. For additional information about our vendor's Privacy Policy, please see their website.

=== Information Collected from Third Party Software ===

When users visit the MITRE website, users may link to third party software when they link to another party's website. MITRE does not collect any information that may be collected by that third party; however, information you supply to that third party software may be collected and/or used by that party. For information about that third party's Privacy Policy, please see their respective website.

=== Information Collected from Third Party Media Sites ===

MITRE currently uses Facebook, LinkedIn, Twitter, and YouTube as third party media sites. MITRE does not collect any information that may be collected by that third party; however, information you supply to that third party software may be collected by that party. For information about that third party's Privacy Policy, please see their respective website.

=== Information Collected from Smartphone Applications ===

MITRE does not collect any information that may be collected by a smartphone application; however, information you supply to that smartphone application may be collected by that party. For information about that third party's Privacy Policy, please see their respective website.

=== Changes to Our Privacy Policy ===

The MITRE website may change from time to time. As a result, at times it may be necessary for us to make changes to this Privacy Policy. Accordingly, MITRE reserves the right to update or modify this Privacy Policy at any time and from time to time without prior notice. Please review this policy periodically, and especially before you provide any information. Your continued use of the MITRE website after any changes or revisions to this Privacy Policy shall indicate your agreement with the terms of such revised Privacy Policy.</text>
            <sha1>st7v4xgi703u0bz7z677qa5uxvy05t0</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Cyber Analytics Repository:About</title>
        <ns>4</ns>
        <id>946</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10993</id>
            <timestamp>2016-06-30T19:10:45Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="13">[Placeholder]</text>
            <sha1>gayvu4r9vordi8dxebslh3upkhzyr18</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Cyber Analytics Repository:General disclaimer</title>
        <ns>4</ns>
        <id>947</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10994</id>
            <timestamp>2016-06-30T19:10:52Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="0"/>
            <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Contribute</title>
        <ns>0</ns>
        <id>948</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10995</id>
            <timestamp>2016-06-30T19:12:37Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="2415">You can help contribute to CAR. 

CAR is in a constant state of development. We are always on the lookout for new information to help refine and extend CAR. If you have additional analytics you would like to contribute, then we would like to hear from you.

Please [mailto:car@mitre.org email us] to submit.

==Submission Guidelines==

===Timeliness===
We endeavor to vet submissions in a timely manner but we are busy people. You can expect a response that your submission has been received within 24 hours and an additional substantive response indicating acceptance or denial within one month. Please understand that an influx of submissions may cause our response times to slow down.  

===Content===
We understand that there are many analytics and many approaches to cybersecurity.  To that end, the Cyber Analytics Repository is focused on analytics for host-based sensing in Windows-based environments. Please see our [[Help:Glossary#Analytic_Type|Glossary]] to understand the kinds of categories into which we sort analytics. Analytics submitted should fall into one of these categories.

Our analytics are focused on processing host-level data collected in a real-time format.  We see the value of mitigations, vulnerabilities, forensic data, and repositories of indicators of compromise (IOCs) but that is not the focus of CAR.  Should you have submissions of those types of information, please consider resources such as CVE, IOC Bucket, or other open-source venues dedicated to that category of information.

The following criteria are a consideration for us when vetting analytic submissions:
# An analytic must address ATT&amp;CK™  tactics, techniques, and procedures (TTPs).
# Although we are unable to verify the truth of the submission,  an analytic should only be shared if it has been used in an operational setting.
# An analytic must detect behaviors, not a specific artifact or nuance of a RAT or piece of malware.
# We reserve the right to add new criteria over time as the vetting process evolves.  

=== Recognition ===
CAR is a public website whose purpose is meant to share analytics to further the community as a whole.  To that end, please do not submit analytics which are intended for patent.  

Analytics submitted by corporations or individuals will be recognized by the use of the following phrase on the analytic page.  “This analytic submitted by John C. Doe/XYZ Corporation.”
</text>
            <sha1>invxneeql193d6gjgv731tcm191v60d</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Windows Security Logs</title>
        <ns>0</ns>
        <id>949</id>
        <redirect xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" title="Windows Event Logs"/>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>10999</id>
            <timestamp>2016-07-05T17:26:00Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="32">#REDIRECT [[Windows Event Logs]]</text>
            <sha1>2cyf6ujbjup22t42e0uzz2do8oobrbv</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>MediaWiki:Aboutsite</title>
        <ns>8</ns>
        <id>950</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>11010</id>
            <timestamp>2016-07-15T19:41:06Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="1">-</text>
            <sha1>6za6z27cqk2qatlebqsiz85czbjf3rd</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>MediaWiki:Disclaimers</title>
        <ns>8</ns>
        <id>951</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>11011</id>
            <timestamp>2016-07-15T19:41:30Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="12">Terms of Use</text>
            <sha1>hovsbr8y4j1f5ve1s67n797nvzibcea</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>MediaWiki:Disclaimerpage</title>
        <ns>8</ns>
        <id>952</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>11012</id>
            <timestamp>2016-07-15T19:41:53Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="39">Cyber Analytics Repository:Terms of Use</text>
            <sha1>f0vlsztks57x8dgxyhawo4p6yx21wlp</sha1>
        </revision>
    </page>
    <page xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
        <title>Cyber Analytics Repository:Terms of Use</title>
        <ns>4</ns>
        <id>953</id>
        <revision xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
            <id>11013</id>
            <timestamp>2016-07-15T19:47:56Z</timestamp>
            <contributor xmlns:mw="http://www.mediawiki.org/xml/export-0.10/">
                <username>Default</username>
                <id>0</id>
            </contributor>
            <model>wikitext</model>
            <format>text/x-wiki</format>
            <text xmlns:mw="http://www.mediawiki.org/xml/export-0.10/" bytes="12470">Your use of this website is subject to certain terms and conditions.

Acceptance of Terms: By accessing and using the Site, you acknowledge that you have read, understood, and agree to be bound by these Terms of Use and the Privacy Policy referenced herein. If you do not accept these Terms of Use and the Privacy Policy you are not authorized to use this Site. MITRE may make modifications to the foregoing at any time and such modification will be effective upon posting to the Site. Your continued use of the Site after any modifications to these Terms of Use shall indicate your agreement with such modified terms.

Supplementary Terms: Some portions of the Site may have additional rules guidelines or terms posted. If there is a conflict between these Terms of Use and the rules, guidelines or terms posted for a specific area of the Site, the latter will govern regarding your use of that part of the Site.

Site Content: All content on this Site including, but not limited to software, text, graphics, images, video, audio and other material (collectively referred to as the "Content"), is the exclusive property of and owned by MITRE and/or other authorized Third Party Providers.  The Content may be owned by MITRE or may be provided through an arrangement MITRE has with others, including Third Party Providers, or other users of the Site. The Content is protected by copyright under both United States and foreign laws and may not be modified or altered in any way. Unauthorized use of the Content may violate copyright, trademark, and other laws.  You have no rights in or to the Content and you may not use the Content except as specifically provided in these Terms of Use.  You may access, copy, and print the Content on this Site provided you do not modify or delete any copyright, trademark or other proprietary notice that appears on the Content. No other use is permitted without prior written consent from MITRE or the owner of the Content. If you violate any part of these Terms of Use, your permission to access and/or use the Content and the Site automatically terminates without notice.

User Content: The Site may now or in the future permit the submission of Content at the direction of users of the Site ("User Content") and the hosting, sharing, and/or publishing of such User Content. You understand that whether or not such User Content is published, MITRE does not guarantee any confidentiality with respect to any submissions you make. You shall be solely responsible for User Content you submit and the consequences of our posting or publishing such User Content. MITRE reserves the right to decide whether User Content is appropriate and complies with these Terms of Use for copyright infringement and violations of intellectual property law, as well as other violations, such as, but not limited to, obscene or defamatory material, invasive of privacy rights, fraudulent, obscene, illegal, or otherwise objectionable. MITRE may remove such User Content and/or terminate your access for uploading such material in violation of these Terms of Use at any time, without prior notice and at our sole discretion.

Links to External Sites: The Site may contain links to third-party Web sites ("External Sites"). These links are provided solely as a convenience to you and not as an endorsement by MITRE of the information on such External Sites. The information on such External Sites is developed and provided by others. You should contact the External Site administrator if you have any concerns regarding such links or any information located on such External Sites. MITRE disclaims any responsibility or liability with regards to the information posted on these External Sites.

Permitted Use: The following Site activities are expressly prohibited: (i) collecting usernames and/or email addresses of other users by electronic or other means for the purpose of sending unsolicited email or other communications, (ii) any use of the Site, which in MITRE's sole judgment, degrades the reliability, speed, or operation of the Site or any underlying hardware or software thereof, (iii) you may not attempt to gain unauthorized access to any parts of the Site, (iv) you may not use any robot, spider, or other automated means to access the Site, (v) you may not access, download, use or export the Site, or the Content provided on the Site, in violation of U.S. export laws or regulations, or in violation of any other applicable laws or regulations, and (vi) any use of the Site which is unlawful or in violation of these Terms of Use.

Password Protection: Access to, and use of, any password protected areas of the Site is restricted to authorized users only and you may not share your password(s), account information, or access to the Site. You are responsible for maintaining the confidentiality of your password(s) and account information, and you are responsible for all activities that occur under your password(s) or account(s) or as a result of your access to the Site. You agree to notify MITRE immediately of any unauthorized use of your password(s) or account(s).

Copyright: If you are a copyright owner or an agent thereof and believe that any User Content or other Content infringes upon your copyrights, you may submit a notification pursuant to the Digital Millennium Copyright Act ("DMCA") by providing our Copyright Agent with the following information in writing (see 17 U.S.C 512(c)(3) for further detail):

(i) A physical or electronic signature of a person authorized to act on behalf of the owner of an exclusive right that is allegedly infringed;

(ii) Identification of the copyrighted work claimed to have been infringed, or, if multiple copyrighted works at a single online site are covered by a single notification, a representative list of such works at that site;

(iii) Identification of the material that is claimed to be infringing or to be the subject of infringing activity and that is to be removed or access to which is to be disabled and information reasonably sufficient to permit MITRE to locate the material;

(iv) Information reasonably sufficient to permit MITRE to contact you, such as an address, telephone number, and, if available, an electronic mail;

(v) A statement that you have a good faith belief that use of the material in the manner complained of is not authorized by the copyright owner, its agent, or the law; and

(vi) A statement that the information in the notification is accurate, and under penalty of perjury, that you are authorized to act on behalf of the owner of an exclusive right that is allegedly infringed.

MITRE's designated Copyright Agent to receive notifications of claimed infringement and other notices relating to User Content and/or violation of these Terms of Use (e.g., violations of criminal laws) is: General Counsel, The MITRE Corporation, 7515 Colshire Drive, McLean, VA 22102-7539

Note: Only DMCA notices and notices relating to complaints in connection with User Content or violations of these Terms of Use should go to the Copyright Agent.  Any other feedback, comments, and other communications should be sent to and addressed in the Contact Us link.

Indemnification:

You agree to defend, indemnify, and hold MITRE and other Third Party Providers harmless from and against any claims, actions or demands, including, without limitation, reasonable legal and accounting fees, arising or resulting from your breach of these Terms of Use or your uploading of, access to, or use or misuse of the Content, User Content or the Site. MITRE shall provide notice to you of any such claim, suit, or proceeding and may assist you, at your expense, in defending any such claim, suit or proceeding. MITRE reserves the right to assume the exclusive defense and control of any matter which is subject to indemnification under this section. In such case, you agree to cooperate with any reasonable requests assisting our defense of such matter.
Disclaimer of Warranty and Limitation of Liability:

WE, OUR AUTHORIZED THIRD PARTY PROVIDERS, AND OUR RESPECTIVE OFFICERS, DIRECTORS, EMPLOYEES, AGENTS, SUPPLIERS, OR LICENSORS, MAKE NO WARRANTIES OR REPRESENTATIONS ABOUT THE CONTENT (INCLUDING THE USER CONTENT), INCLUDING BUT NOT LIMITED TO ITS ACCURACY, RELIABILITY, COMPLETENESS, TIMELINESS, OR RELIABILITY. NEITHER WE NOR OUR AUTHORIZED THIRD PARTY PROVIDERS SHALL BE SUBJECT TO LIABILITY FOR TRUTH, ACCURACY, OR COMPLETENESS OF ANY INFORMATION CONVEYED TO THE USER OR FOR ERRORS, MISTAKES OR OMISSIONS THEREIN OR FOR ANY DELAYS OR INTERRUPTIONS OF THE DATA OR INFORMATION STREAM FROM WHATEVER CAUSE. YOU AGREE THAT YOU USE THE SITE AND THE CONTENT (INCLUDING THE USER CONTENT) AT YOUR OWN RISK. NEITHER WE NOR OUR AUTHORIZED THIRD PARTY PROVIDERS WARRANT THAT THE SITE WILL OPERATE ERROR FREE OR THAT THIS SITE, ITS SERVER, OR THE CONTENT (INCLUDING THE USER CONTENT) ARE FREE OF COMPUTER VIRUSES OR SIMILAR CONTAMINATION OR DESTRUCTIVE FEATURES. IF YOUR USE OF THE SITE OR THE CONTENT (INCLUDING THE USER CONTENT) RESULTS IN THE NEED FOR SERVICING OR REPLACING EQUIPMENT OR DATA, WE SHALL NOT BE RESPONSIBLE FOR THOSE COSTS. THE SITE AND CONTENT (INCLUDING THE USER CONTENT) ARE PROVIDED ON AN "AS IS" AND "AS AVAILABLE" BASIS WITHOUT ANY WARRANTIES OF ANY KIND. WE AND OUR AUTHORIZED THIRD PARTY PROVIDERS HEREBY DISCLAIM ALL WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE WARRANTY OF TITLE, MERCHANTABILITY, NON INFRINGEMENT OF THIRD PARTIES' RIGHTS, AND FITNESS FOR PARTICULAR PURPOSE. IN NO EVENT SHALL WE OR OUR AUTHORIZED THIRD PARTY PROVIDERS BE LIABLE FOR ANY DAMAGES WHATSOEVER (INCLUDING, WITHOUT LIMITATION, INCIDENTAL AND CONSEQUENTIAL DAMAGES, LOST PROFITS, OR DAMAGES RESULTING FROM LOST DATA OR BUSINESS INTERRUPTION) RESULTING FROM THE USE OR INABILITY TO USE THE SITE AND THE CONTENT (INCLUDING THE USER CONTENT), WHETHER BASED ON WARRANTY, CONTRACT, TORT (INCLUDING NEGLIGENCE), OR ANY OTHER LEGAL THEORY, EVEN IF A WE HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. YOU SPECIFICALLY ACKNOWLEDGE AND AGREE THAT NEITHER MITRE NOR ITS AUTHORIZED THIRD PARTY PROVIDERS SHALL BE LIABLE FOR ANY DEFAMATORY, OFFENSIVE OR ILLEGAL CONDUCT OF ANY USER OF THE SITE. YOUR SOLE AND EXCLUSIVE REMEDY FOR ANY OF THE ABOVE CLAIMS OR ANY DISPUTE WITH MITRE IS TO DISCONTINUE YOUR USE OF THE SITE. YOU AND MITRE AGREE THAT ANY CAUSE OF ACTION ARISING OUT OF OR RELATED TO THE SITE MUST COMMENCE WITHIN ONE (1) YEAR AFTER THE CAUSE OF ACTION ACCRUES OR THE CAUSE OF ACTION IS PERMANENTLY BARRED. BECAUSE SOME JURISDICTIONS DO NOT ALLOW LIMITATIONS ON HOW LONG AN IMPLIED WARRANTY LASTS, OR THE EXCLUSION OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES, ALL OR A PORTION OF THE ABOVE LIMITATIONS MAY NOT APPLY TO YOU. IN SUCH JURISDICTIONS, OUR AND OUR AUTHORIZED THIRD PARTY PROVIDER'S LIABILITY SHALL BE LIMITED TO THE GREATEST EXTENT PERMITTED BY LAW.
General:

These Terms of Use, and any rights and licenses granted hereunder, may not be transferred or assigned by you, but may be assigned by MITRE without restriction.  These Terms of Use are governed by the internal substantive laws of the Commonwealth of Virginia, without respect to its conflict of laws provisions. You expressly agree to submit to the exclusive personal jurisdiction of the state and federal courts sitting in Fairfax County in the Commonwealth of Virginia.

If any provision of these Terms of Use is found to be invalid by any court having competent jurisdiction, the invalidity of such provision shall not affect the validity of the remaining provisions of the Terms of Use, which shall remain in full force and effect. Failure by MITRE or our authorized Third Party Providers to act on or enforce any provision of the Terms of Use shall not be construed as a waiver of that provision or any other provision in these Terms of Use. No waiver shall be effective against us or our authorized Third Party Providers unless made in writing, and no such waiver shall be construed as a waiver in any other or subsequent instance.

Except as expressly agreed by us and you, these Terms of Use constitute the entire agreement between you and us with respect to the subject matter hereof, and supersede all previous or contemporaneous agreements, whether written or oral, between the parties with respect to such subject matter. If any provision these Terms of Use is unlawful, void or unenforceable, the remaining provisions of these Terms of Use shall remain valid.</text>
            <sha1>smttznch1eea2hqamp5n8jxmlo83zr8</sha1>
        </revision>
    </page>
</mediawiki>
