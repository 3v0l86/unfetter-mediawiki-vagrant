<?php
// This file is managed by puppet.
// See puppet/modules/role/templates/iabot/config.php.erb

// Activate this to run the bot on a specific page(s) for debugging purposes.
$debug = false;
$limitedRun = false;
$debugPage = array(
	'title' => '',
	'pageid' => 0,
);
// Use an int to run through a limited amount of articles.  Use 'test' to run
// the test pages.
$debugStyle = 20;

//Set the bot's UA
$userAgent = '<%= @user %> testing';

// Multithread settings.  Use this to speed up the bot's performance.  Do not
// use more than 50 workers. This increases network bandwidth.  The programs
// speed will be limited by the CPU, or the bandwidth, whichever one is
// slower.
$multithread = false;
$workers = false;
$workerLimit = 3;

// Progress memory file.  This allows the bot to resume where it left off in
// the event of a shutdown or a crash.
$memoryFile = '<%= @ia_dir %>/IABot';

// Wiki connection setup.
$apiURL = '<%= scope['::mediawiki::server_url'] %>/w/api.php';
$oauthURL = '<%= scope['::mediawiki::server_url'] %>/w/index.php?title=Special:OAuth';
$consumerKey = '<%= @consumer_key %>';
$consumerSecret = '<%= @consumer_secret %>';
$accessToken = '<%= @access_token %>';
$accessSecret = '<%= @access_secret %>';
$username = '<%= @user %>';

// Optional: Forces the run page to be read from another wiki.  Specify the
// index.php url of the wiki to be read from.
$wikirunpageURL = false;
$runpage = '';

// nobots template exclusion settings
$nobots = true;
$taskname = 'InternetArchiveBot';

// Log central API
$enableAPILogging = false;
$apiCall = '';
$expectedValue = true;
$decodeFunction = 'unserialize'; // Either json_decode or unserialize

// IA Error Mailing List
$enableMail = false;
$to = '';
$from = '';

// DB connection setup
$host = '127.0.0.1';
$port = '3306';
$user = 'iabot';
$pass = 'iabot';
$db = 'iabot';

// Wikipedia DB setup
$useWikiDB = false;
$wikihost = '';
$wikiport = '';
$wikiuser = '';
$wikipass = '';
$wikidb = '';
$revisiontable = '';
$texttable = '';
