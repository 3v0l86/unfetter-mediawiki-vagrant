<?php
// This file is managed by Puppet.

if ( PHP_SAPI !== 'cli' ) {
	header( 'Cache-control: no-cache' );
}

if ( isset( $_SERVER['SERVER_ADDR'] ) ) {
	ini_set( 'error_append_string', ' (' . $_SERVER['SERVER_ADDR'] . ')' );
}

require_once '<%= @script_dir %>/MWMultiVersion.php';
$multiVersion = MWMultiVersion::getInstance();
if ( $multiVersion === null ) {
	// If MWMultiVersion has not been configured at this point,
	// setup configuration for the default wiki.
	$multiVersion = MWMultiVersion::initializeForWiki( '<%= scope['::mediawiki::db_name'] %>' );
}

$wgHooks['wfShellWikiCmd'][] = 'MWMultiVersion::onWfShellMaintenanceCmd';

$wgExternalServers['<%= @extension_db_cluster %>'] = array(
	array(
		'host' => '<%= @db_host %>',
		'user' => '<%= @extension_cluster_db_user %>',
		'password' => '<%= @extension_cluster_db_pass %>',
		'dbname' => '<%= @extension_cluster_shared_db_name %>',
		'type' => 'mysql',
		'load' => 1,
		'flags' => DBO_DEBUG | DBO_DEFAULT,
	),
);

// This must be set *after* the DefaultSettings.php inclusion
$wgDBname = $multiVersion->getDatabase();

include_once __DIR__ . '/LoadWgConf.php';

foreach(
	array_merge(
		// Settings from default wiki
		glob( '/vagrant/settings.d/puppet-managed/*.php' ),
		glob( '/vagrant/settings.d/*.php' ),
		// Settings for this wiki
		glob( __DIR__ . "/$wgDBname/settings.d/puppet-managed/*.php" ),
		glob( __DIR__ . "/$wgDBname/settings.d/*.php" )
	) as $conffile
) {
	include_once $conffile;
}

if ( PHP_SAPI !== 'cli' ) {
	# T68399: set wgServer from inbound request
	$wgServer = WebRequest::detectServer();
}
